// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ScheduledBackup is the Schema for the scheduledbackups API
type ScheduledBackup struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput  `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput  `pulumi:"kind"`
	Metadata   metav1.ObjectMetaOutput `pulumi:"metadata"`
	// Specification of the desired behavior of the ScheduledBackup.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Spec ScheduledBackupSpecOutput `pulumi:"spec"`
	// Most recently observed status of the ScheduledBackup. This data may not be up
	// to date. Populated by the system. Read-only.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Status ScheduledBackupStatusPtrOutput `pulumi:"status"`
}

// NewScheduledBackup registers a new resource with the given unique name, arguments, and options.
func NewScheduledBackup(ctx *pulumi.Context,
	name string, args *ScheduledBackupArgs, opts ...pulumi.ResourceOption) (*ScheduledBackup, error) {
	if args == nil {
		args = &ScheduledBackupArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("postgresql.cnpg.io/v1")
	args.Kind = pulumi.StringPtr("ScheduledBackup")
	if args.Spec != nil {
		args.Spec = args.Spec.ToScheduledBackupSpecPtrOutput().ApplyT(func(v *ScheduledBackupSpec) *ScheduledBackupSpec { return v.Defaults() }).(ScheduledBackupSpecPtrOutput)
	}
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ScheduledBackup
	err := ctx.RegisterResource("kubernetes:postgresql.cnpg.io/v1:ScheduledBackup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetScheduledBackup gets an existing ScheduledBackup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetScheduledBackup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ScheduledBackupState, opts ...pulumi.ResourceOption) (*ScheduledBackup, error) {
	var resource ScheduledBackup
	err := ctx.ReadResource("kubernetes:postgresql.cnpg.io/v1:ScheduledBackup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ScheduledBackup resources.
type scheduledBackupState struct {
}

type ScheduledBackupState struct {
}

func (ScheduledBackupState) ElementType() reflect.Type {
	return reflect.TypeOf((*scheduledBackupState)(nil)).Elem()
}

type scheduledBackupArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
	// Specification of the desired behavior of the ScheduledBackup.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Spec *ScheduledBackupSpec `pulumi:"spec"`
	// Most recently observed status of the ScheduledBackup. This data may not be up
	// to date. Populated by the system. Read-only.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Status *ScheduledBackupStatus `pulumi:"status"`
}

// The set of arguments for constructing a ScheduledBackup resource.
type ScheduledBackupArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
	// Specification of the desired behavior of the ScheduledBackup.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Spec ScheduledBackupSpecPtrInput
	// Most recently observed status of the ScheduledBackup. This data may not be up
	// to date. Populated by the system. Read-only.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Status ScheduledBackupStatusPtrInput
}

func (ScheduledBackupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*scheduledBackupArgs)(nil)).Elem()
}

type ScheduledBackupInput interface {
	pulumi.Input

	ToScheduledBackupOutput() ScheduledBackupOutput
	ToScheduledBackupOutputWithContext(ctx context.Context) ScheduledBackupOutput
}

func (*ScheduledBackup) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackup)(nil)).Elem()
}

func (i *ScheduledBackup) ToScheduledBackupOutput() ScheduledBackupOutput {
	return i.ToScheduledBackupOutputWithContext(context.Background())
}

func (i *ScheduledBackup) ToScheduledBackupOutputWithContext(ctx context.Context) ScheduledBackupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupOutput)
}

type ScheduledBackupOutput struct{ *pulumi.OutputState }

func (ScheduledBackupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackup)(nil)).Elem()
}

func (o ScheduledBackupOutput) ToScheduledBackupOutput() ScheduledBackupOutput {
	return o
}

func (o ScheduledBackupOutput) ToScheduledBackupOutputWithContext(ctx context.Context) ScheduledBackupOutput {
	return o
}

func (o ScheduledBackupOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackup) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ScheduledBackupOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackup) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ScheduledBackupOutput) Metadata() metav1.ObjectMetaOutput {
	return o.ApplyT(func(v *ScheduledBackup) metav1.ObjectMetaOutput { return v.Metadata }).(metav1.ObjectMetaOutput)
}

// Specification of the desired behavior of the ScheduledBackup.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
func (o ScheduledBackupOutput) Spec() ScheduledBackupSpecOutput {
	return o.ApplyT(func(v *ScheduledBackup) ScheduledBackupSpecOutput { return v.Spec }).(ScheduledBackupSpecOutput)
}

// Most recently observed status of the ScheduledBackup. This data may not be up
// to date. Populated by the system. Read-only.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
func (o ScheduledBackupOutput) Status() ScheduledBackupStatusPtrOutput {
	return o.ApplyT(func(v *ScheduledBackup) ScheduledBackupStatusPtrOutput { return v.Status }).(ScheduledBackupStatusPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupInput)(nil)).Elem(), &ScheduledBackup{})
	pulumi.RegisterOutputType(ScheduledBackupOutput{})
}
