// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// Sleep represents the duration that the container should sleep before being terminated.
type PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleep struct {
	// Seconds is the number of seconds to sleep.
	Seconds int `pulumi:"seconds"`
}

// PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepArgs and PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepInput` via:
//
//	PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepArgs{...}
type PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutput() PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutput
	ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutput
}

// Sleep represents the duration that the container should sleep before being terminated.
type PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepArgs struct {
	// Seconds is the number of seconds to sleep.
	Seconds pulumi.IntInput `pulumi:"seconds"`
}

func (PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleep)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutput() PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutput)
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutput).ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepArgs, PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtr and PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutput
	ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutput
}

type poolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrType PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepArgs

func PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtr(v *PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepArgs) PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrInput {
	return (*poolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleep)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrType) ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrType) ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutput)
}

// Sleep represents the duration that the container should sleep before being terminated.
type PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleep)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutput() PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleep) *PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleep {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutput)
}

// Seconds is the number of seconds to sleep.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleep) int { return v.Seconds }).(pulumi.IntOutput)
}

type PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleep)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutput) Elem() PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleep) PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleep {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleep
		return ret
	}).(PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutput)
}

// Seconds is the number of seconds to sleep.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleep) *int {
		if v == nil {
			return nil
		}
		return &v.Seconds
	}).(pulumi.IntPtrOutput)
}

// Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
// for the backward compatibility. There are no validation of this field and
// lifecycle hooks will fail in runtime when tcp handler is specified.
type PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocket struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host *string `pulumi:"host"`
	// Number or name of the port to access on the container.
	// Number must be in the range 1 to 65535.
	// Name must be an IANA_SVC_NAME.
	Port interface{} `pulumi:"port"`
}

// PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketArgs and PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketInput` via:
//
//	PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketArgs{...}
type PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutput() PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutput
	ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutput
}

// Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
// for the backward compatibility. There are no validation of this field and
// lifecycle hooks will fail in runtime when tcp handler is specified.
type PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketArgs struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Number or name of the port to access on the container.
	// Number must be in the range 1 to 65535.
	// Name must be an IANA_SVC_NAME.
	Port pulumi.Input `pulumi:"port"`
}

func (PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocket)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutput() PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutput)
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutput).ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketArgs, PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtr and PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput
	ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput
}

type poolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrType PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketArgs

func PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtr(v *PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketArgs) PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrInput {
	return (*poolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocket)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrType) ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrType) ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput)
}

// Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
// for the backward compatibility. There are no validation of this field and
// lifecycle hooks will fail in runtime when tcp handler is specified.
type PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocket)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutput() PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocket) *PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocket {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocket) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container.
// Number must be in the range 1 to 65535.
// Name must be an IANA_SVC_NAME.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocket) interface{} { return v.Port }).(pulumi.AnyOutput)
}

type PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocket)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput) Elem() PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocket) PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocket {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocket
		return ret
	}).(PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocket) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container.
// Number must be in the range 1 to 65535.
// Name must be an IANA_SVC_NAME.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocket) interface{} {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.AnyOutput)
}

// PreStop is called immediately before a container is terminated due to an
// API request or management event such as liveness/startup probe failure,
// preemption, resource contention, etc. The handler is not called if the
// container crashes or exits. The Pod's termination grace period countdown begins before the
// PreStop hook is executed. Regardless of the outcome of the handler, the
// container will eventually terminate within the Pod's termination grace
// period (unless delayed by finalizers). Other management of the container blocks until the hook completes
// or until the termination grace period is reached.
// More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
type PoolerSpecTemplateSpecInitContainersLifecyclePreStop struct {
	// Exec specifies the action to take.
	Exec *PoolerSpecTemplateSpecInitContainersLifecyclePreStopExec `pulumi:"exec"`
	// HTTPGet specifies the http request to perform.
	HttpGet *PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGet `pulumi:"httpGet"`
	// Sleep represents the duration that the container should sleep before being terminated.
	Sleep *PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleep `pulumi:"sleep"`
	// Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
	// for the backward compatibility. There are no validation of this field and
	// lifecycle hooks will fail in runtime when tcp handler is specified.
	TcpSocket *PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocket `pulumi:"tcpSocket"`
}

// PoolerSpecTemplateSpecInitContainersLifecyclePreStopInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLifecyclePreStopArgs and PoolerSpecTemplateSpecInitContainersLifecyclePreStopOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLifecyclePreStopInput` via:
//
//	PoolerSpecTemplateSpecInitContainersLifecyclePreStopArgs{...}
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopOutput
	ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopOutput
}

// PreStop is called immediately before a container is terminated due to an
// API request or management event such as liveness/startup probe failure,
// preemption, resource contention, etc. The handler is not called if the
// container crashes or exits. The Pod's termination grace period countdown begins before the
// PreStop hook is executed. Regardless of the outcome of the handler, the
// container will eventually terminate within the Pod's termination grace
// period (unless delayed by finalizers). Other management of the container blocks until the hook completes
// or until the termination grace period is reached.
// More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopArgs struct {
	// Exec specifies the action to take.
	Exec PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrInput `pulumi:"exec"`
	// HTTPGet specifies the http request to perform.
	HttpGet PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrInput `pulumi:"httpGet"`
	// Sleep represents the duration that the container should sleep before being terminated.
	Sleep PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrInput `pulumi:"sleep"`
	// Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
	// for the backward compatibility. There are no validation of this field and
	// lifecycle hooks will fail in runtime when tcp handler is specified.
	TcpSocket PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrInput `pulumi:"tcpSocket"`
}

func (PoolerSpecTemplateSpecInitContainersLifecyclePreStopArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePreStop)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePreStopArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePreStopArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopOutput)
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePreStopArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePreStopArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopOutput).ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLifecyclePreStopArgs, PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtr and PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersLifecyclePreStopArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput
	ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput
}

type poolerSpecTemplateSpecInitContainersLifecyclePreStopPtrType PoolerSpecTemplateSpecInitContainersLifecyclePreStopArgs

func PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtr(v *PoolerSpecTemplateSpecInitContainersLifecyclePreStopArgs) PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrInput {
	return (*poolerSpecTemplateSpecInitContainersLifecyclePreStopPtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersLifecyclePreStopPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersLifecyclePreStop)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersLifecyclePreStopPtrType) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersLifecyclePreStopPtrType) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput)
}

// PreStop is called immediately before a container is terminated due to an
// API request or management event such as liveness/startup probe failure,
// preemption, resource contention, etc. The handler is not called if the
// container crashes or exits. The Pod's termination grace period countdown begins before the
// PreStop hook is executed. Regardless of the outcome of the handler, the
// container will eventually terminate within the Pod's termination grace
// period (unless delayed by finalizers). Other management of the container blocks until the hook completes
// or until the termination grace period is reached.
// More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLifecyclePreStopOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePreStop)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersLifecyclePreStop) *PoolerSpecTemplateSpecInitContainersLifecyclePreStop {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput)
}

// Exec specifies the action to take.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopOutput) Exec() PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLifecyclePreStop) *PoolerSpecTemplateSpecInitContainersLifecyclePreStopExec {
		return v.Exec
	}).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopOutput) HttpGet() PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLifecyclePreStop) *PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGet {
		return v.HttpGet
	}).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput)
}

// Sleep represents the duration that the container should sleep before being terminated.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopOutput) Sleep() PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLifecyclePreStop) *PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleep {
		return v.Sleep
	}).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput)
}

// Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
// for the backward compatibility. There are no validation of this field and
// lifecycle hooks will fail in runtime when tcp handler is specified.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopOutput) TcpSocket() PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLifecyclePreStop) *PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocket {
		return v.TcpSocket
	}).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput)
}

type PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersLifecyclePreStop)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput) Elem() PoolerSpecTemplateSpecInitContainersLifecyclePreStopOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLifecyclePreStop) PoolerSpecTemplateSpecInitContainersLifecyclePreStop {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersLifecyclePreStop
		return ret
	}).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopOutput)
}

// Exec specifies the action to take.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput) Exec() PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLifecyclePreStop) *PoolerSpecTemplateSpecInitContainersLifecyclePreStopExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput) HttpGet() PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLifecyclePreStop) *PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGet {
		if v == nil {
			return nil
		}
		return v.HttpGet
	}).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput)
}

// Sleep represents the duration that the container should sleep before being terminated.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput) Sleep() PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLifecyclePreStop) *PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleep {
		if v == nil {
			return nil
		}
		return v.Sleep
	}).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput)
}

// Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
// for the backward compatibility. There are no validation of this field and
// lifecycle hooks will fail in runtime when tcp handler is specified.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput) TcpSocket() PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLifecyclePreStop) *PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocket {
		if v == nil {
			return nil
		}
		return v.TcpSocket
	}).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput)
}

// Exec specifies the action to take.
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopExec struct {
	// Command is the command line to execute inside the container, the working directory for the
	// command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
	// not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
	// a shell, you need to explicitly call out to that shell.
	// Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command []string `pulumi:"command"`
}

// PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecArgs and PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecInput` via:
//
//	PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecArgs{...}
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutput
	ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutput
}

// Exec specifies the action to take.
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecArgs struct {
	// Command is the command line to execute inside the container, the working directory for the
	// command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
	// not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
	// a shell, you need to explicitly call out to that shell.
	// Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command pulumi.StringArrayInput `pulumi:"command"`
}

func (PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePreStopExec)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutput)
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutput).ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecArgs, PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtr and PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput
	ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput
}

type poolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrType PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecArgs

func PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtr(v *PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecArgs) PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrInput {
	return (*poolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersLifecyclePreStopExec)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrType) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrType) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput)
}

// Exec specifies the action to take.
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePreStopExec)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersLifecyclePreStopExec) *PoolerSpecTemplateSpecInitContainersLifecyclePreStopExec {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput)
}

// Command is the command line to execute inside the container, the working directory for the
// command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
// not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
// a shell, you need to explicitly call out to that shell.
// Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLifecyclePreStopExec) []string { return v.Command }).(pulumi.StringArrayOutput)
}

type PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersLifecyclePreStopExec)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput) Elem() PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLifecyclePreStopExec) PoolerSpecTemplateSpecInitContainersLifecyclePreStopExec {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersLifecyclePreStopExec
		return ret
	}).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutput)
}

// Command is the command line to execute inside the container, the working directory for the
// command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
// not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
// a shell, you need to explicitly call out to that shell.
// Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLifecyclePreStopExec) []string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringArrayOutput)
}

// HTTPGet specifies the http request to perform.
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGet struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set
	// "Host" in httpHeaders instead.
	Host *string `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders []PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeaders `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path *string `pulumi:"path"`
	// Name or number of the port to access on the container.
	// Number must be in the range 1 to 65535.
	// Name must be an IANA_SVC_NAME.
	Port interface{} `pulumi:"port"`
	// Scheme to use for connecting to the host.
	// Defaults to HTTP.
	Scheme *string `pulumi:"scheme"`
}

// PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetArgs and PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetInput` via:
//
//	PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetArgs{...}
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput
	ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput
}

// HTTPGet specifies the http request to perform.
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetArgs struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set
	// "Host" in httpHeaders instead.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayInput `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Name or number of the port to access on the container.
	// Number must be in the range 1 to 65535.
	// Name must be an IANA_SVC_NAME.
	Port pulumi.Input `pulumi:"port"`
	// Scheme to use for connecting to the host.
	// Defaults to HTTP.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGet)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput)
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput).ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetArgs, PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtr and PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput
	ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput
}

type poolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrType PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetArgs

func PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtr(v *PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetArgs) PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrInput {
	return (*poolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGet)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrType) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrType) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput)
}

// HTTPGet specifies the http request to perform.
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGet)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGet) *PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGet {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set
// "Host" in httpHeaders instead.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGet) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput) HttpHeaders() PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGet) []PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeaders {
		return v.HttpHeaders
	}).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGet) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container.
// Number must be in the range 1 to 65535.
// Name must be an IANA_SVC_NAME.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGet) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// Scheme to use for connecting to the host.
// Defaults to HTTP.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGet) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGet)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput) Elem() PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGet) PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGet {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGet
		return ret
	}).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set
// "Host" in httpHeaders instead.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput) HttpHeaders() PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGet) []PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeaders {
		if v == nil {
			return nil
		}
		return v.HttpHeaders
	}).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container.
// Number must be in the range 1 to 65535.
// Name must be an IANA_SVC_NAME.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGet) interface{} {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.AnyOutput)
}

// Scheme to use for connecting to the host.
// Defaults to HTTP.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeaders struct {
	// The header field name.
	// This will be canonicalized upon output, so case-variant names will be understood as the same header.
	Name string `pulumi:"name"`
	// The header field value
	Value string `pulumi:"value"`
}

// PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArgs and PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersInput` via:
//
//	PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArgs{...}
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersOutput
	ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersOutput
}

// HTTPHeader describes a custom header to be used in HTTP probes
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArgs struct {
	// The header field name.
	// This will be canonicalized upon output, so case-variant names will be understood as the same header.
	Name pulumi.StringInput `pulumi:"name"`
	// The header field value
	Value pulumi.StringInput `pulumi:"value"`
}

func (PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeaders)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersOutput)
}

// PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArray and PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayInput` via:
//
//	PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArray{ PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArgs{...} }
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayOutput
	ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayOutput
}

type PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArray []PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersInput

func (PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeaders)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArray) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArray) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeaders)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersOutput {
	return o
}

// The header field name.
// This will be canonicalized upon output, so case-variant names will be understood as the same header.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeaders) string { return v.Name }).(pulumi.StringOutput)
}

// The header field value
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeaders) string { return v.Value }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeaders)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeaders {
		return vs[0].([]PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeaders)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersOutput)
}

// Sleep represents the duration that the container should sleep before being terminated.
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleep struct {
	// Seconds is the number of seconds to sleep.
	Seconds int `pulumi:"seconds"`
}

// PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepArgs and PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepInput` via:
//
//	PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepArgs{...}
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutput
	ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutput
}

// Sleep represents the duration that the container should sleep before being terminated.
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepArgs struct {
	// Seconds is the number of seconds to sleep.
	Seconds pulumi.IntInput `pulumi:"seconds"`
}

func (PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleep)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutput)
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutput).ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepArgs, PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtr and PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput
	ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput
}

type poolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrType PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepArgs

func PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtr(v *PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepArgs) PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrInput {
	return (*poolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleep)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrType) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrType) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput)
}

// Sleep represents the duration that the container should sleep before being terminated.
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleep)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleep) *PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleep {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput)
}

// Seconds is the number of seconds to sleep.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutput) Seconds() pulumi.IntOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleep) int { return v.Seconds }).(pulumi.IntOutput)
}

type PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleep)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput) Elem() PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleep) PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleep {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleep
		return ret
	}).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutput)
}

// Seconds is the number of seconds to sleep.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput) Seconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleep) *int {
		if v == nil {
			return nil
		}
		return &v.Seconds
	}).(pulumi.IntPtrOutput)
}

// Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
// for the backward compatibility. There are no validation of this field and
// lifecycle hooks will fail in runtime when tcp handler is specified.
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocket struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host *string `pulumi:"host"`
	// Number or name of the port to access on the container.
	// Number must be in the range 1 to 65535.
	// Name must be an IANA_SVC_NAME.
	Port interface{} `pulumi:"port"`
}

// PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketArgs and PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketInput` via:
//
//	PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketArgs{...}
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutput
	ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutput
}

// Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
// for the backward compatibility. There are no validation of this field and
// lifecycle hooks will fail in runtime when tcp handler is specified.
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketArgs struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Number or name of the port to access on the container.
	// Number must be in the range 1 to 65535.
	// Name must be an IANA_SVC_NAME.
	Port pulumi.Input `pulumi:"port"`
}

func (PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocket)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutput)
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketArgs) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutput).ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketArgs, PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtr and PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput
	ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput
}

type poolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrType PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketArgs

func PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtr(v *PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketArgs) PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrInput {
	return (*poolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocket)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrType) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrType) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput)
}

// Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept
// for the backward compatibility. There are no validation of this field and
// lifecycle hooks will fail in runtime when tcp handler is specified.
type PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocket)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocket) *PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocket {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocket) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container.
// Number must be in the range 1 to 65535.
// Name must be an IANA_SVC_NAME.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocket) interface{} { return v.Port }).(pulumi.AnyOutput)
}

type PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocket)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput() PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput) ToPoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput) Elem() PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocket) PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocket {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocket
		return ret
	}).(PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocket) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container.
// Number must be in the range 1 to 65535.
// Name must be an IANA_SVC_NAME.
func (o PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocket) interface{} {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.AnyOutput)
}

// Periodic probe of container liveness.
// Container will be restarted if the probe fails.
// Cannot be updated.
// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type PoolerSpecTemplateSpecInitContainersLivenessProbe struct {
	// Exec specifies the action to take.
	Exec *PoolerSpecTemplateSpecInitContainersLivenessProbeExec `pulumi:"exec"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded.
	// Defaults to 3. Minimum value is 1.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// GRPC specifies an action involving a GRPC port.
	Grpc *PoolerSpecTemplateSpecInitContainersLivenessProbeGrpc `pulumi:"grpc"`
	// HTTPGet specifies the http request to perform.
	HttpGet *PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGet `pulumi:"httpGet"`
	// Number of seconds after the container has started before liveness probes are initiated.
	// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe.
	// Default to 10 seconds. Minimum value is 1.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed.
	// Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// TCPSocket specifies an action involving a TCP port.
	TcpSocket *PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocket `pulumi:"tcpSocket"`
	// Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
	// The grace period is the duration in seconds after the processes running in the pod are sent
	// a termination signal and the time when the processes are forcibly halted with a kill signal.
	// Set this value longer than the expected cleanup time for your process.
	// If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
	// value overrides the value provided by the pod spec.
	// Value must be non-negative integer. The value zero indicates stop immediately via
	// the kill signal (no opportunity to shut down).
	// This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
	// Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
	TerminationGracePeriodSeconds *int `pulumi:"terminationGracePeriodSeconds"`
	// Number of seconds after which the probe times out.
	// Defaults to 1 second. Minimum value is 1.
	// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// PoolerSpecTemplateSpecInitContainersLivenessProbeInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLivenessProbeArgs and PoolerSpecTemplateSpecInitContainersLivenessProbeOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLivenessProbeInput` via:
//
//	PoolerSpecTemplateSpecInitContainersLivenessProbeArgs{...}
type PoolerSpecTemplateSpecInitContainersLivenessProbeInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLivenessProbeOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeOutput
	ToPoolerSpecTemplateSpecInitContainersLivenessProbeOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeOutput
}

// Periodic probe of container liveness.
// Container will be restarted if the probe fails.
// Cannot be updated.
// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type PoolerSpecTemplateSpecInitContainersLivenessProbeArgs struct {
	// Exec specifies the action to take.
	Exec PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrInput `pulumi:"exec"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded.
	// Defaults to 3. Minimum value is 1.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// GRPC specifies an action involving a GRPC port.
	Grpc PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrInput `pulumi:"grpc"`
	// HTTPGet specifies the http request to perform.
	HttpGet PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrInput `pulumi:"httpGet"`
	// Number of seconds after the container has started before liveness probes are initiated.
	// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe.
	// Default to 10 seconds. Minimum value is 1.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed.
	// Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// TCPSocket specifies an action involving a TCP port.
	TcpSocket PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrInput `pulumi:"tcpSocket"`
	// Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
	// The grace period is the duration in seconds after the processes running in the pod are sent
	// a termination signal and the time when the processes are forcibly halted with a kill signal.
	// Set this value longer than the expected cleanup time for your process.
	// If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
	// value overrides the value provided by the pod spec.
	// Value must be non-negative integer. The value zero indicates stop immediately via
	// the kill signal (no opportunity to shut down).
	// This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
	// Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
	TerminationGracePeriodSeconds pulumi.IntPtrInput `pulumi:"terminationGracePeriodSeconds"`
	// Number of seconds after which the probe times out.
	// Defaults to 1 second. Minimum value is 1.
	// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (PoolerSpecTemplateSpecInitContainersLivenessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLivenessProbe)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersLivenessProbeArgs) ToPoolerSpecTemplateSpecInitContainersLivenessProbeOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLivenessProbeOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLivenessProbeArgs) ToPoolerSpecTemplateSpecInitContainersLivenessProbeOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLivenessProbeOutput)
}

func (i PoolerSpecTemplateSpecInitContainersLivenessProbeArgs) ToPoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput() PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLivenessProbePtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLivenessProbeArgs) ToPoolerSpecTemplateSpecInitContainersLivenessProbePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLivenessProbeOutput).ToPoolerSpecTemplateSpecInitContainersLivenessProbePtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersLivenessProbePtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLivenessProbeArgs, PoolerSpecTemplateSpecInitContainersLivenessProbePtr and PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLivenessProbePtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersLivenessProbeArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersLivenessProbePtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput() PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput
	ToPoolerSpecTemplateSpecInitContainersLivenessProbePtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput
}

type poolerSpecTemplateSpecInitContainersLivenessProbePtrType PoolerSpecTemplateSpecInitContainersLivenessProbeArgs

func PoolerSpecTemplateSpecInitContainersLivenessProbePtr(v *PoolerSpecTemplateSpecInitContainersLivenessProbeArgs) PoolerSpecTemplateSpecInitContainersLivenessProbePtrInput {
	return (*poolerSpecTemplateSpecInitContainersLivenessProbePtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersLivenessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersLivenessProbe)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersLivenessProbePtrType) ToPoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput() PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLivenessProbePtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersLivenessProbePtrType) ToPoolerSpecTemplateSpecInitContainersLivenessProbePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput)
}

// Periodic probe of container liveness.
// Container will be restarted if the probe fails.
// Cannot be updated.
// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type PoolerSpecTemplateSpecInitContainersLivenessProbeOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLivenessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLivenessProbe)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput() PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersLivenessProbePtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersLivenessProbe) *PoolerSpecTemplateSpecInitContainersLivenessProbe {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput)
}

// Exec specifies the action to take.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeOutput) Exec() PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLivenessProbe) *PoolerSpecTemplateSpecInitContainersLivenessProbeExec {
		return v.Exec
	}).(PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded.
// Defaults to 3. Minimum value is 1.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLivenessProbe) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// GRPC specifies an action involving a GRPC port.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeOutput) Grpc() PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLivenessProbe) *PoolerSpecTemplateSpecInitContainersLivenessProbeGrpc {
		return v.Grpc
	}).(PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeOutput) HttpGet() PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLivenessProbe) *PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGet {
		return v.HttpGet
	}).(PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput)
}

// Number of seconds after the container has started before liveness probes are initiated.
// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLivenessProbe) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe.
// Default to 10 seconds. Minimum value is 1.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLivenessProbe) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed.
// Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLivenessProbe) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// TCPSocket specifies an action involving a TCP port.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeOutput) TcpSocket() PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLivenessProbe) *PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocket {
		return v.TcpSocket
	}).(PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput)
}

// Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
// The grace period is the duration in seconds after the processes running in the pod are sent
// a termination signal and the time when the processes are forcibly halted with a kill signal.
// Set this value longer than the expected cleanup time for your process.
// If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
// value overrides the value provided by the pod spec.
// Value must be non-negative integer. The value zero indicates stop immediately via
// the kill signal (no opportunity to shut down).
// This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
// Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeOutput) TerminationGracePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLivenessProbe) *int { return v.TerminationGracePeriodSeconds }).(pulumi.IntPtrOutput)
}

// Number of seconds after which the probe times out.
// Defaults to 1 second. Minimum value is 1.
// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLivenessProbe) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersLivenessProbe)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput() PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput) Elem() PoolerSpecTemplateSpecInitContainersLivenessProbeOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLivenessProbe) PoolerSpecTemplateSpecInitContainersLivenessProbe {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersLivenessProbe
		return ret
	}).(PoolerSpecTemplateSpecInitContainersLivenessProbeOutput)
}

// Exec specifies the action to take.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput) Exec() PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLivenessProbe) *PoolerSpecTemplateSpecInitContainersLivenessProbeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded.
// Defaults to 3. Minimum value is 1.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// GRPC specifies an action involving a GRPC port.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput) Grpc() PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLivenessProbe) *PoolerSpecTemplateSpecInitContainersLivenessProbeGrpc {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput) HttpGet() PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLivenessProbe) *PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGet {
		if v == nil {
			return nil
		}
		return v.HttpGet
	}).(PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput)
}

// Number of seconds after the container has started before liveness probes are initiated.
// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe.
// Default to 10 seconds. Minimum value is 1.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed.
// Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// TCPSocket specifies an action involving a TCP port.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput) TcpSocket() PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLivenessProbe) *PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocket {
		if v == nil {
			return nil
		}
		return v.TcpSocket
	}).(PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput)
}

// Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
// The grace period is the duration in seconds after the processes running in the pod are sent
// a termination signal and the time when the processes are forcibly halted with a kill signal.
// Set this value longer than the expected cleanup time for your process.
// If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
// value overrides the value provided by the pod spec.
// Value must be non-negative integer. The value zero indicates stop immediately via
// the kill signal (no opportunity to shut down).
// This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
// Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput) TerminationGracePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.TerminationGracePeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Number of seconds after which the probe times out.
// Defaults to 1 second. Minimum value is 1.
// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLivenessProbe) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Exec specifies the action to take.
type PoolerSpecTemplateSpecInitContainersLivenessProbeExec struct {
	// Command is the command line to execute inside the container, the working directory for the
	// command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
	// not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
	// a shell, you need to explicitly call out to that shell.
	// Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command []string `pulumi:"command"`
}

// PoolerSpecTemplateSpecInitContainersLivenessProbeExecInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLivenessProbeExecArgs and PoolerSpecTemplateSpecInitContainersLivenessProbeExecOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLivenessProbeExecInput` via:
//
//	PoolerSpecTemplateSpecInitContainersLivenessProbeExecArgs{...}
type PoolerSpecTemplateSpecInitContainersLivenessProbeExecInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLivenessProbeExecOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeExecOutput
	ToPoolerSpecTemplateSpecInitContainersLivenessProbeExecOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeExecOutput
}

// Exec specifies the action to take.
type PoolerSpecTemplateSpecInitContainersLivenessProbeExecArgs struct {
	// Command is the command line to execute inside the container, the working directory for the
	// command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
	// not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
	// a shell, you need to explicitly call out to that shell.
	// Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command pulumi.StringArrayInput `pulumi:"command"`
}

func (PoolerSpecTemplateSpecInitContainersLivenessProbeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLivenessProbeExec)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersLivenessProbeExecArgs) ToPoolerSpecTemplateSpecInitContainersLivenessProbeExecOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeExecOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLivenessProbeExecOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLivenessProbeExecArgs) ToPoolerSpecTemplateSpecInitContainersLivenessProbeExecOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLivenessProbeExecOutput)
}

func (i PoolerSpecTemplateSpecInitContainersLivenessProbeExecArgs) ToPoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLivenessProbeExecArgs) ToPoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLivenessProbeExecOutput).ToPoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLivenessProbeExecArgs, PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtr and PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersLivenessProbeExecArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput
	ToPoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput
}

type poolerSpecTemplateSpecInitContainersLivenessProbeExecPtrType PoolerSpecTemplateSpecInitContainersLivenessProbeExecArgs

func PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtr(v *PoolerSpecTemplateSpecInitContainersLivenessProbeExecArgs) PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrInput {
	return (*poolerSpecTemplateSpecInitContainersLivenessProbeExecPtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersLivenessProbeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersLivenessProbeExec)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersLivenessProbeExecPtrType) ToPoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersLivenessProbeExecPtrType) ToPoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput)
}

// Exec specifies the action to take.
type PoolerSpecTemplateSpecInitContainersLivenessProbeExecOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLivenessProbeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLivenessProbeExec)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeExecOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeExecOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeExecOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeExecOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeExecOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeExecOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeExecOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeExecOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersLivenessProbeExec) *PoolerSpecTemplateSpecInitContainersLivenessProbeExec {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput)
}

// Command is the command line to execute inside the container, the working directory for the
// command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
// not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
// a shell, you need to explicitly call out to that shell.
// Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeExecOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLivenessProbeExec) []string { return v.Command }).(pulumi.StringArrayOutput)
}

type PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersLivenessProbeExec)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput) Elem() PoolerSpecTemplateSpecInitContainersLivenessProbeExecOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLivenessProbeExec) PoolerSpecTemplateSpecInitContainersLivenessProbeExec {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersLivenessProbeExec
		return ret
	}).(PoolerSpecTemplateSpecInitContainersLivenessProbeExecOutput)
}

// Command is the command line to execute inside the container, the working directory for the
// command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
// not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
// a shell, you need to explicitly call out to that shell.
// Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLivenessProbeExec) []string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringArrayOutput)
}

// GRPC specifies an action involving a GRPC port.
type PoolerSpecTemplateSpecInitContainersLivenessProbeGrpc struct {
	// Port number of the gRPC service. Number must be in the range 1 to 65535.
	Port int `pulumi:"port"`
	// Service is the name of the service to place in the gRPC HealthCheckRequest
	// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
	//
	// If this is not specified, the default behavior is defined by gRPC.
	Service *string `pulumi:"service"`
}

// PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcArgs and PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcInput` via:
//
//	PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcArgs{...}
type PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutput
	ToPoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutput
}

// GRPC specifies an action involving a GRPC port.
type PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcArgs struct {
	// Port number of the gRPC service. Number must be in the range 1 to 65535.
	Port pulumi.IntInput `pulumi:"port"`
	// Service is the name of the service to place in the gRPC HealthCheckRequest
	// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
	//
	// If this is not specified, the default behavior is defined by gRPC.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLivenessProbeGrpc)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcArgs) ToPoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcArgs) ToPoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutput)
}

func (i PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcArgs) ToPoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcArgs) ToPoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutput).ToPoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcArgs, PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtr and PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput
	ToPoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput
}

type poolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrType PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcArgs

func PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtr(v *PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcArgs) PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrInput {
	return (*poolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersLivenessProbeGrpc)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrType) ToPoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrType) ToPoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput)
}

// GRPC specifies an action involving a GRPC port.
type PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLivenessProbeGrpc)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersLivenessProbeGrpc) *PoolerSpecTemplateSpecInitContainersLivenessProbeGrpc {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput)
}

// Port number of the gRPC service. Number must be in the range 1 to 65535.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLivenessProbeGrpc) int { return v.Port }).(pulumi.IntOutput)
}

// Service is the name of the service to place in the gRPC HealthCheckRequest
// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
//
// If this is not specified, the default behavior is defined by gRPC.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLivenessProbeGrpc) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersLivenessProbeGrpc)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput) Elem() PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLivenessProbeGrpc) PoolerSpecTemplateSpecInitContainersLivenessProbeGrpc {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersLivenessProbeGrpc
		return ret
	}).(PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutput)
}

// Port number of the gRPC service. Number must be in the range 1 to 65535.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLivenessProbeGrpc) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Service is the name of the service to place in the gRPC HealthCheckRequest
// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
//
// If this is not specified, the default behavior is defined by gRPC.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLivenessProbeGrpc) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

// HTTPGet specifies the http request to perform.
type PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGet struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set
	// "Host" in httpHeaders instead.
	Host *string `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders []PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeaders `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path *string `pulumi:"path"`
	// Name or number of the port to access on the container.
	// Number must be in the range 1 to 65535.
	// Name must be an IANA_SVC_NAME.
	Port interface{} `pulumi:"port"`
	// Scheme to use for connecting to the host.
	// Defaults to HTTP.
	Scheme *string `pulumi:"scheme"`
}

// PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetArgs and PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetInput` via:
//
//	PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetArgs{...}
type PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput
	ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput
}

// HTTPGet specifies the http request to perform.
type PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetArgs struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set
	// "Host" in httpHeaders instead.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayInput `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Name or number of the port to access on the container.
	// Number must be in the range 1 to 65535.
	// Name must be an IANA_SVC_NAME.
	Port pulumi.Input `pulumi:"port"`
	// Scheme to use for connecting to the host.
	// Defaults to HTTP.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGet)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetArgs) ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetArgs) ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput)
}

func (i PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetArgs) ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetArgs) ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput).ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetArgs, PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtr and PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput
	ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput
}

type poolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrType PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetArgs

func PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtr(v *PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetArgs) PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrInput {
	return (*poolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGet)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrType) ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrType) ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput)
}

// HTTPGet specifies the http request to perform.
type PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGet)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGet) *PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGet {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set
// "Host" in httpHeaders instead.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGet) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput) HttpHeaders() PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGet) []PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeaders {
		return v.HttpHeaders
	}).(PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGet) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container.
// Number must be in the range 1 to 65535.
// Name must be an IANA_SVC_NAME.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGet) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// Scheme to use for connecting to the host.
// Defaults to HTTP.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGet) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGet)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput) Elem() PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGet) PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGet {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGet
		return ret
	}).(PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set
// "Host" in httpHeaders instead.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput) HttpHeaders() PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGet) []PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeaders {
		if v == nil {
			return nil
		}
		return v.HttpHeaders
	}).(PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container.
// Number must be in the range 1 to 65535.
// Name must be an IANA_SVC_NAME.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGet) interface{} {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.AnyOutput)
}

// Scheme to use for connecting to the host.
// Defaults to HTTP.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeaders struct {
	// The header field name.
	// This will be canonicalized upon output, so case-variant names will be understood as the same header.
	Name string `pulumi:"name"`
	// The header field value
	Value string `pulumi:"value"`
}

// PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArgs and PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersInput` via:
//
//	PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArgs{...}
type PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersOutput
	ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersOutput
}

// HTTPHeader describes a custom header to be used in HTTP probes
type PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArgs struct {
	// The header field name.
	// This will be canonicalized upon output, so case-variant names will be understood as the same header.
	Name pulumi.StringInput `pulumi:"name"`
	// The header field value
	Value pulumi.StringInput `pulumi:"value"`
}

func (PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArgs) ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArgs) ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersOutput)
}

// PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArray and PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayInput` via:
//
//	PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArray{ PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArgs{...} }
type PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayOutput
	ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayOutput
}

type PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArray []PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersInput

func (PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArray) ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArray) ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersOutput {
	return o
}

// The header field name.
// This will be canonicalized upon output, so case-variant names will be understood as the same header.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeaders) string { return v.Name }).(pulumi.StringOutput)
}

// The header field value
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeaders) string { return v.Value }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeaders {
		return vs[0].([]PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeaders)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersOutput)
}

// TCPSocket specifies an action involving a TCP port.
type PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocket struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host *string `pulumi:"host"`
	// Number or name of the port to access on the container.
	// Number must be in the range 1 to 65535.
	// Name must be an IANA_SVC_NAME.
	Port interface{} `pulumi:"port"`
}

// PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketArgs and PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketInput` via:
//
//	PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketArgs{...}
type PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutput
	ToPoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutput
}

// TCPSocket specifies an action involving a TCP port.
type PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketArgs struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Number or name of the port to access on the container.
	// Number must be in the range 1 to 65535.
	// Name must be an IANA_SVC_NAME.
	Port pulumi.Input `pulumi:"port"`
}

func (PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocket)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketArgs) ToPoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketArgs) ToPoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutput)
}

func (i PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketArgs) ToPoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketArgs) ToPoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutput).ToPoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketArgs, PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtr and PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput
	ToPoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput
}

type poolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrType PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketArgs

func PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtr(v *PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketArgs) PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrInput {
	return (*poolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocket)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrType) ToPoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrType) ToPoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput)
}

// TCPSocket specifies an action involving a TCP port.
type PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocket)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocket) *PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocket {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocket) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container.
// Number must be in the range 1 to 65535.
// Name must be an IANA_SVC_NAME.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocket) interface{} { return v.Port }).(pulumi.AnyOutput)
}

type PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocket)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput() PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput) ToPoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput) Elem() PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocket) PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocket {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocket
		return ret
	}).(PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocket) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container.
// Number must be in the range 1 to 65535.
// Name must be an IANA_SVC_NAME.
func (o PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocket) interface{} {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.AnyOutput)
}

// ContainerPort represents a network port in a single container.
type PoolerSpecTemplateSpecInitContainersPorts struct {
	// Number of port to expose on the pod's IP address.
	// This must be a valid port number, 0 < x < 65536.
	ContainerPort int `pulumi:"containerPort"`
	// What host IP to bind the external port to.
	HostIP *string `pulumi:"hostIP"`
	// Number of port to expose on the host.
	// If specified, this must be a valid port number, 0 < x < 65536.
	// If HostNetwork is specified, this must match ContainerPort.
	// Most containers do not need this.
	HostPort *int `pulumi:"hostPort"`
	// If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
	// named port in a pod must have a unique name. Name for the port that can be
	// referred to by services.
	Name *string `pulumi:"name"`
	// Protocol for port. Must be UDP, TCP, or SCTP.
	// Defaults to "TCP".
	Protocol *string `pulumi:"protocol"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecInitContainersPorts
func (val *PoolerSpecTemplateSpecInitContainersPorts) Defaults() *PoolerSpecTemplateSpecInitContainersPorts {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Protocol == nil {
		protocol_ := "TCP"
		tmp.Protocol = &protocol_
	}
	return &tmp
}

// PoolerSpecTemplateSpecInitContainersPortsInput is an input type that accepts PoolerSpecTemplateSpecInitContainersPortsArgs and PoolerSpecTemplateSpecInitContainersPortsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersPortsInput` via:
//
//	PoolerSpecTemplateSpecInitContainersPortsArgs{...}
type PoolerSpecTemplateSpecInitContainersPortsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersPortsOutput() PoolerSpecTemplateSpecInitContainersPortsOutput
	ToPoolerSpecTemplateSpecInitContainersPortsOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersPortsOutput
}

// ContainerPort represents a network port in a single container.
type PoolerSpecTemplateSpecInitContainersPortsArgs struct {
	// Number of port to expose on the pod's IP address.
	// This must be a valid port number, 0 < x < 65536.
	ContainerPort pulumi.IntInput `pulumi:"containerPort"`
	// What host IP to bind the external port to.
	HostIP pulumi.StringPtrInput `pulumi:"hostIP"`
	// Number of port to expose on the host.
	// If specified, this must be a valid port number, 0 < x < 65536.
	// If HostNetwork is specified, this must match ContainerPort.
	// Most containers do not need this.
	HostPort pulumi.IntPtrInput `pulumi:"hostPort"`
	// If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
	// named port in a pod must have a unique name. Name for the port that can be
	// referred to by services.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Protocol for port. Must be UDP, TCP, or SCTP.
	// Defaults to "TCP".
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecInitContainersPortsArgs
func (val *PoolerSpecTemplateSpecInitContainersPortsArgs) Defaults() *PoolerSpecTemplateSpecInitContainersPortsArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Protocol == nil {
		tmp.Protocol = pulumi.StringPtr("TCP")
	}
	return &tmp
}
func (PoolerSpecTemplateSpecInitContainersPortsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersPorts)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersPortsArgs) ToPoolerSpecTemplateSpecInitContainersPortsOutput() PoolerSpecTemplateSpecInitContainersPortsOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersPortsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersPortsArgs) ToPoolerSpecTemplateSpecInitContainersPortsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersPortsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersPortsOutput)
}

// PoolerSpecTemplateSpecInitContainersPortsArrayInput is an input type that accepts PoolerSpecTemplateSpecInitContainersPortsArray and PoolerSpecTemplateSpecInitContainersPortsArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersPortsArrayInput` via:
//
//	PoolerSpecTemplateSpecInitContainersPortsArray{ PoolerSpecTemplateSpecInitContainersPortsArgs{...} }
type PoolerSpecTemplateSpecInitContainersPortsArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersPortsArrayOutput() PoolerSpecTemplateSpecInitContainersPortsArrayOutput
	ToPoolerSpecTemplateSpecInitContainersPortsArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersPortsArrayOutput
}

type PoolerSpecTemplateSpecInitContainersPortsArray []PoolerSpecTemplateSpecInitContainersPortsInput

func (PoolerSpecTemplateSpecInitContainersPortsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecInitContainersPorts)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersPortsArray) ToPoolerSpecTemplateSpecInitContainersPortsArrayOutput() PoolerSpecTemplateSpecInitContainersPortsArrayOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersPortsArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersPortsArray) ToPoolerSpecTemplateSpecInitContainersPortsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersPortsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersPortsArrayOutput)
}

// ContainerPort represents a network port in a single container.
type PoolerSpecTemplateSpecInitContainersPortsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersPortsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersPorts)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersPortsOutput) ToPoolerSpecTemplateSpecInitContainersPortsOutput() PoolerSpecTemplateSpecInitContainersPortsOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersPortsOutput) ToPoolerSpecTemplateSpecInitContainersPortsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersPortsOutput {
	return o
}

// Number of port to expose on the pod's IP address.
// This must be a valid port number, 0 < x < 65536.
func (o PoolerSpecTemplateSpecInitContainersPortsOutput) ContainerPort() pulumi.IntOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersPorts) int { return v.ContainerPort }).(pulumi.IntOutput)
}

// What host IP to bind the external port to.
func (o PoolerSpecTemplateSpecInitContainersPortsOutput) HostIP() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersPorts) *string { return v.HostIP }).(pulumi.StringPtrOutput)
}

// Number of port to expose on the host.
// If specified, this must be a valid port number, 0 < x < 65536.
// If HostNetwork is specified, this must match ContainerPort.
// Most containers do not need this.
func (o PoolerSpecTemplateSpecInitContainersPortsOutput) HostPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersPorts) *int { return v.HostPort }).(pulumi.IntPtrOutput)
}

// If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
// named port in a pod must have a unique name. Name for the port that can be
// referred to by services.
func (o PoolerSpecTemplateSpecInitContainersPortsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersPorts) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Protocol for port. Must be UDP, TCP, or SCTP.
// Defaults to "TCP".
func (o PoolerSpecTemplateSpecInitContainersPortsOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersPorts) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecInitContainersPortsArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersPortsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecInitContainersPorts)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersPortsArrayOutput) ToPoolerSpecTemplateSpecInitContainersPortsArrayOutput() PoolerSpecTemplateSpecInitContainersPortsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersPortsArrayOutput) ToPoolerSpecTemplateSpecInitContainersPortsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersPortsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersPortsArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecInitContainersPortsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecInitContainersPorts {
		return vs[0].([]PoolerSpecTemplateSpecInitContainersPorts)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecInitContainersPortsOutput)
}

// Periodic probe of container service readiness.
// Container will be removed from service endpoints if the probe fails.
// Cannot be updated.
// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type PoolerSpecTemplateSpecInitContainersReadinessProbe struct {
	// Exec specifies the action to take.
	Exec *PoolerSpecTemplateSpecInitContainersReadinessProbeExec `pulumi:"exec"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded.
	// Defaults to 3. Minimum value is 1.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// GRPC specifies an action involving a GRPC port.
	Grpc *PoolerSpecTemplateSpecInitContainersReadinessProbeGrpc `pulumi:"grpc"`
	// HTTPGet specifies the http request to perform.
	HttpGet *PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGet `pulumi:"httpGet"`
	// Number of seconds after the container has started before liveness probes are initiated.
	// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe.
	// Default to 10 seconds. Minimum value is 1.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed.
	// Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// TCPSocket specifies an action involving a TCP port.
	TcpSocket *PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocket `pulumi:"tcpSocket"`
	// Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
	// The grace period is the duration in seconds after the processes running in the pod are sent
	// a termination signal and the time when the processes are forcibly halted with a kill signal.
	// Set this value longer than the expected cleanup time for your process.
	// If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
	// value overrides the value provided by the pod spec.
	// Value must be non-negative integer. The value zero indicates stop immediately via
	// the kill signal (no opportunity to shut down).
	// This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
	// Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
	TerminationGracePeriodSeconds *int `pulumi:"terminationGracePeriodSeconds"`
	// Number of seconds after which the probe times out.
	// Defaults to 1 second. Minimum value is 1.
	// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// PoolerSpecTemplateSpecInitContainersReadinessProbeInput is an input type that accepts PoolerSpecTemplateSpecInitContainersReadinessProbeArgs and PoolerSpecTemplateSpecInitContainersReadinessProbeOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersReadinessProbeInput` via:
//
//	PoolerSpecTemplateSpecInitContainersReadinessProbeArgs{...}
type PoolerSpecTemplateSpecInitContainersReadinessProbeInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersReadinessProbeOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeOutput
	ToPoolerSpecTemplateSpecInitContainersReadinessProbeOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeOutput
}

// Periodic probe of container service readiness.
// Container will be removed from service endpoints if the probe fails.
// Cannot be updated.
// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type PoolerSpecTemplateSpecInitContainersReadinessProbeArgs struct {
	// Exec specifies the action to take.
	Exec PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrInput `pulumi:"exec"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded.
	// Defaults to 3. Minimum value is 1.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// GRPC specifies an action involving a GRPC port.
	Grpc PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrInput `pulumi:"grpc"`
	// HTTPGet specifies the http request to perform.
	HttpGet PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrInput `pulumi:"httpGet"`
	// Number of seconds after the container has started before liveness probes are initiated.
	// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe.
	// Default to 10 seconds. Minimum value is 1.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed.
	// Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// TCPSocket specifies an action involving a TCP port.
	TcpSocket PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrInput `pulumi:"tcpSocket"`
	// Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
	// The grace period is the duration in seconds after the processes running in the pod are sent
	// a termination signal and the time when the processes are forcibly halted with a kill signal.
	// Set this value longer than the expected cleanup time for your process.
	// If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
	// value overrides the value provided by the pod spec.
	// Value must be non-negative integer. The value zero indicates stop immediately via
	// the kill signal (no opportunity to shut down).
	// This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
	// Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
	TerminationGracePeriodSeconds pulumi.IntPtrInput `pulumi:"terminationGracePeriodSeconds"`
	// Number of seconds after which the probe times out.
	// Defaults to 1 second. Minimum value is 1.
	// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (PoolerSpecTemplateSpecInitContainersReadinessProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersReadinessProbe)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersReadinessProbeArgs) ToPoolerSpecTemplateSpecInitContainersReadinessProbeOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersReadinessProbeOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersReadinessProbeArgs) ToPoolerSpecTemplateSpecInitContainersReadinessProbeOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersReadinessProbeOutput)
}

func (i PoolerSpecTemplateSpecInitContainersReadinessProbeArgs) ToPoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput() PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersReadinessProbePtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersReadinessProbeArgs) ToPoolerSpecTemplateSpecInitContainersReadinessProbePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersReadinessProbeOutput).ToPoolerSpecTemplateSpecInitContainersReadinessProbePtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersReadinessProbePtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersReadinessProbeArgs, PoolerSpecTemplateSpecInitContainersReadinessProbePtr and PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersReadinessProbePtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersReadinessProbeArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersReadinessProbePtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput() PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput
	ToPoolerSpecTemplateSpecInitContainersReadinessProbePtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput
}

type poolerSpecTemplateSpecInitContainersReadinessProbePtrType PoolerSpecTemplateSpecInitContainersReadinessProbeArgs

func PoolerSpecTemplateSpecInitContainersReadinessProbePtr(v *PoolerSpecTemplateSpecInitContainersReadinessProbeArgs) PoolerSpecTemplateSpecInitContainersReadinessProbePtrInput {
	return (*poolerSpecTemplateSpecInitContainersReadinessProbePtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersReadinessProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersReadinessProbe)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersReadinessProbePtrType) ToPoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput() PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersReadinessProbePtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersReadinessProbePtrType) ToPoolerSpecTemplateSpecInitContainersReadinessProbePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput)
}

// Periodic probe of container service readiness.
// Container will be removed from service endpoints if the probe fails.
// Cannot be updated.
// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type PoolerSpecTemplateSpecInitContainersReadinessProbeOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersReadinessProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersReadinessProbe)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput() PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersReadinessProbePtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersReadinessProbe) *PoolerSpecTemplateSpecInitContainersReadinessProbe {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput)
}

// Exec specifies the action to take.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeOutput) Exec() PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersReadinessProbe) *PoolerSpecTemplateSpecInitContainersReadinessProbeExec {
		return v.Exec
	}).(PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded.
// Defaults to 3. Minimum value is 1.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersReadinessProbe) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// GRPC specifies an action involving a GRPC port.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeOutput) Grpc() PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersReadinessProbe) *PoolerSpecTemplateSpecInitContainersReadinessProbeGrpc {
		return v.Grpc
	}).(PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeOutput) HttpGet() PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersReadinessProbe) *PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGet {
		return v.HttpGet
	}).(PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput)
}

// Number of seconds after the container has started before liveness probes are initiated.
// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersReadinessProbe) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe.
// Default to 10 seconds. Minimum value is 1.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersReadinessProbe) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed.
// Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersReadinessProbe) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// TCPSocket specifies an action involving a TCP port.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeOutput) TcpSocket() PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersReadinessProbe) *PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocket {
		return v.TcpSocket
	}).(PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput)
}

// Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
// The grace period is the duration in seconds after the processes running in the pod are sent
// a termination signal and the time when the processes are forcibly halted with a kill signal.
// Set this value longer than the expected cleanup time for your process.
// If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
// value overrides the value provided by the pod spec.
// Value must be non-negative integer. The value zero indicates stop immediately via
// the kill signal (no opportunity to shut down).
// This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
// Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeOutput) TerminationGracePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersReadinessProbe) *int {
		return v.TerminationGracePeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Number of seconds after which the probe times out.
// Defaults to 1 second. Minimum value is 1.
// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersReadinessProbe) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersReadinessProbe)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput() PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput) Elem() PoolerSpecTemplateSpecInitContainersReadinessProbeOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersReadinessProbe) PoolerSpecTemplateSpecInitContainersReadinessProbe {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersReadinessProbe
		return ret
	}).(PoolerSpecTemplateSpecInitContainersReadinessProbeOutput)
}

// Exec specifies the action to take.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput) Exec() PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersReadinessProbe) *PoolerSpecTemplateSpecInitContainersReadinessProbeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded.
// Defaults to 3. Minimum value is 1.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// GRPC specifies an action involving a GRPC port.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput) Grpc() PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersReadinessProbe) *PoolerSpecTemplateSpecInitContainersReadinessProbeGrpc {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput) HttpGet() PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersReadinessProbe) *PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGet {
		if v == nil {
			return nil
		}
		return v.HttpGet
	}).(PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput)
}

// Number of seconds after the container has started before liveness probes are initiated.
// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe.
// Default to 10 seconds. Minimum value is 1.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed.
// Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// TCPSocket specifies an action involving a TCP port.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput) TcpSocket() PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersReadinessProbe) *PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocket {
		if v == nil {
			return nil
		}
		return v.TcpSocket
	}).(PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput)
}

// Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
// The grace period is the duration in seconds after the processes running in the pod are sent
// a termination signal and the time when the processes are forcibly halted with a kill signal.
// Set this value longer than the expected cleanup time for your process.
// If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
// value overrides the value provided by the pod spec.
// Value must be non-negative integer. The value zero indicates stop immediately via
// the kill signal (no opportunity to shut down).
// This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
// Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput) TerminationGracePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.TerminationGracePeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Number of seconds after which the probe times out.
// Defaults to 1 second. Minimum value is 1.
// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersReadinessProbe) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Exec specifies the action to take.
type PoolerSpecTemplateSpecInitContainersReadinessProbeExec struct {
	// Command is the command line to execute inside the container, the working directory for the
	// command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
	// not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
	// a shell, you need to explicitly call out to that shell.
	// Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command []string `pulumi:"command"`
}

// PoolerSpecTemplateSpecInitContainersReadinessProbeExecInput is an input type that accepts PoolerSpecTemplateSpecInitContainersReadinessProbeExecArgs and PoolerSpecTemplateSpecInitContainersReadinessProbeExecOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersReadinessProbeExecInput` via:
//
//	PoolerSpecTemplateSpecInitContainersReadinessProbeExecArgs{...}
type PoolerSpecTemplateSpecInitContainersReadinessProbeExecInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersReadinessProbeExecOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeExecOutput
	ToPoolerSpecTemplateSpecInitContainersReadinessProbeExecOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeExecOutput
}

// Exec specifies the action to take.
type PoolerSpecTemplateSpecInitContainersReadinessProbeExecArgs struct {
	// Command is the command line to execute inside the container, the working directory for the
	// command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
	// not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
	// a shell, you need to explicitly call out to that shell.
	// Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command pulumi.StringArrayInput `pulumi:"command"`
}

func (PoolerSpecTemplateSpecInitContainersReadinessProbeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersReadinessProbeExec)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersReadinessProbeExecArgs) ToPoolerSpecTemplateSpecInitContainersReadinessProbeExecOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeExecOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersReadinessProbeExecOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersReadinessProbeExecArgs) ToPoolerSpecTemplateSpecInitContainersReadinessProbeExecOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersReadinessProbeExecOutput)
}

func (i PoolerSpecTemplateSpecInitContainersReadinessProbeExecArgs) ToPoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersReadinessProbeExecArgs) ToPoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersReadinessProbeExecOutput).ToPoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersReadinessProbeExecArgs, PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtr and PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersReadinessProbeExecArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput
	ToPoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput
}

type poolerSpecTemplateSpecInitContainersReadinessProbeExecPtrType PoolerSpecTemplateSpecInitContainersReadinessProbeExecArgs

func PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtr(v *PoolerSpecTemplateSpecInitContainersReadinessProbeExecArgs) PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrInput {
	return (*poolerSpecTemplateSpecInitContainersReadinessProbeExecPtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersReadinessProbeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersReadinessProbeExec)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersReadinessProbeExecPtrType) ToPoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersReadinessProbeExecPtrType) ToPoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput)
}

// Exec specifies the action to take.
type PoolerSpecTemplateSpecInitContainersReadinessProbeExecOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersReadinessProbeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersReadinessProbeExec)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeExecOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeExecOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeExecOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeExecOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeExecOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeExecOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeExecOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeExecOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersReadinessProbeExec) *PoolerSpecTemplateSpecInitContainersReadinessProbeExec {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput)
}

// Command is the command line to execute inside the container, the working directory for the
// command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
// not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
// a shell, you need to explicitly call out to that shell.
// Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeExecOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersReadinessProbeExec) []string { return v.Command }).(pulumi.StringArrayOutput)
}

type PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersReadinessProbeExec)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput) Elem() PoolerSpecTemplateSpecInitContainersReadinessProbeExecOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersReadinessProbeExec) PoolerSpecTemplateSpecInitContainersReadinessProbeExec {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersReadinessProbeExec
		return ret
	}).(PoolerSpecTemplateSpecInitContainersReadinessProbeExecOutput)
}

// Command is the command line to execute inside the container, the working directory for the
// command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
// not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
// a shell, you need to explicitly call out to that shell.
// Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersReadinessProbeExec) []string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringArrayOutput)
}

// GRPC specifies an action involving a GRPC port.
type PoolerSpecTemplateSpecInitContainersReadinessProbeGrpc struct {
	// Port number of the gRPC service. Number must be in the range 1 to 65535.
	Port int `pulumi:"port"`
	// Service is the name of the service to place in the gRPC HealthCheckRequest
	// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
	//
	// If this is not specified, the default behavior is defined by gRPC.
	Service *string `pulumi:"service"`
}

// PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcInput is an input type that accepts PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcArgs and PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcInput` via:
//
//	PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcArgs{...}
type PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutput
	ToPoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutput
}

// GRPC specifies an action involving a GRPC port.
type PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcArgs struct {
	// Port number of the gRPC service. Number must be in the range 1 to 65535.
	Port pulumi.IntInput `pulumi:"port"`
	// Service is the name of the service to place in the gRPC HealthCheckRequest
	// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
	//
	// If this is not specified, the default behavior is defined by gRPC.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersReadinessProbeGrpc)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcArgs) ToPoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcArgs) ToPoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutput)
}

func (i PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcArgs) ToPoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcArgs) ToPoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutput).ToPoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcArgs, PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtr and PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput
	ToPoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput
}

type poolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrType PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcArgs

func PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtr(v *PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcArgs) PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrInput {
	return (*poolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersReadinessProbeGrpc)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrType) ToPoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrType) ToPoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput)
}

// GRPC specifies an action involving a GRPC port.
type PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersReadinessProbeGrpc)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersReadinessProbeGrpc) *PoolerSpecTemplateSpecInitContainersReadinessProbeGrpc {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput)
}

// Port number of the gRPC service. Number must be in the range 1 to 65535.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersReadinessProbeGrpc) int { return v.Port }).(pulumi.IntOutput)
}

// Service is the name of the service to place in the gRPC HealthCheckRequest
// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
//
// If this is not specified, the default behavior is defined by gRPC.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersReadinessProbeGrpc) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersReadinessProbeGrpc)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput) Elem() PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersReadinessProbeGrpc) PoolerSpecTemplateSpecInitContainersReadinessProbeGrpc {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersReadinessProbeGrpc
		return ret
	}).(PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutput)
}

// Port number of the gRPC service. Number must be in the range 1 to 65535.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersReadinessProbeGrpc) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Service is the name of the service to place in the gRPC HealthCheckRequest
// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
//
// If this is not specified, the default behavior is defined by gRPC.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersReadinessProbeGrpc) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

// HTTPGet specifies the http request to perform.
type PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGet struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set
	// "Host" in httpHeaders instead.
	Host *string `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders []PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeaders `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path *string `pulumi:"path"`
	// Name or number of the port to access on the container.
	// Number must be in the range 1 to 65535.
	// Name must be an IANA_SVC_NAME.
	Port interface{} `pulumi:"port"`
	// Scheme to use for connecting to the host.
	// Defaults to HTTP.
	Scheme *string `pulumi:"scheme"`
}

// PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetInput is an input type that accepts PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetArgs and PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetInput` via:
//
//	PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetArgs{...}
type PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput
	ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput
}

// HTTPGet specifies the http request to perform.
type PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetArgs struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set
	// "Host" in httpHeaders instead.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayInput `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Name or number of the port to access on the container.
	// Number must be in the range 1 to 65535.
	// Name must be an IANA_SVC_NAME.
	Port pulumi.Input `pulumi:"port"`
	// Scheme to use for connecting to the host.
	// Defaults to HTTP.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGet)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetArgs) ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetArgs) ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput)
}

func (i PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetArgs) ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetArgs) ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput).ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetArgs, PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtr and PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput
	ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput
}

type poolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrType PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetArgs

func PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtr(v *PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetArgs) PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrInput {
	return (*poolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGet)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrType) ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrType) ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput)
}

// HTTPGet specifies the http request to perform.
type PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGet)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGet) *PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGet {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set
// "Host" in httpHeaders instead.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGet) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput) HttpHeaders() PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGet) []PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeaders {
		return v.HttpHeaders
	}).(PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGet) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container.
// Number must be in the range 1 to 65535.
// Name must be an IANA_SVC_NAME.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGet) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// Scheme to use for connecting to the host.
// Defaults to HTTP.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGet) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGet)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput) Elem() PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGet) PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGet {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGet
		return ret
	}).(PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set
// "Host" in httpHeaders instead.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput) HttpHeaders() PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGet) []PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeaders {
		if v == nil {
			return nil
		}
		return v.HttpHeaders
	}).(PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container.
// Number must be in the range 1 to 65535.
// Name must be an IANA_SVC_NAME.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGet) interface{} {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.AnyOutput)
}

// Scheme to use for connecting to the host.
// Defaults to HTTP.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeaders struct {
	// The header field name.
	// This will be canonicalized upon output, so case-variant names will be understood as the same header.
	Name string `pulumi:"name"`
	// The header field value
	Value string `pulumi:"value"`
}

// PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersInput is an input type that accepts PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArgs and PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersInput` via:
//
//	PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArgs{...}
type PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersOutput
	ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersOutput
}

// HTTPHeader describes a custom header to be used in HTTP probes
type PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArgs struct {
	// The header field name.
	// This will be canonicalized upon output, so case-variant names will be understood as the same header.
	Name pulumi.StringInput `pulumi:"name"`
	// The header field value
	Value pulumi.StringInput `pulumi:"value"`
}

func (PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArgs) ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArgs) ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersOutput)
}

// PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayInput is an input type that accepts PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArray and PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayInput` via:
//
//	PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArray{ PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArgs{...} }
type PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayOutput
	ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayOutput
}

type PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArray []PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersInput

func (PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArray) ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArray) ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersOutput {
	return o
}

// The header field name.
// This will be canonicalized upon output, so case-variant names will be understood as the same header.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeaders) string { return v.Name }).(pulumi.StringOutput)
}

// The header field value
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeaders) string { return v.Value }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeaders {
		return vs[0].([]PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeaders)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersOutput)
}

// TCPSocket specifies an action involving a TCP port.
type PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocket struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host *string `pulumi:"host"`
	// Number or name of the port to access on the container.
	// Number must be in the range 1 to 65535.
	// Name must be an IANA_SVC_NAME.
	Port interface{} `pulumi:"port"`
}

// PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketInput is an input type that accepts PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketArgs and PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketInput` via:
//
//	PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketArgs{...}
type PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutput
	ToPoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutput
}

// TCPSocket specifies an action involving a TCP port.
type PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketArgs struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Number or name of the port to access on the container.
	// Number must be in the range 1 to 65535.
	// Name must be an IANA_SVC_NAME.
	Port pulumi.Input `pulumi:"port"`
}

func (PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocket)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketArgs) ToPoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketArgs) ToPoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutput)
}

func (i PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketArgs) ToPoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketArgs) ToPoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutput).ToPoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketArgs, PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtr and PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput
	ToPoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput
}

type poolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrType PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketArgs

func PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtr(v *PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketArgs) PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrInput {
	return (*poolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocket)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrType) ToPoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrType) ToPoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput)
}

// TCPSocket specifies an action involving a TCP port.
type PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocket)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocket) *PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocket {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocket) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container.
// Number must be in the range 1 to 65535.
// Name must be an IANA_SVC_NAME.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocket) interface{} { return v.Port }).(pulumi.AnyOutput)
}

type PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocket)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput() PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput) ToPoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput) Elem() PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocket) PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocket {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocket
		return ret
	}).(PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocket) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container.
// Number must be in the range 1 to 65535.
// Name must be an IANA_SVC_NAME.
func (o PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocket) interface{} {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.AnyOutput)
}

// ContainerResizePolicy represents resource resize policy for the container.
type PoolerSpecTemplateSpecInitContainersResizePolicy struct {
	// Name of the resource to which this resource resize policy applies.
	// Supported values: cpu, memory.
	ResourceName string `pulumi:"resourceName"`
	// Restart policy to apply when specified resource is resized.
	// If not specified, it defaults to NotRequired.
	RestartPolicy string `pulumi:"restartPolicy"`
}

// PoolerSpecTemplateSpecInitContainersResizePolicyInput is an input type that accepts PoolerSpecTemplateSpecInitContainersResizePolicyArgs and PoolerSpecTemplateSpecInitContainersResizePolicyOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersResizePolicyInput` via:
//
//	PoolerSpecTemplateSpecInitContainersResizePolicyArgs{...}
type PoolerSpecTemplateSpecInitContainersResizePolicyInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersResizePolicyOutput() PoolerSpecTemplateSpecInitContainersResizePolicyOutput
	ToPoolerSpecTemplateSpecInitContainersResizePolicyOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersResizePolicyOutput
}

// ContainerResizePolicy represents resource resize policy for the container.
type PoolerSpecTemplateSpecInitContainersResizePolicyArgs struct {
	// Name of the resource to which this resource resize policy applies.
	// Supported values: cpu, memory.
	ResourceName pulumi.StringInput `pulumi:"resourceName"`
	// Restart policy to apply when specified resource is resized.
	// If not specified, it defaults to NotRequired.
	RestartPolicy pulumi.StringInput `pulumi:"restartPolicy"`
}

func (PoolerSpecTemplateSpecInitContainersResizePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersResizePolicy)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersResizePolicyArgs) ToPoolerSpecTemplateSpecInitContainersResizePolicyOutput() PoolerSpecTemplateSpecInitContainersResizePolicyOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersResizePolicyOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersResizePolicyArgs) ToPoolerSpecTemplateSpecInitContainersResizePolicyOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersResizePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersResizePolicyOutput)
}

// PoolerSpecTemplateSpecInitContainersResizePolicyArrayInput is an input type that accepts PoolerSpecTemplateSpecInitContainersResizePolicyArray and PoolerSpecTemplateSpecInitContainersResizePolicyArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersResizePolicyArrayInput` via:
//
//	PoolerSpecTemplateSpecInitContainersResizePolicyArray{ PoolerSpecTemplateSpecInitContainersResizePolicyArgs{...} }
type PoolerSpecTemplateSpecInitContainersResizePolicyArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersResizePolicyArrayOutput() PoolerSpecTemplateSpecInitContainersResizePolicyArrayOutput
	ToPoolerSpecTemplateSpecInitContainersResizePolicyArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersResizePolicyArrayOutput
}

type PoolerSpecTemplateSpecInitContainersResizePolicyArray []PoolerSpecTemplateSpecInitContainersResizePolicyInput

func (PoolerSpecTemplateSpecInitContainersResizePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecInitContainersResizePolicy)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersResizePolicyArray) ToPoolerSpecTemplateSpecInitContainersResizePolicyArrayOutput() PoolerSpecTemplateSpecInitContainersResizePolicyArrayOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersResizePolicyArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersResizePolicyArray) ToPoolerSpecTemplateSpecInitContainersResizePolicyArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersResizePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersResizePolicyArrayOutput)
}

// ContainerResizePolicy represents resource resize policy for the container.
type PoolerSpecTemplateSpecInitContainersResizePolicyOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersResizePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersResizePolicy)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersResizePolicyOutput) ToPoolerSpecTemplateSpecInitContainersResizePolicyOutput() PoolerSpecTemplateSpecInitContainersResizePolicyOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersResizePolicyOutput) ToPoolerSpecTemplateSpecInitContainersResizePolicyOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersResizePolicyOutput {
	return o
}

// Name of the resource to which this resource resize policy applies.
// Supported values: cpu, memory.
func (o PoolerSpecTemplateSpecInitContainersResizePolicyOutput) ResourceName() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersResizePolicy) string { return v.ResourceName }).(pulumi.StringOutput)
}

// Restart policy to apply when specified resource is resized.
// If not specified, it defaults to NotRequired.
func (o PoolerSpecTemplateSpecInitContainersResizePolicyOutput) RestartPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersResizePolicy) string { return v.RestartPolicy }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecInitContainersResizePolicyArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersResizePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecInitContainersResizePolicy)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersResizePolicyArrayOutput) ToPoolerSpecTemplateSpecInitContainersResizePolicyArrayOutput() PoolerSpecTemplateSpecInitContainersResizePolicyArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersResizePolicyArrayOutput) ToPoolerSpecTemplateSpecInitContainersResizePolicyArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersResizePolicyArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersResizePolicyArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecInitContainersResizePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecInitContainersResizePolicy {
		return vs[0].([]PoolerSpecTemplateSpecInitContainersResizePolicy)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecInitContainersResizePolicyOutput)
}

// Compute Resources required by this container.
// Cannot be updated.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
type PoolerSpecTemplateSpecInitContainersResources struct {
	// Claims lists the names of resources, defined in spec.resourceClaims,
	// that are used by this container.
	//
	// This is an alpha field and requires enabling the
	// DynamicResourceAllocation feature gate.
	//
	// This field is immutable. It can only be set for containers.
	Claims []PoolerSpecTemplateSpecInitContainersResourcesClaims `pulumi:"claims"`
	// Limits describes the maximum amount of compute resources allowed.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Limits map[string]interface{} `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required.
	// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
	// otherwise to an implementation-defined value. Requests cannot exceed Limits.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Requests map[string]interface{} `pulumi:"requests"`
}

// PoolerSpecTemplateSpecInitContainersResourcesInput is an input type that accepts PoolerSpecTemplateSpecInitContainersResourcesArgs and PoolerSpecTemplateSpecInitContainersResourcesOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersResourcesInput` via:
//
//	PoolerSpecTemplateSpecInitContainersResourcesArgs{...}
type PoolerSpecTemplateSpecInitContainersResourcesInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersResourcesOutput() PoolerSpecTemplateSpecInitContainersResourcesOutput
	ToPoolerSpecTemplateSpecInitContainersResourcesOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersResourcesOutput
}

// Compute Resources required by this container.
// Cannot be updated.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
type PoolerSpecTemplateSpecInitContainersResourcesArgs struct {
	// Claims lists the names of resources, defined in spec.resourceClaims,
	// that are used by this container.
	//
	// This is an alpha field and requires enabling the
	// DynamicResourceAllocation feature gate.
	//
	// This field is immutable. It can only be set for containers.
	Claims PoolerSpecTemplateSpecInitContainersResourcesClaimsArrayInput `pulumi:"claims"`
	// Limits describes the maximum amount of compute resources allowed.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Limits pulumi.MapInput `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required.
	// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
	// otherwise to an implementation-defined value. Requests cannot exceed Limits.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Requests pulumi.MapInput `pulumi:"requests"`
}

func (PoolerSpecTemplateSpecInitContainersResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersResources)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersResourcesArgs) ToPoolerSpecTemplateSpecInitContainersResourcesOutput() PoolerSpecTemplateSpecInitContainersResourcesOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersResourcesOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersResourcesArgs) ToPoolerSpecTemplateSpecInitContainersResourcesOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersResourcesOutput)
}

func (i PoolerSpecTemplateSpecInitContainersResourcesArgs) ToPoolerSpecTemplateSpecInitContainersResourcesPtrOutput() PoolerSpecTemplateSpecInitContainersResourcesPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersResourcesPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersResourcesArgs) ToPoolerSpecTemplateSpecInitContainersResourcesPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersResourcesOutput).ToPoolerSpecTemplateSpecInitContainersResourcesPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersResourcesPtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersResourcesArgs, PoolerSpecTemplateSpecInitContainersResourcesPtr and PoolerSpecTemplateSpecInitContainersResourcesPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersResourcesPtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersResourcesArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersResourcesPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersResourcesPtrOutput() PoolerSpecTemplateSpecInitContainersResourcesPtrOutput
	ToPoolerSpecTemplateSpecInitContainersResourcesPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersResourcesPtrOutput
}

type poolerSpecTemplateSpecInitContainersResourcesPtrType PoolerSpecTemplateSpecInitContainersResourcesArgs

func PoolerSpecTemplateSpecInitContainersResourcesPtr(v *PoolerSpecTemplateSpecInitContainersResourcesArgs) PoolerSpecTemplateSpecInitContainersResourcesPtrInput {
	return (*poolerSpecTemplateSpecInitContainersResourcesPtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersResources)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersResourcesPtrType) ToPoolerSpecTemplateSpecInitContainersResourcesPtrOutput() PoolerSpecTemplateSpecInitContainersResourcesPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersResourcesPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersResourcesPtrType) ToPoolerSpecTemplateSpecInitContainersResourcesPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersResourcesPtrOutput)
}

// Compute Resources required by this container.
// Cannot be updated.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
type PoolerSpecTemplateSpecInitContainersResourcesOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersResources)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersResourcesOutput) ToPoolerSpecTemplateSpecInitContainersResourcesOutput() PoolerSpecTemplateSpecInitContainersResourcesOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersResourcesOutput) ToPoolerSpecTemplateSpecInitContainersResourcesOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersResourcesOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersResourcesOutput) ToPoolerSpecTemplateSpecInitContainersResourcesPtrOutput() PoolerSpecTemplateSpecInitContainersResourcesPtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersResourcesPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersResourcesOutput) ToPoolerSpecTemplateSpecInitContainersResourcesPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersResourcesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersResources) *PoolerSpecTemplateSpecInitContainersResources {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersResourcesPtrOutput)
}

// Claims lists the names of resources, defined in spec.resourceClaims,
// that are used by this container.
//
// This is an alpha field and requires enabling the
// DynamicResourceAllocation feature gate.
//
// This field is immutable. It can only be set for containers.
func (o PoolerSpecTemplateSpecInitContainersResourcesOutput) Claims() PoolerSpecTemplateSpecInitContainersResourcesClaimsArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersResources) []PoolerSpecTemplateSpecInitContainersResourcesClaims {
		return v.Claims
	}).(PoolerSpecTemplateSpecInitContainersResourcesClaimsArrayOutput)
}

// Limits describes the maximum amount of compute resources allowed.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o PoolerSpecTemplateSpecInitContainersResourcesOutput) Limits() pulumi.MapOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersResources) map[string]interface{} { return v.Limits }).(pulumi.MapOutput)
}

// Requests describes the minimum amount of compute resources required.
// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
// otherwise to an implementation-defined value. Requests cannot exceed Limits.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o PoolerSpecTemplateSpecInitContainersResourcesOutput) Requests() pulumi.MapOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersResources) map[string]interface{} { return v.Requests }).(pulumi.MapOutput)
}

type PoolerSpecTemplateSpecInitContainersResourcesPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersResources)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersResourcesPtrOutput) ToPoolerSpecTemplateSpecInitContainersResourcesPtrOutput() PoolerSpecTemplateSpecInitContainersResourcesPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersResourcesPtrOutput) ToPoolerSpecTemplateSpecInitContainersResourcesPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersResourcesPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersResourcesPtrOutput) Elem() PoolerSpecTemplateSpecInitContainersResourcesOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersResources) PoolerSpecTemplateSpecInitContainersResources {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersResources
		return ret
	}).(PoolerSpecTemplateSpecInitContainersResourcesOutput)
}

// Claims lists the names of resources, defined in spec.resourceClaims,
// that are used by this container.
//
// This is an alpha field and requires enabling the
// DynamicResourceAllocation feature gate.
//
// This field is immutable. It can only be set for containers.
func (o PoolerSpecTemplateSpecInitContainersResourcesPtrOutput) Claims() PoolerSpecTemplateSpecInitContainersResourcesClaimsArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersResources) []PoolerSpecTemplateSpecInitContainersResourcesClaims {
		if v == nil {
			return nil
		}
		return v.Claims
	}).(PoolerSpecTemplateSpecInitContainersResourcesClaimsArrayOutput)
}

// Limits describes the maximum amount of compute resources allowed.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o PoolerSpecTemplateSpecInitContainersResourcesPtrOutput) Limits() pulumi.MapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersResources) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(pulumi.MapOutput)
}

// Requests describes the minimum amount of compute resources required.
// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
// otherwise to an implementation-defined value. Requests cannot exceed Limits.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o PoolerSpecTemplateSpecInitContainersResourcesPtrOutput) Requests() pulumi.MapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersResources) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(pulumi.MapOutput)
}

// ResourceClaim references one entry in PodSpec.ResourceClaims.
type PoolerSpecTemplateSpecInitContainersResourcesClaims struct {
	// Name must match the name of one entry in pod.spec.resourceClaims of
	// the Pod where this field is used. It makes that resource available
	// inside a container.
	Name string `pulumi:"name"`
}

// PoolerSpecTemplateSpecInitContainersResourcesClaimsInput is an input type that accepts PoolerSpecTemplateSpecInitContainersResourcesClaimsArgs and PoolerSpecTemplateSpecInitContainersResourcesClaimsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersResourcesClaimsInput` via:
//
//	PoolerSpecTemplateSpecInitContainersResourcesClaimsArgs{...}
type PoolerSpecTemplateSpecInitContainersResourcesClaimsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersResourcesClaimsOutput() PoolerSpecTemplateSpecInitContainersResourcesClaimsOutput
	ToPoolerSpecTemplateSpecInitContainersResourcesClaimsOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersResourcesClaimsOutput
}

// ResourceClaim references one entry in PodSpec.ResourceClaims.
type PoolerSpecTemplateSpecInitContainersResourcesClaimsArgs struct {
	// Name must match the name of one entry in pod.spec.resourceClaims of
	// the Pod where this field is used. It makes that resource available
	// inside a container.
	Name pulumi.StringInput `pulumi:"name"`
}

func (PoolerSpecTemplateSpecInitContainersResourcesClaimsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersResourcesClaims)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersResourcesClaimsArgs) ToPoolerSpecTemplateSpecInitContainersResourcesClaimsOutput() PoolerSpecTemplateSpecInitContainersResourcesClaimsOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersResourcesClaimsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersResourcesClaimsArgs) ToPoolerSpecTemplateSpecInitContainersResourcesClaimsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersResourcesClaimsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersResourcesClaimsOutput)
}

// PoolerSpecTemplateSpecInitContainersResourcesClaimsArrayInput is an input type that accepts PoolerSpecTemplateSpecInitContainersResourcesClaimsArray and PoolerSpecTemplateSpecInitContainersResourcesClaimsArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersResourcesClaimsArrayInput` via:
//
//	PoolerSpecTemplateSpecInitContainersResourcesClaimsArray{ PoolerSpecTemplateSpecInitContainersResourcesClaimsArgs{...} }
type PoolerSpecTemplateSpecInitContainersResourcesClaimsArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersResourcesClaimsArrayOutput() PoolerSpecTemplateSpecInitContainersResourcesClaimsArrayOutput
	ToPoolerSpecTemplateSpecInitContainersResourcesClaimsArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersResourcesClaimsArrayOutput
}

type PoolerSpecTemplateSpecInitContainersResourcesClaimsArray []PoolerSpecTemplateSpecInitContainersResourcesClaimsInput

func (PoolerSpecTemplateSpecInitContainersResourcesClaimsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecInitContainersResourcesClaims)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersResourcesClaimsArray) ToPoolerSpecTemplateSpecInitContainersResourcesClaimsArrayOutput() PoolerSpecTemplateSpecInitContainersResourcesClaimsArrayOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersResourcesClaimsArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersResourcesClaimsArray) ToPoolerSpecTemplateSpecInitContainersResourcesClaimsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersResourcesClaimsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersResourcesClaimsArrayOutput)
}

// ResourceClaim references one entry in PodSpec.ResourceClaims.
type PoolerSpecTemplateSpecInitContainersResourcesClaimsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersResourcesClaimsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersResourcesClaims)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersResourcesClaimsOutput) ToPoolerSpecTemplateSpecInitContainersResourcesClaimsOutput() PoolerSpecTemplateSpecInitContainersResourcesClaimsOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersResourcesClaimsOutput) ToPoolerSpecTemplateSpecInitContainersResourcesClaimsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersResourcesClaimsOutput {
	return o
}

// Name must match the name of one entry in pod.spec.resourceClaims of
// the Pod where this field is used. It makes that resource available
// inside a container.
func (o PoolerSpecTemplateSpecInitContainersResourcesClaimsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersResourcesClaims) string { return v.Name }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecInitContainersResourcesClaimsArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersResourcesClaimsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecInitContainersResourcesClaims)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersResourcesClaimsArrayOutput) ToPoolerSpecTemplateSpecInitContainersResourcesClaimsArrayOutput() PoolerSpecTemplateSpecInitContainersResourcesClaimsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersResourcesClaimsArrayOutput) ToPoolerSpecTemplateSpecInitContainersResourcesClaimsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersResourcesClaimsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersResourcesClaimsArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecInitContainersResourcesClaimsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecInitContainersResourcesClaims {
		return vs[0].([]PoolerSpecTemplateSpecInitContainersResourcesClaims)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecInitContainersResourcesClaimsOutput)
}

// Limits describes the maximum amount of compute resources allowed.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
type PoolerSpecTemplateSpecInitContainersResourcesLimits struct {
}

// Requests describes the minimum amount of compute resources required.
// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
// otherwise to an implementation-defined value. Requests cannot exceed Limits.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
type PoolerSpecTemplateSpecInitContainersResourcesRequests struct {
}

// SecurityContext defines the security options the container should be run with.
// If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
// More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
type PoolerSpecTemplateSpecInitContainersSecurityContext struct {
	// AllowPrivilegeEscalation controls whether a process can gain more
	// privileges than its parent process. This bool directly controls if
	// the no_new_privs flag will be set on the container process.
	// AllowPrivilegeEscalation is true always when the container is:
	// 1) run as Privileged
	// 2) has CAP_SYS_ADMIN
	//    Note that this field cannot be set when spec.os.name is windows.
	AllowPrivilegeEscalation *bool `pulumi:"allowPrivilegeEscalation"`
	// appArmorProfile is the AppArmor options to use by this container. If set, this profile
	// overrides the pod's appArmorProfile.
	// Note that this field cannot be set when spec.os.name is windows.
	AppArmorProfile *PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfile `pulumi:"appArmorProfile"`
	// The capabilities to add/drop when running containers.
	// Defaults to the default set of capabilities granted by the container runtime.
	// Note that this field cannot be set when spec.os.name is windows.
	Capabilities *PoolerSpecTemplateSpecInitContainersSecurityContextCapabilities `pulumi:"capabilities"`
	// Run container in privileged mode.
	// Processes in privileged containers are essentially equivalent to root on the host.
	// Defaults to false.
	// Note that this field cannot be set when spec.os.name is windows.
	Privileged *bool `pulumi:"privileged"`
	// procMount denotes the type of proc mount to use for the containers.
	// The default is DefaultProcMount which uses the container runtime defaults for
	// readonly paths and masked paths.
	// This requires the ProcMountType feature flag to be enabled.
	// Note that this field cannot be set when spec.os.name is windows.
	ProcMount *string `pulumi:"procMount"`
	// Whether this container has a read-only root filesystem.
	// Default is false.
	// Note that this field cannot be set when spec.os.name is windows.
	ReadOnlyRootFilesystem *bool `pulumi:"readOnlyRootFilesystem"`
	// The GID to run the entrypoint of the container process.
	// Uses runtime default if unset.
	// May also be set in PodSecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence.
	// Note that this field cannot be set when spec.os.name is windows.
	RunAsGroup *int `pulumi:"runAsGroup"`
	// Indicates that the container must run as a non-root user.
	// If true, the Kubelet will validate the image at runtime to ensure that it
	// does not run as UID 0 (root) and fail to start the container if it does.
	// If unset or false, no such validation will be performed.
	// May also be set in PodSecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsNonRoot *bool `pulumi:"runAsNonRoot"`
	// The UID to run the entrypoint of the container process.
	// Defaults to user specified in image metadata if unspecified.
	// May also be set in PodSecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence.
	// Note that this field cannot be set when spec.os.name is windows.
	RunAsUser *int `pulumi:"runAsUser"`
	// The SELinux context to be applied to the container.
	// If unspecified, the container runtime will allocate a random SELinux context for each
	// container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence.
	// Note that this field cannot be set when spec.os.name is windows.
	SeLinuxOptions *PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptions `pulumi:"seLinuxOptions"`
	// The seccomp options to use by this container. If seccomp options are
	// provided at both the pod & container level, the container options
	// override the pod options.
	// Note that this field cannot be set when spec.os.name is windows.
	SeccompProfile *PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfile `pulumi:"seccompProfile"`
	// The Windows specific settings applied to all containers.
	// If unspecified, the options from the PodSecurityContext will be used.
	// If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	// Note that this field cannot be set when spec.os.name is linux.
	WindowsOptions *PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptions `pulumi:"windowsOptions"`
}

// PoolerSpecTemplateSpecInitContainersSecurityContextInput is an input type that accepts PoolerSpecTemplateSpecInitContainersSecurityContextArgs and PoolerSpecTemplateSpecInitContainersSecurityContextOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersSecurityContextInput` via:
//
//	PoolerSpecTemplateSpecInitContainersSecurityContextArgs{...}
type PoolerSpecTemplateSpecInitContainersSecurityContextInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersSecurityContextOutput() PoolerSpecTemplateSpecInitContainersSecurityContextOutput
	ToPoolerSpecTemplateSpecInitContainersSecurityContextOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextOutput
}

// SecurityContext defines the security options the container should be run with.
// If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
// More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
type PoolerSpecTemplateSpecInitContainersSecurityContextArgs struct {
	// AllowPrivilegeEscalation controls whether a process can gain more
	// privileges than its parent process. This bool directly controls if
	// the no_new_privs flag will be set on the container process.
	// AllowPrivilegeEscalation is true always when the container is:
	// 1) run as Privileged
	// 2) has CAP_SYS_ADMIN
	//    Note that this field cannot be set when spec.os.name is windows.
	AllowPrivilegeEscalation pulumi.BoolPtrInput `pulumi:"allowPrivilegeEscalation"`
	// appArmorProfile is the AppArmor options to use by this container. If set, this profile
	// overrides the pod's appArmorProfile.
	// Note that this field cannot be set when spec.os.name is windows.
	AppArmorProfile PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrInput `pulumi:"appArmorProfile"`
	// The capabilities to add/drop when running containers.
	// Defaults to the default set of capabilities granted by the container runtime.
	// Note that this field cannot be set when spec.os.name is windows.
	Capabilities PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrInput `pulumi:"capabilities"`
	// Run container in privileged mode.
	// Processes in privileged containers are essentially equivalent to root on the host.
	// Defaults to false.
	// Note that this field cannot be set when spec.os.name is windows.
	Privileged pulumi.BoolPtrInput `pulumi:"privileged"`
	// procMount denotes the type of proc mount to use for the containers.
	// The default is DefaultProcMount which uses the container runtime defaults for
	// readonly paths and masked paths.
	// This requires the ProcMountType feature flag to be enabled.
	// Note that this field cannot be set when spec.os.name is windows.
	ProcMount pulumi.StringPtrInput `pulumi:"procMount"`
	// Whether this container has a read-only root filesystem.
	// Default is false.
	// Note that this field cannot be set when spec.os.name is windows.
	ReadOnlyRootFilesystem pulumi.BoolPtrInput `pulumi:"readOnlyRootFilesystem"`
	// The GID to run the entrypoint of the container process.
	// Uses runtime default if unset.
	// May also be set in PodSecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence.
	// Note that this field cannot be set when spec.os.name is windows.
	RunAsGroup pulumi.IntPtrInput `pulumi:"runAsGroup"`
	// Indicates that the container must run as a non-root user.
	// If true, the Kubelet will validate the image at runtime to ensure that it
	// does not run as UID 0 (root) and fail to start the container if it does.
	// If unset or false, no such validation will be performed.
	// May also be set in PodSecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsNonRoot pulumi.BoolPtrInput `pulumi:"runAsNonRoot"`
	// The UID to run the entrypoint of the container process.
	// Defaults to user specified in image metadata if unspecified.
	// May also be set in PodSecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence.
	// Note that this field cannot be set when spec.os.name is windows.
	RunAsUser pulumi.IntPtrInput `pulumi:"runAsUser"`
	// The SELinux context to be applied to the container.
	// If unspecified, the container runtime will allocate a random SELinux context for each
	// container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence.
	// Note that this field cannot be set when spec.os.name is windows.
	SeLinuxOptions PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrInput `pulumi:"seLinuxOptions"`
	// The seccomp options to use by this container. If seccomp options are
	// provided at both the pod & container level, the container options
	// override the pod options.
	// Note that this field cannot be set when spec.os.name is windows.
	SeccompProfile PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrInput `pulumi:"seccompProfile"`
	// The Windows specific settings applied to all containers.
	// If unspecified, the options from the PodSecurityContext will be used.
	// If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	// Note that this field cannot be set when spec.os.name is linux.
	WindowsOptions PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrInput `pulumi:"windowsOptions"`
}

func (PoolerSpecTemplateSpecInitContainersSecurityContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersSecurityContext)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersSecurityContextArgs) ToPoolerSpecTemplateSpecInitContainersSecurityContextOutput() PoolerSpecTemplateSpecInitContainersSecurityContextOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersSecurityContextOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersSecurityContextArgs) ToPoolerSpecTemplateSpecInitContainersSecurityContextOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersSecurityContextOutput)
}

func (i PoolerSpecTemplateSpecInitContainersSecurityContextArgs) ToPoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersSecurityContextPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersSecurityContextArgs) ToPoolerSpecTemplateSpecInitContainersSecurityContextPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersSecurityContextOutput).ToPoolerSpecTemplateSpecInitContainersSecurityContextPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersSecurityContextPtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersSecurityContextArgs, PoolerSpecTemplateSpecInitContainersSecurityContextPtr and PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersSecurityContextPtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersSecurityContextArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersSecurityContextPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput
	ToPoolerSpecTemplateSpecInitContainersSecurityContextPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput
}

type poolerSpecTemplateSpecInitContainersSecurityContextPtrType PoolerSpecTemplateSpecInitContainersSecurityContextArgs

func PoolerSpecTemplateSpecInitContainersSecurityContextPtr(v *PoolerSpecTemplateSpecInitContainersSecurityContextArgs) PoolerSpecTemplateSpecInitContainersSecurityContextPtrInput {
	return (*poolerSpecTemplateSpecInitContainersSecurityContextPtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersSecurityContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersSecurityContext)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersSecurityContextPtrType) ToPoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersSecurityContextPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersSecurityContextPtrType) ToPoolerSpecTemplateSpecInitContainersSecurityContextPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput)
}

// SecurityContext defines the security options the container should be run with.
// If set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.
// More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
type PoolerSpecTemplateSpecInitContainersSecurityContextOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersSecurityContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersSecurityContext)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextOutput() PoolerSpecTemplateSpecInitContainersSecurityContextOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersSecurityContextPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersSecurityContext) *PoolerSpecTemplateSpecInitContainersSecurityContext {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput)
}

// AllowPrivilegeEscalation controls whether a process can gain more
// privileges than its parent process. This bool directly controls if
// the no_new_privs flag will be set on the container process.
// AllowPrivilegeEscalation is true always when the container is:
//  1. run as Privileged
//  2. has CAP_SYS_ADMIN
//     Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextOutput) AllowPrivilegeEscalation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContext) *bool { return v.AllowPrivilegeEscalation }).(pulumi.BoolPtrOutput)
}

// appArmorProfile is the AppArmor options to use by this container. If set, this profile
// overrides the pod's appArmorProfile.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextOutput) AppArmorProfile() PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContext) *PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfile {
		return v.AppArmorProfile
	}).(PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput)
}

// The capabilities to add/drop when running containers.
// Defaults to the default set of capabilities granted by the container runtime.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextOutput) Capabilities() PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContext) *PoolerSpecTemplateSpecInitContainersSecurityContextCapabilities {
		return v.Capabilities
	}).(PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput)
}

// Run container in privileged mode.
// Processes in privileged containers are essentially equivalent to root on the host.
// Defaults to false.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextOutput) Privileged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContext) *bool { return v.Privileged }).(pulumi.BoolPtrOutput)
}

// procMount denotes the type of proc mount to use for the containers.
// The default is DefaultProcMount which uses the container runtime defaults for
// readonly paths and masked paths.
// This requires the ProcMountType feature flag to be enabled.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextOutput) ProcMount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContext) *string { return v.ProcMount }).(pulumi.StringPtrOutput)
}

// Whether this container has a read-only root filesystem.
// Default is false.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextOutput) ReadOnlyRootFilesystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContext) *bool { return v.ReadOnlyRootFilesystem }).(pulumi.BoolPtrOutput)
}

// The GID to run the entrypoint of the container process.
// Uses runtime default if unset.
// May also be set in PodSecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextOutput) RunAsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContext) *int { return v.RunAsGroup }).(pulumi.IntPtrOutput)
}

// Indicates that the container must run as a non-root user.
// If true, the Kubelet will validate the image at runtime to ensure that it
// does not run as UID 0 (root) and fail to start the container if it does.
// If unset or false, no such validation will be performed.
// May also be set in PodSecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextOutput) RunAsNonRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContext) *bool { return v.RunAsNonRoot }).(pulumi.BoolPtrOutput)
}

// The UID to run the entrypoint of the container process.
// Defaults to user specified in image metadata if unspecified.
// May also be set in PodSecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextOutput) RunAsUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContext) *int { return v.RunAsUser }).(pulumi.IntPtrOutput)
}

// The SELinux context to be applied to the container.
// If unspecified, the container runtime will allocate a random SELinux context for each
// container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextOutput) SeLinuxOptions() PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContext) *PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptions {
		return v.SeLinuxOptions
	}).(PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput)
}

// The seccomp options to use by this container. If seccomp options are
// provided at both the pod & container level, the container options
// override the pod options.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextOutput) SeccompProfile() PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContext) *PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfile {
		return v.SeccompProfile
	}).(PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput)
}

// The Windows specific settings applied to all containers.
// If unspecified, the options from the PodSecurityContext will be used.
// If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
// Note that this field cannot be set when spec.os.name is linux.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextOutput) WindowsOptions() PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContext) *PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptions {
		return v.WindowsOptions
	}).(PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput)
}

type PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersSecurityContext)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput) Elem() PoolerSpecTemplateSpecInitContainersSecurityContextOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContext) PoolerSpecTemplateSpecInitContainersSecurityContext {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersSecurityContext
		return ret
	}).(PoolerSpecTemplateSpecInitContainersSecurityContextOutput)
}

// AllowPrivilegeEscalation controls whether a process can gain more
// privileges than its parent process. This bool directly controls if
// the no_new_privs flag will be set on the container process.
// AllowPrivilegeEscalation is true always when the container is:
//  1. run as Privileged
//  2. has CAP_SYS_ADMIN
//     Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput) AllowPrivilegeEscalation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.AllowPrivilegeEscalation
	}).(pulumi.BoolPtrOutput)
}

// appArmorProfile is the AppArmor options to use by this container. If set, this profile
// overrides the pod's appArmorProfile.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput) AppArmorProfile() PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContext) *PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfile {
		if v == nil {
			return nil
		}
		return v.AppArmorProfile
	}).(PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput)
}

// The capabilities to add/drop when running containers.
// Defaults to the default set of capabilities granted by the container runtime.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput) Capabilities() PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContext) *PoolerSpecTemplateSpecInitContainersSecurityContextCapabilities {
		if v == nil {
			return nil
		}
		return v.Capabilities
	}).(PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput)
}

// Run container in privileged mode.
// Processes in privileged containers are essentially equivalent to root on the host.
// Defaults to false.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput) Privileged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.Privileged
	}).(pulumi.BoolPtrOutput)
}

// procMount denotes the type of proc mount to use for the containers.
// The default is DefaultProcMount which uses the container runtime defaults for
// readonly paths and masked paths.
// This requires the ProcMountType feature flag to be enabled.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput) ProcMount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContext) *string {
		if v == nil {
			return nil
		}
		return v.ProcMount
	}).(pulumi.StringPtrOutput)
}

// Whether this container has a read-only root filesystem.
// Default is false.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput) ReadOnlyRootFilesystem() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnlyRootFilesystem
	}).(pulumi.BoolPtrOutput)
}

// The GID to run the entrypoint of the container process.
// Uses runtime default if unset.
// May also be set in PodSecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput) RunAsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContext) *int {
		if v == nil {
			return nil
		}
		return v.RunAsGroup
	}).(pulumi.IntPtrOutput)
}

// Indicates that the container must run as a non-root user.
// If true, the Kubelet will validate the image at runtime to ensure that it
// does not run as UID 0 (root) and fail to start the container if it does.
// If unset or false, no such validation will be performed.
// May also be set in PodSecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput) RunAsNonRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.RunAsNonRoot
	}).(pulumi.BoolPtrOutput)
}

// The UID to run the entrypoint of the container process.
// Defaults to user specified in image metadata if unspecified.
// May also be set in PodSecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput) RunAsUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContext) *int {
		if v == nil {
			return nil
		}
		return v.RunAsUser
	}).(pulumi.IntPtrOutput)
}

// The SELinux context to be applied to the container.
// If unspecified, the container runtime will allocate a random SELinux context for each
// container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput) SeLinuxOptions() PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContext) *PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptions {
		if v == nil {
			return nil
		}
		return v.SeLinuxOptions
	}).(PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput)
}

// The seccomp options to use by this container. If seccomp options are
// provided at both the pod & container level, the container options
// override the pod options.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput) SeccompProfile() PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContext) *PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfile {
		if v == nil {
			return nil
		}
		return v.SeccompProfile
	}).(PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput)
}

// The Windows specific settings applied to all containers.
// If unspecified, the options from the PodSecurityContext will be used.
// If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
// Note that this field cannot be set when spec.os.name is linux.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput) WindowsOptions() PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContext) *PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptions {
		if v == nil {
			return nil
		}
		return v.WindowsOptions
	}).(PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput)
}

// appArmorProfile is the AppArmor options to use by this container. If set, this profile
// overrides the pod's appArmorProfile.
// Note that this field cannot be set when spec.os.name is windows.
type PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfile struct {
	// localhostProfile indicates a profile loaded on the node that should be used.
	// The profile must be preconfigured on the node to work.
	// Must match the loaded name of the profile.
	// Must be set if and only if type is "Localhost".
	LocalhostProfile *string `pulumi:"localhostProfile"`
	// type indicates which kind of AppArmor profile will be applied.
	// Valid options are:
	//   Localhost - a profile pre-loaded on the node.
	//   RuntimeDefault - the container runtime's default profile.
	//   Unconfined - no AppArmor enforcement.
	Type string `pulumi:"type"`
}

// PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileInput is an input type that accepts PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileArgs and PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileInput` via:
//
//	PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileArgs{...}
type PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutput() PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutput
	ToPoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutput
}

// appArmorProfile is the AppArmor options to use by this container. If set, this profile
// overrides the pod's appArmorProfile.
// Note that this field cannot be set when spec.os.name is windows.
type PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileArgs struct {
	// localhostProfile indicates a profile loaded on the node that should be used.
	// The profile must be preconfigured on the node to work.
	// Must match the loaded name of the profile.
	// Must be set if and only if type is "Localhost".
	LocalhostProfile pulumi.StringPtrInput `pulumi:"localhostProfile"`
	// type indicates which kind of AppArmor profile will be applied.
	// Valid options are:
	//   Localhost - a profile pre-loaded on the node.
	//   RuntimeDefault - the container runtime's default profile.
	//   Unconfined - no AppArmor enforcement.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfile)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileArgs) ToPoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutput() PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileArgs) ToPoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutput)
}

func (i PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileArgs) ToPoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileArgs) ToPoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutput).ToPoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileArgs, PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtr and PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput
	ToPoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput
}

type poolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrType PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileArgs

func PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtr(v *PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileArgs) PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrInput {
	return (*poolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfile)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrType) ToPoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrType) ToPoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput)
}

// appArmorProfile is the AppArmor options to use by this container. If set, this profile
// overrides the pod's appArmorProfile.
// Note that this field cannot be set when spec.os.name is windows.
type PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfile)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutput() PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfile) *PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfile {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput)
}

// localhostProfile indicates a profile loaded on the node that should be used.
// The profile must be preconfigured on the node to work.
// Must match the loaded name of the profile.
// Must be set if and only if type is "Localhost".
func (o PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfile) *string {
		return v.LocalhostProfile
	}).(pulumi.StringPtrOutput)
}

// type indicates which kind of AppArmor profile will be applied.
// Valid options are:
//
//	Localhost - a profile pre-loaded on the node.
//	RuntimeDefault - the container runtime's default profile.
//	Unconfined - no AppArmor enforcement.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfile) string { return v.Type }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfile)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput) Elem() PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfile) PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfile {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfile
		return ret
	}).(PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutput)
}

// localhostProfile indicates a profile loaded on the node that should be used.
// The profile must be preconfigured on the node to work.
// Must match the loaded name of the profile.
// Must be set if and only if type is "Localhost".
func (o PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfile) *string {
		if v == nil {
			return nil
		}
		return v.LocalhostProfile
	}).(pulumi.StringPtrOutput)
}

// type indicates which kind of AppArmor profile will be applied.
// Valid options are:
//
//	Localhost - a profile pre-loaded on the node.
//	RuntimeDefault - the container runtime's default profile.
//	Unconfined - no AppArmor enforcement.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfile) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The capabilities to add/drop when running containers.
// Defaults to the default set of capabilities granted by the container runtime.
// Note that this field cannot be set when spec.os.name is windows.
type PoolerSpecTemplateSpecInitContainersSecurityContextCapabilities struct {
	// Added capabilities
	Add []string `pulumi:"add"`
	// Removed capabilities
	Drop []string `pulumi:"drop"`
}

// PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesInput is an input type that accepts PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesArgs and PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesInput` via:
//
//	PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesArgs{...}
type PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutput() PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutput
	ToPoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutput
}

// The capabilities to add/drop when running containers.
// Defaults to the default set of capabilities granted by the container runtime.
// Note that this field cannot be set when spec.os.name is windows.
type PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesArgs struct {
	// Added capabilities
	Add pulumi.StringArrayInput `pulumi:"add"`
	// Removed capabilities
	Drop pulumi.StringArrayInput `pulumi:"drop"`
}

func (PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersSecurityContextCapabilities)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesArgs) ToPoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutput() PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesArgs) ToPoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutput)
}

func (i PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesArgs) ToPoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesArgs) ToPoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutput).ToPoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesArgs, PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtr and PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput
	ToPoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput
}

type poolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrType PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesArgs

func PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtr(v *PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesArgs) PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrInput {
	return (*poolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersSecurityContextCapabilities)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrType) ToPoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrType) ToPoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput)
}

// The capabilities to add/drop when running containers.
// Defaults to the default set of capabilities granted by the container runtime.
// Note that this field cannot be set when spec.os.name is windows.
type PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersSecurityContextCapabilities)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutput() PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersSecurityContextCapabilities) *PoolerSpecTemplateSpecInitContainersSecurityContextCapabilities {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput)
}

// Added capabilities
func (o PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutput) Add() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContextCapabilities) []string { return v.Add }).(pulumi.StringArrayOutput)
}

// Removed capabilities
func (o PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutput) Drop() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContextCapabilities) []string { return v.Drop }).(pulumi.StringArrayOutput)
}

type PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersSecurityContextCapabilities)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput) Elem() PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContextCapabilities) PoolerSpecTemplateSpecInitContainersSecurityContextCapabilities {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersSecurityContextCapabilities
		return ret
	}).(PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutput)
}

// Added capabilities
func (o PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput) Add() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContextCapabilities) []string {
		if v == nil {
			return nil
		}
		return v.Add
	}).(pulumi.StringArrayOutput)
}

// Removed capabilities
func (o PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput) Drop() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContextCapabilities) []string {
		if v == nil {
			return nil
		}
		return v.Drop
	}).(pulumi.StringArrayOutput)
}

// The SELinux context to be applied to the container.
// If unspecified, the container runtime will allocate a random SELinux context for each
// container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence.
// Note that this field cannot be set when spec.os.name is windows.
type PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptions struct {
	// Level is SELinux level label that applies to the container.
	Level *string `pulumi:"level"`
	// Role is a SELinux role label that applies to the container.
	Role *string `pulumi:"role"`
	// Type is a SELinux type label that applies to the container.
	Type *string `pulumi:"type"`
	// User is a SELinux user label that applies to the container.
	User *string `pulumi:"user"`
}

// PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsInput is an input type that accepts PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsArgs and PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsInput` via:
//
//	PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsArgs{...}
type PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutput() PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutput
	ToPoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutput
}

// The SELinux context to be applied to the container.
// If unspecified, the container runtime will allocate a random SELinux context for each
// container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence.
// Note that this field cannot be set when spec.os.name is windows.
type PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsArgs struct {
	// Level is SELinux level label that applies to the container.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// Role is a SELinux role label that applies to the container.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// Type is a SELinux type label that applies to the container.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User is a SELinux user label that applies to the container.
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsArgs) ToPoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutput() PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsArgs) ToPoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutput)
}

func (i PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsArgs) ToPoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsArgs) ToPoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutput).ToPoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsArgs, PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtr and PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput
	ToPoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput
}

type poolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrType PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsArgs

func PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtr(v *PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsArgs) PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrInput {
	return (*poolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrType) ToPoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrType) ToPoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput)
}

// The SELinux context to be applied to the container.
// If unspecified, the container runtime will allocate a random SELinux context for each
// container.  May also be set in PodSecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence.
// Note that this field cannot be set when spec.os.name is windows.
type PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutput() PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptions) *PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptions {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput)
}

// Level is SELinux level label that applies to the container.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptions) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// Role is a SELinux role label that applies to the container.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptions) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// Type is a SELinux type label that applies to the container.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User is a SELinux user label that applies to the container.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptions) *string { return v.User }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput) Elem() PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptions) PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptions {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptions
		return ret
	}).(PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutput)
}

// Level is SELinux level label that applies to the container.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// Role is a SELinux role label that applies to the container.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

// Type is a SELinux type label that applies to the container.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// User is a SELinux user label that applies to the container.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// The seccomp options to use by this container. If seccomp options are
// provided at both the pod & container level, the container options
// override the pod options.
// Note that this field cannot be set when spec.os.name is windows.
type PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfile struct {
	// localhostProfile indicates a profile defined in a file on the node should be used.
	// The profile must be preconfigured on the node to work.
	// Must be a descending path, relative to the kubelet's configured seccomp profile location.
	// Must be set if type is "Localhost". Must NOT be set for any other type.
	LocalhostProfile *string `pulumi:"localhostProfile"`
	// type indicates which kind of seccomp profile will be applied.
	// Valid options are:
	//
	// Localhost - a profile defined in a file on the node should be used.
	// RuntimeDefault - the container runtime default profile should be used.
	// Unconfined - no profile should be applied.
	Type string `pulumi:"type"`
}

// PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileInput is an input type that accepts PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileArgs and PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileInput` via:
//
//	PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileArgs{...}
type PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutput() PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutput
	ToPoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutput
}

// The seccomp options to use by this container. If seccomp options are
// provided at both the pod & container level, the container options
// override the pod options.
// Note that this field cannot be set when spec.os.name is windows.
type PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileArgs struct {
	// localhostProfile indicates a profile defined in a file on the node should be used.
	// The profile must be preconfigured on the node to work.
	// Must be a descending path, relative to the kubelet's configured seccomp profile location.
	// Must be set if type is "Localhost". Must NOT be set for any other type.
	LocalhostProfile pulumi.StringPtrInput `pulumi:"localhostProfile"`
	// type indicates which kind of seccomp profile will be applied.
	// Valid options are:
	//
	// Localhost - a profile defined in a file on the node should be used.
	// RuntimeDefault - the container runtime default profile should be used.
	// Unconfined - no profile should be applied.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfile)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileArgs) ToPoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutput() PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileArgs) ToPoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutput)
}

func (i PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileArgs) ToPoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileArgs) ToPoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutput).ToPoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileArgs, PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtr and PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput
	ToPoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput
}

type poolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrType PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileArgs

func PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtr(v *PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileArgs) PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrInput {
	return (*poolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfile)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrType) ToPoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrType) ToPoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput)
}

// The seccomp options to use by this container. If seccomp options are
// provided at both the pod & container level, the container options
// override the pod options.
// Note that this field cannot be set when spec.os.name is windows.
type PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfile)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutput() PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfile) *PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfile {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput)
}

// localhostProfile indicates a profile defined in a file on the node should be used.
// The profile must be preconfigured on the node to work.
// Must be a descending path, relative to the kubelet's configured seccomp profile location.
// Must be set if type is "Localhost". Must NOT be set for any other type.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfile) *string {
		return v.LocalhostProfile
	}).(pulumi.StringPtrOutput)
}

// type indicates which kind of seccomp profile will be applied.
// Valid options are:
//
// Localhost - a profile defined in a file on the node should be used.
// RuntimeDefault - the container runtime default profile should be used.
// Unconfined - no profile should be applied.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfile) string { return v.Type }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfile)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput) Elem() PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfile) PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfile {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfile
		return ret
	}).(PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutput)
}

// localhostProfile indicates a profile defined in a file on the node should be used.
// The profile must be preconfigured on the node to work.
// Must be a descending path, relative to the kubelet's configured seccomp profile location.
// Must be set if type is "Localhost". Must NOT be set for any other type.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfile) *string {
		if v == nil {
			return nil
		}
		return v.LocalhostProfile
	}).(pulumi.StringPtrOutput)
}

// type indicates which kind of seccomp profile will be applied.
// Valid options are:
//
// Localhost - a profile defined in a file on the node should be used.
// RuntimeDefault - the container runtime default profile should be used.
// Unconfined - no profile should be applied.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfile) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The Windows specific settings applied to all containers.
// If unspecified, the options from the PodSecurityContext will be used.
// If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
// Note that this field cannot be set when spec.os.name is linux.
type PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptions struct {
	// GMSACredentialSpec is where the GMSA admission webhook
	// (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
	// GMSA credential spec named by the GMSACredentialSpecName field.
	GmsaCredentialSpec *string `pulumi:"gmsaCredentialSpec"`
	// GMSACredentialSpecName is the name of the GMSA credential spec to use.
	GmsaCredentialSpecName *string `pulumi:"gmsaCredentialSpecName"`
	// HostProcess determines if a container should be run as a 'Host Process' container.
	// All of a Pod's containers must have the same effective HostProcess value
	// (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
	// In addition, if HostProcess is true then HostNetwork must also be set to true.
	HostProcess *bool `pulumi:"hostProcess"`
	// The UserName in Windows to run the entrypoint of the container process.
	// Defaults to the user specified in image metadata if unspecified.
	// May also be set in PodSecurityContext. If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsUserName *string `pulumi:"runAsUserName"`
}

// PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsInput is an input type that accepts PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsArgs and PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsInput` via:
//
//	PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsArgs{...}
type PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutput() PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutput
	ToPoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutput
}

// The Windows specific settings applied to all containers.
// If unspecified, the options from the PodSecurityContext will be used.
// If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
// Note that this field cannot be set when spec.os.name is linux.
type PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsArgs struct {
	// GMSACredentialSpec is where the GMSA admission webhook
	// (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
	// GMSA credential spec named by the GMSACredentialSpecName field.
	GmsaCredentialSpec pulumi.StringPtrInput `pulumi:"gmsaCredentialSpec"`
	// GMSACredentialSpecName is the name of the GMSA credential spec to use.
	GmsaCredentialSpecName pulumi.StringPtrInput `pulumi:"gmsaCredentialSpecName"`
	// HostProcess determines if a container should be run as a 'Host Process' container.
	// All of a Pod's containers must have the same effective HostProcess value
	// (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
	// In addition, if HostProcess is true then HostNetwork must also be set to true.
	HostProcess pulumi.BoolPtrInput `pulumi:"hostProcess"`
	// The UserName in Windows to run the entrypoint of the container process.
	// Defaults to the user specified in image metadata if unspecified.
	// May also be set in PodSecurityContext. If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsUserName pulumi.StringPtrInput `pulumi:"runAsUserName"`
}

func (PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptions)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsArgs) ToPoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutput() PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsArgs) ToPoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutput)
}

func (i PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsArgs) ToPoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsArgs) ToPoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutput).ToPoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsArgs, PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtr and PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput
	ToPoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput
}

type poolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrType PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsArgs

func PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtr(v *PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsArgs) PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrInput {
	return (*poolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptions)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrType) ToPoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrType) ToPoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput)
}

// The Windows specific settings applied to all containers.
// If unspecified, the options from the PodSecurityContext will be used.
// If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
// Note that this field cannot be set when spec.os.name is linux.
type PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptions)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutput() PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptions) *PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptions {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput)
}

// GMSACredentialSpec is where the GMSA admission webhook
// (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
// GMSA credential spec named by the GMSACredentialSpecName field.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutput) GmsaCredentialSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptions) *string {
		return v.GmsaCredentialSpec
	}).(pulumi.StringPtrOutput)
}

// GMSACredentialSpecName is the name of the GMSA credential spec to use.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutput) GmsaCredentialSpecName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptions) *string {
		return v.GmsaCredentialSpecName
	}).(pulumi.StringPtrOutput)
}

// HostProcess determines if a container should be run as a 'Host Process' container.
// All of a Pod's containers must have the same effective HostProcess value
// (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
// In addition, if HostProcess is true then HostNetwork must also be set to true.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutput) HostProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptions) *bool { return v.HostProcess }).(pulumi.BoolPtrOutput)
}

// The UserName in Windows to run the entrypoint of the container process.
// Defaults to the user specified in image metadata if unspecified.
// May also be set in PodSecurityContext. If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutput) RunAsUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptions) *string {
		return v.RunAsUserName
	}).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptions)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput() PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput) ToPoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput) Elem() PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptions) PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptions {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptions
		return ret
	}).(PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutput)
}

// GMSACredentialSpec is where the GMSA admission webhook
// (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
// GMSA credential spec named by the GMSACredentialSpecName field.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput) GmsaCredentialSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.GmsaCredentialSpec
	}).(pulumi.StringPtrOutput)
}

// GMSACredentialSpecName is the name of the GMSA credential spec to use.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput) GmsaCredentialSpecName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.GmsaCredentialSpecName
	}).(pulumi.StringPtrOutput)
}

// HostProcess determines if a container should be run as a 'Host Process' container.
// All of a Pod's containers must have the same effective HostProcess value
// (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
// In addition, if HostProcess is true then HostNetwork must also be set to true.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput) HostProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptions) *bool {
		if v == nil {
			return nil
		}
		return v.HostProcess
	}).(pulumi.BoolPtrOutput)
}

// The UserName in Windows to run the entrypoint of the container process.
// Defaults to the user specified in image metadata if unspecified.
// May also be set in PodSecurityContext. If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput) RunAsUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.RunAsUserName
	}).(pulumi.StringPtrOutput)
}

// StartupProbe indicates that the Pod has successfully initialized.
// If specified, no other probes are executed until this completes successfully.
// If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
// This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
// when it might take a long time to load data or warm a cache, than during steady-state operation.
// This cannot be updated.
// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type PoolerSpecTemplateSpecInitContainersStartupProbe struct {
	// Exec specifies the action to take.
	Exec *PoolerSpecTemplateSpecInitContainersStartupProbeExec `pulumi:"exec"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded.
	// Defaults to 3. Minimum value is 1.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// GRPC specifies an action involving a GRPC port.
	Grpc *PoolerSpecTemplateSpecInitContainersStartupProbeGrpc `pulumi:"grpc"`
	// HTTPGet specifies the http request to perform.
	HttpGet *PoolerSpecTemplateSpecInitContainersStartupProbeHttpGet `pulumi:"httpGet"`
	// Number of seconds after the container has started before liveness probes are initiated.
	// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe.
	// Default to 10 seconds. Minimum value is 1.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed.
	// Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// TCPSocket specifies an action involving a TCP port.
	TcpSocket *PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocket `pulumi:"tcpSocket"`
	// Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
	// The grace period is the duration in seconds after the processes running in the pod are sent
	// a termination signal and the time when the processes are forcibly halted with a kill signal.
	// Set this value longer than the expected cleanup time for your process.
	// If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
	// value overrides the value provided by the pod spec.
	// Value must be non-negative integer. The value zero indicates stop immediately via
	// the kill signal (no opportunity to shut down).
	// This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
	// Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
	TerminationGracePeriodSeconds *int `pulumi:"terminationGracePeriodSeconds"`
	// Number of seconds after which the probe times out.
	// Defaults to 1 second. Minimum value is 1.
	// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// PoolerSpecTemplateSpecInitContainersStartupProbeInput is an input type that accepts PoolerSpecTemplateSpecInitContainersStartupProbeArgs and PoolerSpecTemplateSpecInitContainersStartupProbeOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersStartupProbeInput` via:
//
//	PoolerSpecTemplateSpecInitContainersStartupProbeArgs{...}
type PoolerSpecTemplateSpecInitContainersStartupProbeInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersStartupProbeOutput() PoolerSpecTemplateSpecInitContainersStartupProbeOutput
	ToPoolerSpecTemplateSpecInitContainersStartupProbeOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeOutput
}

// StartupProbe indicates that the Pod has successfully initialized.
// If specified, no other probes are executed until this completes successfully.
// If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
// This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
// when it might take a long time to load data or warm a cache, than during steady-state operation.
// This cannot be updated.
// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type PoolerSpecTemplateSpecInitContainersStartupProbeArgs struct {
	// Exec specifies the action to take.
	Exec PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrInput `pulumi:"exec"`
	// Minimum consecutive failures for the probe to be considered failed after having succeeded.
	// Defaults to 3. Minimum value is 1.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// GRPC specifies an action involving a GRPC port.
	Grpc PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrInput `pulumi:"grpc"`
	// HTTPGet specifies the http request to perform.
	HttpGet PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrInput `pulumi:"httpGet"`
	// Number of seconds after the container has started before liveness probes are initiated.
	// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// How often (in seconds) to perform the probe.
	// Default to 10 seconds. Minimum value is 1.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// Minimum consecutive successes for the probe to be considered successful after having failed.
	// Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// TCPSocket specifies an action involving a TCP port.
	TcpSocket PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrInput `pulumi:"tcpSocket"`
	// Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
	// The grace period is the duration in seconds after the processes running in the pod are sent
	// a termination signal and the time when the processes are forcibly halted with a kill signal.
	// Set this value longer than the expected cleanup time for your process.
	// If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
	// value overrides the value provided by the pod spec.
	// Value must be non-negative integer. The value zero indicates stop immediately via
	// the kill signal (no opportunity to shut down).
	// This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
	// Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
	TerminationGracePeriodSeconds pulumi.IntPtrInput `pulumi:"terminationGracePeriodSeconds"`
	// Number of seconds after which the probe times out.
	// Defaults to 1 second. Minimum value is 1.
	// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (PoolerSpecTemplateSpecInitContainersStartupProbeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersStartupProbe)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersStartupProbeArgs) ToPoolerSpecTemplateSpecInitContainersStartupProbeOutput() PoolerSpecTemplateSpecInitContainersStartupProbeOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersStartupProbeOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersStartupProbeArgs) ToPoolerSpecTemplateSpecInitContainersStartupProbeOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersStartupProbeOutput)
}

func (i PoolerSpecTemplateSpecInitContainersStartupProbeArgs) ToPoolerSpecTemplateSpecInitContainersStartupProbePtrOutput() PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersStartupProbePtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersStartupProbeArgs) ToPoolerSpecTemplateSpecInitContainersStartupProbePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersStartupProbeOutput).ToPoolerSpecTemplateSpecInitContainersStartupProbePtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersStartupProbePtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersStartupProbeArgs, PoolerSpecTemplateSpecInitContainersStartupProbePtr and PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersStartupProbePtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersStartupProbeArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersStartupProbePtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersStartupProbePtrOutput() PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput
	ToPoolerSpecTemplateSpecInitContainersStartupProbePtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput
}

type poolerSpecTemplateSpecInitContainersStartupProbePtrType PoolerSpecTemplateSpecInitContainersStartupProbeArgs

func PoolerSpecTemplateSpecInitContainersStartupProbePtr(v *PoolerSpecTemplateSpecInitContainersStartupProbeArgs) PoolerSpecTemplateSpecInitContainersStartupProbePtrInput {
	return (*poolerSpecTemplateSpecInitContainersStartupProbePtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersStartupProbePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersStartupProbe)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersStartupProbePtrType) ToPoolerSpecTemplateSpecInitContainersStartupProbePtrOutput() PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersStartupProbePtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersStartupProbePtrType) ToPoolerSpecTemplateSpecInitContainersStartupProbePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput)
}

// StartupProbe indicates that the Pod has successfully initialized.
// If specified, no other probes are executed until this completes successfully.
// If this probe fails, the Pod will be restarted, just as if the livenessProbe failed.
// This can be used to provide different probe parameters at the beginning of a Pod's lifecycle,
// when it might take a long time to load data or warm a cache, than during steady-state operation.
// This cannot be updated.
// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
type PoolerSpecTemplateSpecInitContainersStartupProbeOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersStartupProbeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersStartupProbe)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeOutput() PoolerSpecTemplateSpecInitContainersStartupProbeOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbePtrOutput() PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersStartupProbePtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersStartupProbe) *PoolerSpecTemplateSpecInitContainersStartupProbe {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput)
}

// Exec specifies the action to take.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeOutput) Exec() PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersStartupProbe) *PoolerSpecTemplateSpecInitContainersStartupProbeExec {
		return v.Exec
	}).(PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded.
// Defaults to 3. Minimum value is 1.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersStartupProbe) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// GRPC specifies an action involving a GRPC port.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeOutput) Grpc() PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersStartupProbe) *PoolerSpecTemplateSpecInitContainersStartupProbeGrpc {
		return v.Grpc
	}).(PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeOutput) HttpGet() PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersStartupProbe) *PoolerSpecTemplateSpecInitContainersStartupProbeHttpGet {
		return v.HttpGet
	}).(PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput)
}

// Number of seconds after the container has started before liveness probes are initiated.
// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o PoolerSpecTemplateSpecInitContainersStartupProbeOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersStartupProbe) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe.
// Default to 10 seconds. Minimum value is 1.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersStartupProbe) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed.
// Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersStartupProbe) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// TCPSocket specifies an action involving a TCP port.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeOutput) TcpSocket() PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersStartupProbe) *PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocket {
		return v.TcpSocket
	}).(PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput)
}

// Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
// The grace period is the duration in seconds after the processes running in the pod are sent
// a termination signal and the time when the processes are forcibly halted with a kill signal.
// Set this value longer than the expected cleanup time for your process.
// If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
// value overrides the value provided by the pod spec.
// Value must be non-negative integer. The value zero indicates stop immediately via
// the kill signal (no opportunity to shut down).
// This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
// Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeOutput) TerminationGracePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersStartupProbe) *int { return v.TerminationGracePeriodSeconds }).(pulumi.IntPtrOutput)
}

// Number of seconds after which the probe times out.
// Defaults to 1 second. Minimum value is 1.
// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o PoolerSpecTemplateSpecInitContainersStartupProbeOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersStartupProbe) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersStartupProbe)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbePtrOutput() PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput) Elem() PoolerSpecTemplateSpecInitContainersStartupProbeOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersStartupProbe) PoolerSpecTemplateSpecInitContainersStartupProbe {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersStartupProbe
		return ret
	}).(PoolerSpecTemplateSpecInitContainersStartupProbeOutput)
}

// Exec specifies the action to take.
func (o PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput) Exec() PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersStartupProbe) *PoolerSpecTemplateSpecInitContainersStartupProbeExec {
		if v == nil {
			return nil
		}
		return v.Exec
	}).(PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput)
}

// Minimum consecutive failures for the probe to be considered failed after having succeeded.
// Defaults to 3. Minimum value is 1.
func (o PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersStartupProbe) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// GRPC specifies an action involving a GRPC port.
func (o PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput) Grpc() PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersStartupProbe) *PoolerSpecTemplateSpecInitContainersStartupProbeGrpc {
		if v == nil {
			return nil
		}
		return v.Grpc
	}).(PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput)
}

// HTTPGet specifies the http request to perform.
func (o PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput) HttpGet() PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersStartupProbe) *PoolerSpecTemplateSpecInitContainersStartupProbeHttpGet {
		if v == nil {
			return nil
		}
		return v.HttpGet
	}).(PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput)
}

// Number of seconds after the container has started before liveness probes are initiated.
// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersStartupProbe) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// How often (in seconds) to perform the probe.
// Default to 10 seconds. Minimum value is 1.
func (o PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersStartupProbe) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Minimum consecutive successes for the probe to be considered successful after having failed.
// Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
func (o PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersStartupProbe) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// TCPSocket specifies an action involving a TCP port.
func (o PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput) TcpSocket() PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersStartupProbe) *PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocket {
		if v == nil {
			return nil
		}
		return v.TcpSocket
	}).(PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput)
}

// Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
// The grace period is the duration in seconds after the processes running in the pod are sent
// a termination signal and the time when the processes are forcibly halted with a kill signal.
// Set this value longer than the expected cleanup time for your process.
// If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
// value overrides the value provided by the pod spec.
// Value must be non-negative integer. The value zero indicates stop immediately via
// the kill signal (no opportunity to shut down).
// This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
// Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
func (o PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput) TerminationGracePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersStartupProbe) *int {
		if v == nil {
			return nil
		}
		return v.TerminationGracePeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// Number of seconds after which the probe times out.
// Defaults to 1 second. Minimum value is 1.
// More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
func (o PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersStartupProbe) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// Exec specifies the action to take.
type PoolerSpecTemplateSpecInitContainersStartupProbeExec struct {
	// Command is the command line to execute inside the container, the working directory for the
	// command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
	// not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
	// a shell, you need to explicitly call out to that shell.
	// Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command []string `pulumi:"command"`
}

// PoolerSpecTemplateSpecInitContainersStartupProbeExecInput is an input type that accepts PoolerSpecTemplateSpecInitContainersStartupProbeExecArgs and PoolerSpecTemplateSpecInitContainersStartupProbeExecOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersStartupProbeExecInput` via:
//
//	PoolerSpecTemplateSpecInitContainersStartupProbeExecArgs{...}
type PoolerSpecTemplateSpecInitContainersStartupProbeExecInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersStartupProbeExecOutput() PoolerSpecTemplateSpecInitContainersStartupProbeExecOutput
	ToPoolerSpecTemplateSpecInitContainersStartupProbeExecOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeExecOutput
}

// Exec specifies the action to take.
type PoolerSpecTemplateSpecInitContainersStartupProbeExecArgs struct {
	// Command is the command line to execute inside the container, the working directory for the
	// command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
	// not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
	// a shell, you need to explicitly call out to that shell.
	// Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
	Command pulumi.StringArrayInput `pulumi:"command"`
}

func (PoolerSpecTemplateSpecInitContainersStartupProbeExecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersStartupProbeExec)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersStartupProbeExecArgs) ToPoolerSpecTemplateSpecInitContainersStartupProbeExecOutput() PoolerSpecTemplateSpecInitContainersStartupProbeExecOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersStartupProbeExecOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersStartupProbeExecArgs) ToPoolerSpecTemplateSpecInitContainersStartupProbeExecOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeExecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersStartupProbeExecOutput)
}

func (i PoolerSpecTemplateSpecInitContainersStartupProbeExecArgs) ToPoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput() PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersStartupProbeExecArgs) ToPoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersStartupProbeExecOutput).ToPoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersStartupProbeExecArgs, PoolerSpecTemplateSpecInitContainersStartupProbeExecPtr and PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersStartupProbeExecArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput() PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput
	ToPoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput
}

type poolerSpecTemplateSpecInitContainersStartupProbeExecPtrType PoolerSpecTemplateSpecInitContainersStartupProbeExecArgs

func PoolerSpecTemplateSpecInitContainersStartupProbeExecPtr(v *PoolerSpecTemplateSpecInitContainersStartupProbeExecArgs) PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrInput {
	return (*poolerSpecTemplateSpecInitContainersStartupProbeExecPtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersStartupProbeExecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersStartupProbeExec)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersStartupProbeExecPtrType) ToPoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput() PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersStartupProbeExecPtrType) ToPoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput)
}

// Exec specifies the action to take.
type PoolerSpecTemplateSpecInitContainersStartupProbeExecOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersStartupProbeExecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersStartupProbeExec)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeExecOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeExecOutput() PoolerSpecTemplateSpecInitContainersStartupProbeExecOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeExecOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeExecOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeExecOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeExecOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput() PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeExecOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersStartupProbeExec) *PoolerSpecTemplateSpecInitContainersStartupProbeExec {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput)
}

// Command is the command line to execute inside the container, the working directory for the
// command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
// not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
// a shell, you need to explicitly call out to that shell.
// Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeExecOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersStartupProbeExec) []string { return v.Command }).(pulumi.StringArrayOutput)
}

type PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersStartupProbeExec)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput() PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput) Elem() PoolerSpecTemplateSpecInitContainersStartupProbeExecOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersStartupProbeExec) PoolerSpecTemplateSpecInitContainersStartupProbeExec {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersStartupProbeExec
		return ret
	}).(PoolerSpecTemplateSpecInitContainersStartupProbeExecOutput)
}

// Command is the command line to execute inside the container, the working directory for the
// command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
// not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
// a shell, you need to explicitly call out to that shell.
// Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput) Command() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersStartupProbeExec) []string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringArrayOutput)
}

// GRPC specifies an action involving a GRPC port.
type PoolerSpecTemplateSpecInitContainersStartupProbeGrpc struct {
	// Port number of the gRPC service. Number must be in the range 1 to 65535.
	Port int `pulumi:"port"`
	// Service is the name of the service to place in the gRPC HealthCheckRequest
	// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
	//
	// If this is not specified, the default behavior is defined by gRPC.
	Service *string `pulumi:"service"`
}

// PoolerSpecTemplateSpecInitContainersStartupProbeGrpcInput is an input type that accepts PoolerSpecTemplateSpecInitContainersStartupProbeGrpcArgs and PoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersStartupProbeGrpcInput` via:
//
//	PoolerSpecTemplateSpecInitContainersStartupProbeGrpcArgs{...}
type PoolerSpecTemplateSpecInitContainersStartupProbeGrpcInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutput() PoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutput
	ToPoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutput
}

// GRPC specifies an action involving a GRPC port.
type PoolerSpecTemplateSpecInitContainersStartupProbeGrpcArgs struct {
	// Port number of the gRPC service. Number must be in the range 1 to 65535.
	Port pulumi.IntInput `pulumi:"port"`
	// Service is the name of the service to place in the gRPC HealthCheckRequest
	// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
	//
	// If this is not specified, the default behavior is defined by gRPC.
	Service pulumi.StringPtrInput `pulumi:"service"`
}

func (PoolerSpecTemplateSpecInitContainersStartupProbeGrpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersStartupProbeGrpc)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersStartupProbeGrpcArgs) ToPoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutput() PoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersStartupProbeGrpcArgs) ToPoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutput)
}

func (i PoolerSpecTemplateSpecInitContainersStartupProbeGrpcArgs) ToPoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput() PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersStartupProbeGrpcArgs) ToPoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutput).ToPoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersStartupProbeGrpcArgs, PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtr and PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersStartupProbeGrpcArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput() PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput
	ToPoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput
}

type poolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrType PoolerSpecTemplateSpecInitContainersStartupProbeGrpcArgs

func PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtr(v *PoolerSpecTemplateSpecInitContainersStartupProbeGrpcArgs) PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrInput {
	return (*poolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersStartupProbeGrpc)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrType) ToPoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput() PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrType) ToPoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput)
}

// GRPC specifies an action involving a GRPC port.
type PoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersStartupProbeGrpc)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutput() PoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput() PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersStartupProbeGrpc) *PoolerSpecTemplateSpecInitContainersStartupProbeGrpc {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput)
}

// Port number of the gRPC service. Number must be in the range 1 to 65535.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersStartupProbeGrpc) int { return v.Port }).(pulumi.IntOutput)
}

// Service is the name of the service to place in the gRPC HealthCheckRequest
// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
//
// If this is not specified, the default behavior is defined by gRPC.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersStartupProbeGrpc) *string { return v.Service }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersStartupProbeGrpc)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput() PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput) Elem() PoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersStartupProbeGrpc) PoolerSpecTemplateSpecInitContainersStartupProbeGrpc {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersStartupProbeGrpc
		return ret
	}).(PoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutput)
}

// Port number of the gRPC service. Number must be in the range 1 to 65535.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersStartupProbeGrpc) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Service is the name of the service to place in the gRPC HealthCheckRequest
// (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
//
// If this is not specified, the default behavior is defined by gRPC.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput) Service() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersStartupProbeGrpc) *string {
		if v == nil {
			return nil
		}
		return v.Service
	}).(pulumi.StringPtrOutput)
}

// HTTPGet specifies the http request to perform.
type PoolerSpecTemplateSpecInitContainersStartupProbeHttpGet struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set
	// "Host" in httpHeaders instead.
	Host *string `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders []PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeaders `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path *string `pulumi:"path"`
	// Name or number of the port to access on the container.
	// Number must be in the range 1 to 65535.
	// Name must be an IANA_SVC_NAME.
	Port interface{} `pulumi:"port"`
	// Scheme to use for connecting to the host.
	// Defaults to HTTP.
	Scheme *string `pulumi:"scheme"`
}

// PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetInput is an input type that accepts PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetArgs and PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetInput` via:
//
//	PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetArgs{...}
type PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput() PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput
	ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput
}

// HTTPGet specifies the http request to perform.
type PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetArgs struct {
	// Host name to connect to, defaults to the pod IP. You probably want to set
	// "Host" in httpHeaders instead.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Custom headers to set in the request. HTTP allows repeated headers.
	HttpHeaders PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayInput `pulumi:"httpHeaders"`
	// Path to access on the HTTP server.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// Name or number of the port to access on the container.
	// Number must be in the range 1 to 65535.
	// Name must be an IANA_SVC_NAME.
	Port pulumi.Input `pulumi:"port"`
	// Scheme to use for connecting to the host.
	// Defaults to HTTP.
	Scheme pulumi.StringPtrInput `pulumi:"scheme"`
}

func (PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersStartupProbeHttpGet)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetArgs) ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput() PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetArgs) ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput)
}

func (i PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetArgs) ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput() PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetArgs) ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput).ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetArgs, PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtr and PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput() PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput
	ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput
}

type poolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrType PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetArgs

func PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtr(v *PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetArgs) PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrInput {
	return (*poolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersStartupProbeHttpGet)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrType) ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput() PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrType) ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput)
}

// HTTPGet specifies the http request to perform.
type PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersStartupProbeHttpGet)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput() PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput() PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersStartupProbeHttpGet) *PoolerSpecTemplateSpecInitContainersStartupProbeHttpGet {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set
// "Host" in httpHeaders instead.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersStartupProbeHttpGet) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput) HttpHeaders() PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersStartupProbeHttpGet) []PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeaders {
		return v.HttpHeaders
	}).(PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersStartupProbeHttpGet) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container.
// Number must be in the range 1 to 65535.
// Name must be an IANA_SVC_NAME.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersStartupProbeHttpGet) interface{} { return v.Port }).(pulumi.AnyOutput)
}

// Scheme to use for connecting to the host.
// Defaults to HTTP.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersStartupProbeHttpGet) *string { return v.Scheme }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersStartupProbeHttpGet)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput() PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput) Elem() PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersStartupProbeHttpGet) PoolerSpecTemplateSpecInitContainersStartupProbeHttpGet {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersStartupProbeHttpGet
		return ret
	}).(PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput)
}

// Host name to connect to, defaults to the pod IP. You probably want to set
// "Host" in httpHeaders instead.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersStartupProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Custom headers to set in the request. HTTP allows repeated headers.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput) HttpHeaders() PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersStartupProbeHttpGet) []PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeaders {
		if v == nil {
			return nil
		}
		return v.HttpHeaders
	}).(PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayOutput)
}

// Path to access on the HTTP server.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersStartupProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// Name or number of the port to access on the container.
// Number must be in the range 1 to 65535.
// Name must be an IANA_SVC_NAME.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersStartupProbeHttpGet) interface{} {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.AnyOutput)
}

// Scheme to use for connecting to the host.
// Defaults to HTTP.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput) Scheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersStartupProbeHttpGet) *string {
		if v == nil {
			return nil
		}
		return v.Scheme
	}).(pulumi.StringPtrOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeaders struct {
	// The header field name.
	// This will be canonicalized upon output, so case-variant names will be understood as the same header.
	Name string `pulumi:"name"`
	// The header field value
	Value string `pulumi:"value"`
}

// PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersInput is an input type that accepts PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArgs and PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersInput` via:
//
//	PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArgs{...}
type PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersOutput() PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersOutput
	ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersOutput
}

// HTTPHeader describes a custom header to be used in HTTP probes
type PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArgs struct {
	// The header field name.
	// This will be canonicalized upon output, so case-variant names will be understood as the same header.
	Name pulumi.StringInput `pulumi:"name"`
	// The header field value
	Value pulumi.StringInput `pulumi:"value"`
}

func (PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArgs) ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersOutput() PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArgs) ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersOutput)
}

// PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayInput is an input type that accepts PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArray and PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayInput` via:
//
//	PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArray{ PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArgs{...} }
type PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayOutput() PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayOutput
	ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayOutput
}

type PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArray []PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersInput

func (PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArray) ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayOutput() PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArray) ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayOutput)
}

// HTTPHeader describes a custom header to be used in HTTP probes
type PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersOutput() PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersOutput {
	return o
}

// The header field name.
// This will be canonicalized upon output, so case-variant names will be understood as the same header.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeaders) string { return v.Name }).(pulumi.StringOutput)
}

// The header field value
func (o PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeaders) string { return v.Value }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeaders)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayOutput() PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeaders {
		return vs[0].([]PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeaders)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersOutput)
}

// TCPSocket specifies an action involving a TCP port.
type PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocket struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host *string `pulumi:"host"`
	// Number or name of the port to access on the container.
	// Number must be in the range 1 to 65535.
	// Name must be an IANA_SVC_NAME.
	Port interface{} `pulumi:"port"`
}

// PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketInput is an input type that accepts PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketArgs and PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketInput` via:
//
//	PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketArgs{...}
type PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutput() PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutput
	ToPoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutput
}

// TCPSocket specifies an action involving a TCP port.
type PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketArgs struct {
	// Optional: Host name to connect to, defaults to the pod IP.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// Number or name of the port to access on the container.
	// Number must be in the range 1 to 65535.
	// Name must be an IANA_SVC_NAME.
	Port pulumi.Input `pulumi:"port"`
}

func (PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocket)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketArgs) ToPoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutput() PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketArgs) ToPoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutput)
}

func (i PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketArgs) ToPoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput() PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketArgs) ToPoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutput).ToPoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrInput is an input type that accepts PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketArgs, PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtr and PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrInput` via:
//
//	        PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput() PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput
	ToPoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput
}

type poolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrType PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketArgs

func PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtr(v *PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketArgs) PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrInput {
	return (*poolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrType)(v)
}

func (*poolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocket)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrType) ToPoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput() PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrType) ToPoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput)
}

// TCPSocket specifies an action involving a TCP port.
type PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocket)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutput() PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput() PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput {
	return o.ToPoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocket) *PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocket {
		return &v
	}).(PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocket) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container.
// Number must be in the range 1 to 65535.
// Name must be an IANA_SVC_NAME.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocket) interface{} { return v.Port }).(pulumi.AnyOutput)
}

type PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocket)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput() PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput) ToPoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput) Elem() PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocket) PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocket {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocket
		return ret
	}).(PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutput)
}

// Optional: Host name to connect to, defaults to the pod IP.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocket) *string {
		if v == nil {
			return nil
		}
		return v.Host
	}).(pulumi.StringPtrOutput)
}

// Number or name of the port to access on the container.
// Number must be in the range 1 to 65535.
// Name must be an IANA_SVC_NAME.
func (o PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput) Port() pulumi.AnyOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocket) interface{} {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.AnyOutput)
}

// volumeDevice describes a mapping of a raw block device within a container.
type PoolerSpecTemplateSpecInitContainersVolumeDevices struct {
	// devicePath is the path inside of the container that the device will be mapped to.
	DevicePath string `pulumi:"devicePath"`
	// name must match the name of a persistentVolumeClaim in the pod
	Name string `pulumi:"name"`
}

// PoolerSpecTemplateSpecInitContainersVolumeDevicesInput is an input type that accepts PoolerSpecTemplateSpecInitContainersVolumeDevicesArgs and PoolerSpecTemplateSpecInitContainersVolumeDevicesOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersVolumeDevicesInput` via:
//
//	PoolerSpecTemplateSpecInitContainersVolumeDevicesArgs{...}
type PoolerSpecTemplateSpecInitContainersVolumeDevicesInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersVolumeDevicesOutput() PoolerSpecTemplateSpecInitContainersVolumeDevicesOutput
	ToPoolerSpecTemplateSpecInitContainersVolumeDevicesOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersVolumeDevicesOutput
}

// volumeDevice describes a mapping of a raw block device within a container.
type PoolerSpecTemplateSpecInitContainersVolumeDevicesArgs struct {
	// devicePath is the path inside of the container that the device will be mapped to.
	DevicePath pulumi.StringInput `pulumi:"devicePath"`
	// name must match the name of a persistentVolumeClaim in the pod
	Name pulumi.StringInput `pulumi:"name"`
}

func (PoolerSpecTemplateSpecInitContainersVolumeDevicesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersVolumeDevices)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersVolumeDevicesArgs) ToPoolerSpecTemplateSpecInitContainersVolumeDevicesOutput() PoolerSpecTemplateSpecInitContainersVolumeDevicesOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersVolumeDevicesOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersVolumeDevicesArgs) ToPoolerSpecTemplateSpecInitContainersVolumeDevicesOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersVolumeDevicesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersVolumeDevicesOutput)
}

// PoolerSpecTemplateSpecInitContainersVolumeDevicesArrayInput is an input type that accepts PoolerSpecTemplateSpecInitContainersVolumeDevicesArray and PoolerSpecTemplateSpecInitContainersVolumeDevicesArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersVolumeDevicesArrayInput` via:
//
//	PoolerSpecTemplateSpecInitContainersVolumeDevicesArray{ PoolerSpecTemplateSpecInitContainersVolumeDevicesArgs{...} }
type PoolerSpecTemplateSpecInitContainersVolumeDevicesArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersVolumeDevicesArrayOutput() PoolerSpecTemplateSpecInitContainersVolumeDevicesArrayOutput
	ToPoolerSpecTemplateSpecInitContainersVolumeDevicesArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersVolumeDevicesArrayOutput
}

type PoolerSpecTemplateSpecInitContainersVolumeDevicesArray []PoolerSpecTemplateSpecInitContainersVolumeDevicesInput

func (PoolerSpecTemplateSpecInitContainersVolumeDevicesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecInitContainersVolumeDevices)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersVolumeDevicesArray) ToPoolerSpecTemplateSpecInitContainersVolumeDevicesArrayOutput() PoolerSpecTemplateSpecInitContainersVolumeDevicesArrayOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersVolumeDevicesArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersVolumeDevicesArray) ToPoolerSpecTemplateSpecInitContainersVolumeDevicesArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersVolumeDevicesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersVolumeDevicesArrayOutput)
}

// volumeDevice describes a mapping of a raw block device within a container.
type PoolerSpecTemplateSpecInitContainersVolumeDevicesOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersVolumeDevicesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersVolumeDevices)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersVolumeDevicesOutput) ToPoolerSpecTemplateSpecInitContainersVolumeDevicesOutput() PoolerSpecTemplateSpecInitContainersVolumeDevicesOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersVolumeDevicesOutput) ToPoolerSpecTemplateSpecInitContainersVolumeDevicesOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersVolumeDevicesOutput {
	return o
}

// devicePath is the path inside of the container that the device will be mapped to.
func (o PoolerSpecTemplateSpecInitContainersVolumeDevicesOutput) DevicePath() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersVolumeDevices) string { return v.DevicePath }).(pulumi.StringOutput)
}

// name must match the name of a persistentVolumeClaim in the pod
func (o PoolerSpecTemplateSpecInitContainersVolumeDevicesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersVolumeDevices) string { return v.Name }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecInitContainersVolumeDevicesArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersVolumeDevicesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecInitContainersVolumeDevices)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersVolumeDevicesArrayOutput) ToPoolerSpecTemplateSpecInitContainersVolumeDevicesArrayOutput() PoolerSpecTemplateSpecInitContainersVolumeDevicesArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersVolumeDevicesArrayOutput) ToPoolerSpecTemplateSpecInitContainersVolumeDevicesArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersVolumeDevicesArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersVolumeDevicesArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecInitContainersVolumeDevicesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecInitContainersVolumeDevices {
		return vs[0].([]PoolerSpecTemplateSpecInitContainersVolumeDevices)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecInitContainersVolumeDevicesOutput)
}

// VolumeMount describes a mounting of a Volume within a container.
type PoolerSpecTemplateSpecInitContainersVolumeMounts struct {
	// Path within the container at which the volume should be mounted.  Must
	// not contain ':'.
	MountPath string `pulumi:"mountPath"`
	// mountPropagation determines how mounts are propagated from the host
	// to container and the other way around.
	// When not set, MountPropagationNone is used.
	// This field is beta in 1.10.
	// When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
	// (which defaults to None).
	MountPropagation *string `pulumi:"mountPropagation"`
	// This must match the Name of a Volume.
	Name string `pulumi:"name"`
	// Mounted read-only if true, read-write otherwise (false or unspecified).
	// Defaults to false.
	ReadOnly *bool `pulumi:"readOnly"`
	// RecursiveReadOnly specifies whether read-only mounts should be handled
	// recursively.
	//
	// If ReadOnly is false, this field has no meaning and must be unspecified.
	//
	// If ReadOnly is true, and this field is set to Disabled, the mount is not made
	// recursively read-only.  If this field is set to IfPossible, the mount is made
	// recursively read-only, if it is supported by the container runtime.  If this
	// field is set to Enabled, the mount is made recursively read-only if it is
	// supported by the container runtime, otherwise the pod will not be started and
	// an error will be generated to indicate the reason.
	//
	// If this field is set to IfPossible or Enabled, MountPropagation must be set to
	// None (or be unspecified, which defaults to None).
	//
	// If this field is not specified, it is treated as an equivalent of Disabled.
	RecursiveReadOnly *string `pulumi:"recursiveReadOnly"`
	// Path within the volume from which the container's volume should be mounted.
	// Defaults to "" (volume's root).
	SubPath *string `pulumi:"subPath"`
	// Expanded path within the volume from which the container's volume should be mounted.
	// Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
	// Defaults to "" (volume's root).
	// SubPathExpr and SubPath are mutually exclusive.
	SubPathExpr *string `pulumi:"subPathExpr"`
}

// PoolerSpecTemplateSpecInitContainersVolumeMountsInput is an input type that accepts PoolerSpecTemplateSpecInitContainersVolumeMountsArgs and PoolerSpecTemplateSpecInitContainersVolumeMountsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersVolumeMountsInput` via:
//
//	PoolerSpecTemplateSpecInitContainersVolumeMountsArgs{...}
type PoolerSpecTemplateSpecInitContainersVolumeMountsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersVolumeMountsOutput() PoolerSpecTemplateSpecInitContainersVolumeMountsOutput
	ToPoolerSpecTemplateSpecInitContainersVolumeMountsOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersVolumeMountsOutput
}

// VolumeMount describes a mounting of a Volume within a container.
type PoolerSpecTemplateSpecInitContainersVolumeMountsArgs struct {
	// Path within the container at which the volume should be mounted.  Must
	// not contain ':'.
	MountPath pulumi.StringInput `pulumi:"mountPath"`
	// mountPropagation determines how mounts are propagated from the host
	// to container and the other way around.
	// When not set, MountPropagationNone is used.
	// This field is beta in 1.10.
	// When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
	// (which defaults to None).
	MountPropagation pulumi.StringPtrInput `pulumi:"mountPropagation"`
	// This must match the Name of a Volume.
	Name pulumi.StringInput `pulumi:"name"`
	// Mounted read-only if true, read-write otherwise (false or unspecified).
	// Defaults to false.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// RecursiveReadOnly specifies whether read-only mounts should be handled
	// recursively.
	//
	// If ReadOnly is false, this field has no meaning and must be unspecified.
	//
	// If ReadOnly is true, and this field is set to Disabled, the mount is not made
	// recursively read-only.  If this field is set to IfPossible, the mount is made
	// recursively read-only, if it is supported by the container runtime.  If this
	// field is set to Enabled, the mount is made recursively read-only if it is
	// supported by the container runtime, otherwise the pod will not be started and
	// an error will be generated to indicate the reason.
	//
	// If this field is set to IfPossible or Enabled, MountPropagation must be set to
	// None (or be unspecified, which defaults to None).
	//
	// If this field is not specified, it is treated as an equivalent of Disabled.
	RecursiveReadOnly pulumi.StringPtrInput `pulumi:"recursiveReadOnly"`
	// Path within the volume from which the container's volume should be mounted.
	// Defaults to "" (volume's root).
	SubPath pulumi.StringPtrInput `pulumi:"subPath"`
	// Expanded path within the volume from which the container's volume should be mounted.
	// Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
	// Defaults to "" (volume's root).
	// SubPathExpr and SubPath are mutually exclusive.
	SubPathExpr pulumi.StringPtrInput `pulumi:"subPathExpr"`
}

func (PoolerSpecTemplateSpecInitContainersVolumeMountsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersVolumeMounts)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersVolumeMountsArgs) ToPoolerSpecTemplateSpecInitContainersVolumeMountsOutput() PoolerSpecTemplateSpecInitContainersVolumeMountsOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersVolumeMountsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersVolumeMountsArgs) ToPoolerSpecTemplateSpecInitContainersVolumeMountsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersVolumeMountsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersVolumeMountsOutput)
}

// PoolerSpecTemplateSpecInitContainersVolumeMountsArrayInput is an input type that accepts PoolerSpecTemplateSpecInitContainersVolumeMountsArray and PoolerSpecTemplateSpecInitContainersVolumeMountsArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecInitContainersVolumeMountsArrayInput` via:
//
//	PoolerSpecTemplateSpecInitContainersVolumeMountsArray{ PoolerSpecTemplateSpecInitContainersVolumeMountsArgs{...} }
type PoolerSpecTemplateSpecInitContainersVolumeMountsArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecInitContainersVolumeMountsArrayOutput() PoolerSpecTemplateSpecInitContainersVolumeMountsArrayOutput
	ToPoolerSpecTemplateSpecInitContainersVolumeMountsArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecInitContainersVolumeMountsArrayOutput
}

type PoolerSpecTemplateSpecInitContainersVolumeMountsArray []PoolerSpecTemplateSpecInitContainersVolumeMountsInput

func (PoolerSpecTemplateSpecInitContainersVolumeMountsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecInitContainersVolumeMounts)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecInitContainersVolumeMountsArray) ToPoolerSpecTemplateSpecInitContainersVolumeMountsArrayOutput() PoolerSpecTemplateSpecInitContainersVolumeMountsArrayOutput {
	return i.ToPoolerSpecTemplateSpecInitContainersVolumeMountsArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecInitContainersVolumeMountsArray) ToPoolerSpecTemplateSpecInitContainersVolumeMountsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersVolumeMountsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecInitContainersVolumeMountsArrayOutput)
}

// VolumeMount describes a mounting of a Volume within a container.
type PoolerSpecTemplateSpecInitContainersVolumeMountsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersVolumeMountsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersVolumeMounts)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersVolumeMountsOutput) ToPoolerSpecTemplateSpecInitContainersVolumeMountsOutput() PoolerSpecTemplateSpecInitContainersVolumeMountsOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersVolumeMountsOutput) ToPoolerSpecTemplateSpecInitContainersVolumeMountsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersVolumeMountsOutput {
	return o
}

// Path within the container at which the volume should be mounted.  Must
// not contain ':'.
func (o PoolerSpecTemplateSpecInitContainersVolumeMountsOutput) MountPath() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersVolumeMounts) string { return v.MountPath }).(pulumi.StringOutput)
}

// mountPropagation determines how mounts are propagated from the host
// to container and the other way around.
// When not set, MountPropagationNone is used.
// This field is beta in 1.10.
// When RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified
// (which defaults to None).
func (o PoolerSpecTemplateSpecInitContainersVolumeMountsOutput) MountPropagation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersVolumeMounts) *string { return v.MountPropagation }).(pulumi.StringPtrOutput)
}

// This must match the Name of a Volume.
func (o PoolerSpecTemplateSpecInitContainersVolumeMountsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersVolumeMounts) string { return v.Name }).(pulumi.StringOutput)
}

// Mounted read-only if true, read-write otherwise (false or unspecified).
// Defaults to false.
func (o PoolerSpecTemplateSpecInitContainersVolumeMountsOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersVolumeMounts) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// RecursiveReadOnly specifies whether read-only mounts should be handled
// recursively.
//
// If ReadOnly is false, this field has no meaning and must be unspecified.
//
// If ReadOnly is true, and this field is set to Disabled, the mount is not made
// recursively read-only.  If this field is set to IfPossible, the mount is made
// recursively read-only, if it is supported by the container runtime.  If this
// field is set to Enabled, the mount is made recursively read-only if it is
// supported by the container runtime, otherwise the pod will not be started and
// an error will be generated to indicate the reason.
//
// If this field is set to IfPossible or Enabled, MountPropagation must be set to
// None (or be unspecified, which defaults to None).
//
// If this field is not specified, it is treated as an equivalent of Disabled.
func (o PoolerSpecTemplateSpecInitContainersVolumeMountsOutput) RecursiveReadOnly() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersVolumeMounts) *string { return v.RecursiveReadOnly }).(pulumi.StringPtrOutput)
}

// Path within the volume from which the container's volume should be mounted.
// Defaults to "" (volume's root).
func (o PoolerSpecTemplateSpecInitContainersVolumeMountsOutput) SubPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersVolumeMounts) *string { return v.SubPath }).(pulumi.StringPtrOutput)
}

// Expanded path within the volume from which the container's volume should be mounted.
// Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
// Defaults to "" (volume's root).
// SubPathExpr and SubPath are mutually exclusive.
func (o PoolerSpecTemplateSpecInitContainersVolumeMountsOutput) SubPathExpr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecInitContainersVolumeMounts) *string { return v.SubPathExpr }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecInitContainersVolumeMountsArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecInitContainersVolumeMountsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecInitContainersVolumeMounts)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecInitContainersVolumeMountsArrayOutput) ToPoolerSpecTemplateSpecInitContainersVolumeMountsArrayOutput() PoolerSpecTemplateSpecInitContainersVolumeMountsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersVolumeMountsArrayOutput) ToPoolerSpecTemplateSpecInitContainersVolumeMountsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecInitContainersVolumeMountsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecInitContainersVolumeMountsArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecInitContainersVolumeMountsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecInitContainersVolumeMounts {
		return vs[0].([]PoolerSpecTemplateSpecInitContainersVolumeMounts)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecInitContainersVolumeMountsOutput)
}

// NodeSelector is a selector which must be true for the pod to fit on a node.
// Selector which must match a node's labels for the pod to be scheduled on that node.
// More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
type PoolerSpecTemplateSpecNodeSelector struct {
}

// Specifies the OS of the containers in the pod.
// Some pod and container fields are restricted if this is set.
//
// If the OS field is set to linux, the following fields must be unset:
// -securityContext.windowsOptions
//
// If the OS field is set to windows, following fields must be unset:
// - spec.hostPID
// - spec.hostIPC
// - spec.hostUsers
// - spec.securityContext.appArmorProfile
// - spec.securityContext.seLinuxOptions
// - spec.securityContext.seccompProfile
// - spec.securityContext.fsGroup
// - spec.securityContext.fsGroupChangePolicy
// - spec.securityContext.sysctls
// - spec.shareProcessNamespace
// - spec.securityContext.runAsUser
// - spec.securityContext.runAsGroup
// - spec.securityContext.supplementalGroups
// - spec.containers[*].securityContext.appArmorProfile
// - spec.containers[*].securityContext.seLinuxOptions
// - spec.containers[*].securityContext.seccompProfile
// - spec.containers[*].securityContext.capabilities
// - spec.containers[*].securityContext.readOnlyRootFilesystem
// - spec.containers[*].securityContext.privileged
// - spec.containers[*].securityContext.allowPrivilegeEscalation
// - spec.containers[*].securityContext.procMount
// - spec.containers[*].securityContext.runAsUser
// - spec.containers[*].securityContext.runAsGroup
type PoolerSpecTemplateSpecOs struct {
	// Name is the name of the operating system. The currently supported values are linux and windows.
	// Additional value may be defined in future and can be one of:
	// https://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration
	// Clients should expect to handle additional values and treat unrecognized values in this field as os: null
	Name string `pulumi:"name"`
}

// PoolerSpecTemplateSpecOsInput is an input type that accepts PoolerSpecTemplateSpecOsArgs and PoolerSpecTemplateSpecOsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecOsInput` via:
//
//	PoolerSpecTemplateSpecOsArgs{...}
type PoolerSpecTemplateSpecOsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecOsOutput() PoolerSpecTemplateSpecOsOutput
	ToPoolerSpecTemplateSpecOsOutputWithContext(context.Context) PoolerSpecTemplateSpecOsOutput
}

// Specifies the OS of the containers in the pod.
// Some pod and container fields are restricted if this is set.
//
// If the OS field is set to linux, the following fields must be unset:
// -securityContext.windowsOptions
//
// If the OS field is set to windows, following fields must be unset:
// - spec.hostPID
// - spec.hostIPC
// - spec.hostUsers
// - spec.securityContext.appArmorProfile
// - spec.securityContext.seLinuxOptions
// - spec.securityContext.seccompProfile
// - spec.securityContext.fsGroup
// - spec.securityContext.fsGroupChangePolicy
// - spec.securityContext.sysctls
// - spec.shareProcessNamespace
// - spec.securityContext.runAsUser
// - spec.securityContext.runAsGroup
// - spec.securityContext.supplementalGroups
// - spec.containers[*].securityContext.appArmorProfile
// - spec.containers[*].securityContext.seLinuxOptions
// - spec.containers[*].securityContext.seccompProfile
// - spec.containers[*].securityContext.capabilities
// - spec.containers[*].securityContext.readOnlyRootFilesystem
// - spec.containers[*].securityContext.privileged
// - spec.containers[*].securityContext.allowPrivilegeEscalation
// - spec.containers[*].securityContext.procMount
// - spec.containers[*].securityContext.runAsUser
// - spec.containers[*].securityContext.runAsGroup
type PoolerSpecTemplateSpecOsArgs struct {
	// Name is the name of the operating system. The currently supported values are linux and windows.
	// Additional value may be defined in future and can be one of:
	// https://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration
	// Clients should expect to handle additional values and treat unrecognized values in this field as os: null
	Name pulumi.StringInput `pulumi:"name"`
}

func (PoolerSpecTemplateSpecOsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecOs)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecOsArgs) ToPoolerSpecTemplateSpecOsOutput() PoolerSpecTemplateSpecOsOutput {
	return i.ToPoolerSpecTemplateSpecOsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecOsArgs) ToPoolerSpecTemplateSpecOsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecOsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecOsOutput)
}

func (i PoolerSpecTemplateSpecOsArgs) ToPoolerSpecTemplateSpecOsPtrOutput() PoolerSpecTemplateSpecOsPtrOutput {
	return i.ToPoolerSpecTemplateSpecOsPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecOsArgs) ToPoolerSpecTemplateSpecOsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecOsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecOsOutput).ToPoolerSpecTemplateSpecOsPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecOsPtrInput is an input type that accepts PoolerSpecTemplateSpecOsArgs, PoolerSpecTemplateSpecOsPtr and PoolerSpecTemplateSpecOsPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecOsPtrInput` via:
//
//	        PoolerSpecTemplateSpecOsArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecOsPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecOsPtrOutput() PoolerSpecTemplateSpecOsPtrOutput
	ToPoolerSpecTemplateSpecOsPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecOsPtrOutput
}

type poolerSpecTemplateSpecOsPtrType PoolerSpecTemplateSpecOsArgs

func PoolerSpecTemplateSpecOsPtr(v *PoolerSpecTemplateSpecOsArgs) PoolerSpecTemplateSpecOsPtrInput {
	return (*poolerSpecTemplateSpecOsPtrType)(v)
}

func (*poolerSpecTemplateSpecOsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecOs)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecOsPtrType) ToPoolerSpecTemplateSpecOsPtrOutput() PoolerSpecTemplateSpecOsPtrOutput {
	return i.ToPoolerSpecTemplateSpecOsPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecOsPtrType) ToPoolerSpecTemplateSpecOsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecOsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecOsPtrOutput)
}

// Specifies the OS of the containers in the pod.
// Some pod and container fields are restricted if this is set.
//
// If the OS field is set to linux, the following fields must be unset:
// -securityContext.windowsOptions
//
// If the OS field is set to windows, following fields must be unset:
// - spec.hostPID
// - spec.hostIPC
// - spec.hostUsers
// - spec.securityContext.appArmorProfile
// - spec.securityContext.seLinuxOptions
// - spec.securityContext.seccompProfile
// - spec.securityContext.fsGroup
// - spec.securityContext.fsGroupChangePolicy
// - spec.securityContext.sysctls
// - spec.shareProcessNamespace
// - spec.securityContext.runAsUser
// - spec.securityContext.runAsGroup
// - spec.securityContext.supplementalGroups
// - spec.containers[*].securityContext.appArmorProfile
// - spec.containers[*].securityContext.seLinuxOptions
// - spec.containers[*].securityContext.seccompProfile
// - spec.containers[*].securityContext.capabilities
// - spec.containers[*].securityContext.readOnlyRootFilesystem
// - spec.containers[*].securityContext.privileged
// - spec.containers[*].securityContext.allowPrivilegeEscalation
// - spec.containers[*].securityContext.procMount
// - spec.containers[*].securityContext.runAsUser
// - spec.containers[*].securityContext.runAsGroup
type PoolerSpecTemplateSpecOsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecOsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecOs)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecOsOutput) ToPoolerSpecTemplateSpecOsOutput() PoolerSpecTemplateSpecOsOutput {
	return o
}

func (o PoolerSpecTemplateSpecOsOutput) ToPoolerSpecTemplateSpecOsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecOsOutput {
	return o
}

func (o PoolerSpecTemplateSpecOsOutput) ToPoolerSpecTemplateSpecOsPtrOutput() PoolerSpecTemplateSpecOsPtrOutput {
	return o.ToPoolerSpecTemplateSpecOsPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecOsOutput) ToPoolerSpecTemplateSpecOsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecOsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecOs) *PoolerSpecTemplateSpecOs {
		return &v
	}).(PoolerSpecTemplateSpecOsPtrOutput)
}

// Name is the name of the operating system. The currently supported values are linux and windows.
// Additional value may be defined in future and can be one of:
// https://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration
// Clients should expect to handle additional values and treat unrecognized values in this field as os: null
func (o PoolerSpecTemplateSpecOsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecOs) string { return v.Name }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecOsPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecOsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecOs)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecOsPtrOutput) ToPoolerSpecTemplateSpecOsPtrOutput() PoolerSpecTemplateSpecOsPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecOsPtrOutput) ToPoolerSpecTemplateSpecOsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecOsPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecOsPtrOutput) Elem() PoolerSpecTemplateSpecOsOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecOs) PoolerSpecTemplateSpecOs {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecOs
		return ret
	}).(PoolerSpecTemplateSpecOsOutput)
}

// Name is the name of the operating system. The currently supported values are linux and windows.
// Additional value may be defined in future and can be one of:
// https://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration
// Clients should expect to handle additional values and treat unrecognized values in this field as os: null
func (o PoolerSpecTemplateSpecOsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecOs) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Overhead represents the resource overhead associated with running a pod for a given RuntimeClass.
// This field will be autopopulated at admission time by the RuntimeClass admission controller. If
// the RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests.
// The RuntimeClass admission controller will reject Pod create requests which have the overhead already
// set. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value
// defined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero.
// More info: https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md
type PoolerSpecTemplateSpecOverhead struct {
}

// PodReadinessGate contains the reference to a pod condition
type PoolerSpecTemplateSpecReadinessGates struct {
	// ConditionType refers to a condition in the pod's condition list with matching type.
	ConditionType string `pulumi:"conditionType"`
}

// PoolerSpecTemplateSpecReadinessGatesInput is an input type that accepts PoolerSpecTemplateSpecReadinessGatesArgs and PoolerSpecTemplateSpecReadinessGatesOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecReadinessGatesInput` via:
//
//	PoolerSpecTemplateSpecReadinessGatesArgs{...}
type PoolerSpecTemplateSpecReadinessGatesInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecReadinessGatesOutput() PoolerSpecTemplateSpecReadinessGatesOutput
	ToPoolerSpecTemplateSpecReadinessGatesOutputWithContext(context.Context) PoolerSpecTemplateSpecReadinessGatesOutput
}

// PodReadinessGate contains the reference to a pod condition
type PoolerSpecTemplateSpecReadinessGatesArgs struct {
	// ConditionType refers to a condition in the pod's condition list with matching type.
	ConditionType pulumi.StringInput `pulumi:"conditionType"`
}

func (PoolerSpecTemplateSpecReadinessGatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecReadinessGates)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecReadinessGatesArgs) ToPoolerSpecTemplateSpecReadinessGatesOutput() PoolerSpecTemplateSpecReadinessGatesOutput {
	return i.ToPoolerSpecTemplateSpecReadinessGatesOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecReadinessGatesArgs) ToPoolerSpecTemplateSpecReadinessGatesOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecReadinessGatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecReadinessGatesOutput)
}

// PoolerSpecTemplateSpecReadinessGatesArrayInput is an input type that accepts PoolerSpecTemplateSpecReadinessGatesArray and PoolerSpecTemplateSpecReadinessGatesArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecReadinessGatesArrayInput` via:
//
//	PoolerSpecTemplateSpecReadinessGatesArray{ PoolerSpecTemplateSpecReadinessGatesArgs{...} }
type PoolerSpecTemplateSpecReadinessGatesArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecReadinessGatesArrayOutput() PoolerSpecTemplateSpecReadinessGatesArrayOutput
	ToPoolerSpecTemplateSpecReadinessGatesArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecReadinessGatesArrayOutput
}

type PoolerSpecTemplateSpecReadinessGatesArray []PoolerSpecTemplateSpecReadinessGatesInput

func (PoolerSpecTemplateSpecReadinessGatesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecReadinessGates)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecReadinessGatesArray) ToPoolerSpecTemplateSpecReadinessGatesArrayOutput() PoolerSpecTemplateSpecReadinessGatesArrayOutput {
	return i.ToPoolerSpecTemplateSpecReadinessGatesArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecReadinessGatesArray) ToPoolerSpecTemplateSpecReadinessGatesArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecReadinessGatesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecReadinessGatesArrayOutput)
}

// PodReadinessGate contains the reference to a pod condition
type PoolerSpecTemplateSpecReadinessGatesOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecReadinessGatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecReadinessGates)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecReadinessGatesOutput) ToPoolerSpecTemplateSpecReadinessGatesOutput() PoolerSpecTemplateSpecReadinessGatesOutput {
	return o
}

func (o PoolerSpecTemplateSpecReadinessGatesOutput) ToPoolerSpecTemplateSpecReadinessGatesOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecReadinessGatesOutput {
	return o
}

// ConditionType refers to a condition in the pod's condition list with matching type.
func (o PoolerSpecTemplateSpecReadinessGatesOutput) ConditionType() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecReadinessGates) string { return v.ConditionType }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecReadinessGatesArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecReadinessGatesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecReadinessGates)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecReadinessGatesArrayOutput) ToPoolerSpecTemplateSpecReadinessGatesArrayOutput() PoolerSpecTemplateSpecReadinessGatesArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecReadinessGatesArrayOutput) ToPoolerSpecTemplateSpecReadinessGatesArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecReadinessGatesArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecReadinessGatesArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecReadinessGatesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecReadinessGates {
		return vs[0].([]PoolerSpecTemplateSpecReadinessGates)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecReadinessGatesOutput)
}

// PodResourceClaim references exactly one ResourceClaim through a ClaimSource.
// It adds a name to it that uniquely identifies the ResourceClaim inside the Pod.
// Containers that need access to the ResourceClaim reference it with this name.
type PoolerSpecTemplateSpecResourceClaims struct {
	// Name uniquely identifies this resource claim inside the pod.
	// This must be a DNS_LABEL.
	Name string `pulumi:"name"`
	// Source describes where to find the ResourceClaim.
	Source *PoolerSpecTemplateSpecResourceClaimsSource `pulumi:"source"`
}

// PoolerSpecTemplateSpecResourceClaimsInput is an input type that accepts PoolerSpecTemplateSpecResourceClaimsArgs and PoolerSpecTemplateSpecResourceClaimsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecResourceClaimsInput` via:
//
//	PoolerSpecTemplateSpecResourceClaimsArgs{...}
type PoolerSpecTemplateSpecResourceClaimsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecResourceClaimsOutput() PoolerSpecTemplateSpecResourceClaimsOutput
	ToPoolerSpecTemplateSpecResourceClaimsOutputWithContext(context.Context) PoolerSpecTemplateSpecResourceClaimsOutput
}

// PodResourceClaim references exactly one ResourceClaim through a ClaimSource.
// It adds a name to it that uniquely identifies the ResourceClaim inside the Pod.
// Containers that need access to the ResourceClaim reference it with this name.
type PoolerSpecTemplateSpecResourceClaimsArgs struct {
	// Name uniquely identifies this resource claim inside the pod.
	// This must be a DNS_LABEL.
	Name pulumi.StringInput `pulumi:"name"`
	// Source describes where to find the ResourceClaim.
	Source PoolerSpecTemplateSpecResourceClaimsSourcePtrInput `pulumi:"source"`
}

func (PoolerSpecTemplateSpecResourceClaimsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecResourceClaims)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecResourceClaimsArgs) ToPoolerSpecTemplateSpecResourceClaimsOutput() PoolerSpecTemplateSpecResourceClaimsOutput {
	return i.ToPoolerSpecTemplateSpecResourceClaimsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecResourceClaimsArgs) ToPoolerSpecTemplateSpecResourceClaimsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecResourceClaimsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecResourceClaimsOutput)
}

// PoolerSpecTemplateSpecResourceClaimsArrayInput is an input type that accepts PoolerSpecTemplateSpecResourceClaimsArray and PoolerSpecTemplateSpecResourceClaimsArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecResourceClaimsArrayInput` via:
//
//	PoolerSpecTemplateSpecResourceClaimsArray{ PoolerSpecTemplateSpecResourceClaimsArgs{...} }
type PoolerSpecTemplateSpecResourceClaimsArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecResourceClaimsArrayOutput() PoolerSpecTemplateSpecResourceClaimsArrayOutput
	ToPoolerSpecTemplateSpecResourceClaimsArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecResourceClaimsArrayOutput
}

type PoolerSpecTemplateSpecResourceClaimsArray []PoolerSpecTemplateSpecResourceClaimsInput

func (PoolerSpecTemplateSpecResourceClaimsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecResourceClaims)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecResourceClaimsArray) ToPoolerSpecTemplateSpecResourceClaimsArrayOutput() PoolerSpecTemplateSpecResourceClaimsArrayOutput {
	return i.ToPoolerSpecTemplateSpecResourceClaimsArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecResourceClaimsArray) ToPoolerSpecTemplateSpecResourceClaimsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecResourceClaimsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecResourceClaimsArrayOutput)
}

// PodResourceClaim references exactly one ResourceClaim through a ClaimSource.
// It adds a name to it that uniquely identifies the ResourceClaim inside the Pod.
// Containers that need access to the ResourceClaim reference it with this name.
type PoolerSpecTemplateSpecResourceClaimsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecResourceClaimsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecResourceClaims)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecResourceClaimsOutput) ToPoolerSpecTemplateSpecResourceClaimsOutput() PoolerSpecTemplateSpecResourceClaimsOutput {
	return o
}

func (o PoolerSpecTemplateSpecResourceClaimsOutput) ToPoolerSpecTemplateSpecResourceClaimsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecResourceClaimsOutput {
	return o
}

// Name uniquely identifies this resource claim inside the pod.
// This must be a DNS_LABEL.
func (o PoolerSpecTemplateSpecResourceClaimsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecResourceClaims) string { return v.Name }).(pulumi.StringOutput)
}

// Source describes where to find the ResourceClaim.
func (o PoolerSpecTemplateSpecResourceClaimsOutput) Source() PoolerSpecTemplateSpecResourceClaimsSourcePtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecResourceClaims) *PoolerSpecTemplateSpecResourceClaimsSource {
		return v.Source
	}).(PoolerSpecTemplateSpecResourceClaimsSourcePtrOutput)
}

type PoolerSpecTemplateSpecResourceClaimsArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecResourceClaimsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecResourceClaims)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecResourceClaimsArrayOutput) ToPoolerSpecTemplateSpecResourceClaimsArrayOutput() PoolerSpecTemplateSpecResourceClaimsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecResourceClaimsArrayOutput) ToPoolerSpecTemplateSpecResourceClaimsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecResourceClaimsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecResourceClaimsArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecResourceClaimsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecResourceClaims {
		return vs[0].([]PoolerSpecTemplateSpecResourceClaims)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecResourceClaimsOutput)
}

// Source describes where to find the ResourceClaim.
type PoolerSpecTemplateSpecResourceClaimsSource struct {
	// ResourceClaimName is the name of a ResourceClaim object in the same
	// namespace as this pod.
	ResourceClaimName *string `pulumi:"resourceClaimName"`
	// ResourceClaimTemplateName is the name of a ResourceClaimTemplate
	// object in the same namespace as this pod.
	//
	// The template will be used to create a new ResourceClaim, which will
	// be bound to this pod. When this pod is deleted, the ResourceClaim
	// will also be deleted. The pod name and resource name, along with a
	// generated component, will be used to form a unique name for the
	// ResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.
	//
	// This field is immutable and no changes will be made to the
	// corresponding ResourceClaim by the control plane after creating the
	// ResourceClaim.
	ResourceClaimTemplateName *string `pulumi:"resourceClaimTemplateName"`
}

// PoolerSpecTemplateSpecResourceClaimsSourceInput is an input type that accepts PoolerSpecTemplateSpecResourceClaimsSourceArgs and PoolerSpecTemplateSpecResourceClaimsSourceOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecResourceClaimsSourceInput` via:
//
//	PoolerSpecTemplateSpecResourceClaimsSourceArgs{...}
type PoolerSpecTemplateSpecResourceClaimsSourceInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecResourceClaimsSourceOutput() PoolerSpecTemplateSpecResourceClaimsSourceOutput
	ToPoolerSpecTemplateSpecResourceClaimsSourceOutputWithContext(context.Context) PoolerSpecTemplateSpecResourceClaimsSourceOutput
}

// Source describes where to find the ResourceClaim.
type PoolerSpecTemplateSpecResourceClaimsSourceArgs struct {
	// ResourceClaimName is the name of a ResourceClaim object in the same
	// namespace as this pod.
	ResourceClaimName pulumi.StringPtrInput `pulumi:"resourceClaimName"`
	// ResourceClaimTemplateName is the name of a ResourceClaimTemplate
	// object in the same namespace as this pod.
	//
	// The template will be used to create a new ResourceClaim, which will
	// be bound to this pod. When this pod is deleted, the ResourceClaim
	// will also be deleted. The pod name and resource name, along with a
	// generated component, will be used to form a unique name for the
	// ResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.
	//
	// This field is immutable and no changes will be made to the
	// corresponding ResourceClaim by the control plane after creating the
	// ResourceClaim.
	ResourceClaimTemplateName pulumi.StringPtrInput `pulumi:"resourceClaimTemplateName"`
}

func (PoolerSpecTemplateSpecResourceClaimsSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecResourceClaimsSource)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecResourceClaimsSourceArgs) ToPoolerSpecTemplateSpecResourceClaimsSourceOutput() PoolerSpecTemplateSpecResourceClaimsSourceOutput {
	return i.ToPoolerSpecTemplateSpecResourceClaimsSourceOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecResourceClaimsSourceArgs) ToPoolerSpecTemplateSpecResourceClaimsSourceOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecResourceClaimsSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecResourceClaimsSourceOutput)
}

func (i PoolerSpecTemplateSpecResourceClaimsSourceArgs) ToPoolerSpecTemplateSpecResourceClaimsSourcePtrOutput() PoolerSpecTemplateSpecResourceClaimsSourcePtrOutput {
	return i.ToPoolerSpecTemplateSpecResourceClaimsSourcePtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecResourceClaimsSourceArgs) ToPoolerSpecTemplateSpecResourceClaimsSourcePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecResourceClaimsSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecResourceClaimsSourceOutput).ToPoolerSpecTemplateSpecResourceClaimsSourcePtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecResourceClaimsSourcePtrInput is an input type that accepts PoolerSpecTemplateSpecResourceClaimsSourceArgs, PoolerSpecTemplateSpecResourceClaimsSourcePtr and PoolerSpecTemplateSpecResourceClaimsSourcePtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecResourceClaimsSourcePtrInput` via:
//
//	        PoolerSpecTemplateSpecResourceClaimsSourceArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecResourceClaimsSourcePtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecResourceClaimsSourcePtrOutput() PoolerSpecTemplateSpecResourceClaimsSourcePtrOutput
	ToPoolerSpecTemplateSpecResourceClaimsSourcePtrOutputWithContext(context.Context) PoolerSpecTemplateSpecResourceClaimsSourcePtrOutput
}

type poolerSpecTemplateSpecResourceClaimsSourcePtrType PoolerSpecTemplateSpecResourceClaimsSourceArgs

func PoolerSpecTemplateSpecResourceClaimsSourcePtr(v *PoolerSpecTemplateSpecResourceClaimsSourceArgs) PoolerSpecTemplateSpecResourceClaimsSourcePtrInput {
	return (*poolerSpecTemplateSpecResourceClaimsSourcePtrType)(v)
}

func (*poolerSpecTemplateSpecResourceClaimsSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecResourceClaimsSource)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecResourceClaimsSourcePtrType) ToPoolerSpecTemplateSpecResourceClaimsSourcePtrOutput() PoolerSpecTemplateSpecResourceClaimsSourcePtrOutput {
	return i.ToPoolerSpecTemplateSpecResourceClaimsSourcePtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecResourceClaimsSourcePtrType) ToPoolerSpecTemplateSpecResourceClaimsSourcePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecResourceClaimsSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecResourceClaimsSourcePtrOutput)
}

// Source describes where to find the ResourceClaim.
type PoolerSpecTemplateSpecResourceClaimsSourceOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecResourceClaimsSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecResourceClaimsSource)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecResourceClaimsSourceOutput) ToPoolerSpecTemplateSpecResourceClaimsSourceOutput() PoolerSpecTemplateSpecResourceClaimsSourceOutput {
	return o
}

func (o PoolerSpecTemplateSpecResourceClaimsSourceOutput) ToPoolerSpecTemplateSpecResourceClaimsSourceOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecResourceClaimsSourceOutput {
	return o
}

func (o PoolerSpecTemplateSpecResourceClaimsSourceOutput) ToPoolerSpecTemplateSpecResourceClaimsSourcePtrOutput() PoolerSpecTemplateSpecResourceClaimsSourcePtrOutput {
	return o.ToPoolerSpecTemplateSpecResourceClaimsSourcePtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecResourceClaimsSourceOutput) ToPoolerSpecTemplateSpecResourceClaimsSourcePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecResourceClaimsSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecResourceClaimsSource) *PoolerSpecTemplateSpecResourceClaimsSource {
		return &v
	}).(PoolerSpecTemplateSpecResourceClaimsSourcePtrOutput)
}

// ResourceClaimName is the name of a ResourceClaim object in the same
// namespace as this pod.
func (o PoolerSpecTemplateSpecResourceClaimsSourceOutput) ResourceClaimName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecResourceClaimsSource) *string { return v.ResourceClaimName }).(pulumi.StringPtrOutput)
}

// ResourceClaimTemplateName is the name of a ResourceClaimTemplate
// object in the same namespace as this pod.
//
// The template will be used to create a new ResourceClaim, which will
// be bound to this pod. When this pod is deleted, the ResourceClaim
// will also be deleted. The pod name and resource name, along with a
// generated component, will be used to form a unique name for the
// ResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.
//
// This field is immutable and no changes will be made to the
// corresponding ResourceClaim by the control plane after creating the
// ResourceClaim.
func (o PoolerSpecTemplateSpecResourceClaimsSourceOutput) ResourceClaimTemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecResourceClaimsSource) *string { return v.ResourceClaimTemplateName }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecResourceClaimsSourcePtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecResourceClaimsSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecResourceClaimsSource)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecResourceClaimsSourcePtrOutput) ToPoolerSpecTemplateSpecResourceClaimsSourcePtrOutput() PoolerSpecTemplateSpecResourceClaimsSourcePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecResourceClaimsSourcePtrOutput) ToPoolerSpecTemplateSpecResourceClaimsSourcePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecResourceClaimsSourcePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecResourceClaimsSourcePtrOutput) Elem() PoolerSpecTemplateSpecResourceClaimsSourceOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecResourceClaimsSource) PoolerSpecTemplateSpecResourceClaimsSource {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecResourceClaimsSource
		return ret
	}).(PoolerSpecTemplateSpecResourceClaimsSourceOutput)
}

// ResourceClaimName is the name of a ResourceClaim object in the same
// namespace as this pod.
func (o PoolerSpecTemplateSpecResourceClaimsSourcePtrOutput) ResourceClaimName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecResourceClaimsSource) *string {
		if v == nil {
			return nil
		}
		return v.ResourceClaimName
	}).(pulumi.StringPtrOutput)
}

// ResourceClaimTemplateName is the name of a ResourceClaimTemplate
// object in the same namespace as this pod.
//
// The template will be used to create a new ResourceClaim, which will
// be bound to this pod. When this pod is deleted, the ResourceClaim
// will also be deleted. The pod name and resource name, along with a
// generated component, will be used to form a unique name for the
// ResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.
//
// This field is immutable and no changes will be made to the
// corresponding ResourceClaim by the control plane after creating the
// ResourceClaim.
func (o PoolerSpecTemplateSpecResourceClaimsSourcePtrOutput) ResourceClaimTemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecResourceClaimsSource) *string {
		if v == nil {
			return nil
		}
		return v.ResourceClaimTemplateName
	}).(pulumi.StringPtrOutput)
}

// PodSchedulingGate is associated to a Pod to guard its scheduling.
type PoolerSpecTemplateSpecSchedulingGates struct {
	// Name of the scheduling gate.
	// Each scheduling gate must have a unique name field.
	Name string `pulumi:"name"`
}

// PoolerSpecTemplateSpecSchedulingGatesInput is an input type that accepts PoolerSpecTemplateSpecSchedulingGatesArgs and PoolerSpecTemplateSpecSchedulingGatesOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecSchedulingGatesInput` via:
//
//	PoolerSpecTemplateSpecSchedulingGatesArgs{...}
type PoolerSpecTemplateSpecSchedulingGatesInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecSchedulingGatesOutput() PoolerSpecTemplateSpecSchedulingGatesOutput
	ToPoolerSpecTemplateSpecSchedulingGatesOutputWithContext(context.Context) PoolerSpecTemplateSpecSchedulingGatesOutput
}

// PodSchedulingGate is associated to a Pod to guard its scheduling.
type PoolerSpecTemplateSpecSchedulingGatesArgs struct {
	// Name of the scheduling gate.
	// Each scheduling gate must have a unique name field.
	Name pulumi.StringInput `pulumi:"name"`
}

func (PoolerSpecTemplateSpecSchedulingGatesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecSchedulingGates)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecSchedulingGatesArgs) ToPoolerSpecTemplateSpecSchedulingGatesOutput() PoolerSpecTemplateSpecSchedulingGatesOutput {
	return i.ToPoolerSpecTemplateSpecSchedulingGatesOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecSchedulingGatesArgs) ToPoolerSpecTemplateSpecSchedulingGatesOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSchedulingGatesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecSchedulingGatesOutput)
}

// PoolerSpecTemplateSpecSchedulingGatesArrayInput is an input type that accepts PoolerSpecTemplateSpecSchedulingGatesArray and PoolerSpecTemplateSpecSchedulingGatesArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecSchedulingGatesArrayInput` via:
//
//	PoolerSpecTemplateSpecSchedulingGatesArray{ PoolerSpecTemplateSpecSchedulingGatesArgs{...} }
type PoolerSpecTemplateSpecSchedulingGatesArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecSchedulingGatesArrayOutput() PoolerSpecTemplateSpecSchedulingGatesArrayOutput
	ToPoolerSpecTemplateSpecSchedulingGatesArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecSchedulingGatesArrayOutput
}

type PoolerSpecTemplateSpecSchedulingGatesArray []PoolerSpecTemplateSpecSchedulingGatesInput

func (PoolerSpecTemplateSpecSchedulingGatesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecSchedulingGates)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecSchedulingGatesArray) ToPoolerSpecTemplateSpecSchedulingGatesArrayOutput() PoolerSpecTemplateSpecSchedulingGatesArrayOutput {
	return i.ToPoolerSpecTemplateSpecSchedulingGatesArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecSchedulingGatesArray) ToPoolerSpecTemplateSpecSchedulingGatesArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSchedulingGatesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecSchedulingGatesArrayOutput)
}

// PodSchedulingGate is associated to a Pod to guard its scheduling.
type PoolerSpecTemplateSpecSchedulingGatesOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecSchedulingGatesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecSchedulingGates)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecSchedulingGatesOutput) ToPoolerSpecTemplateSpecSchedulingGatesOutput() PoolerSpecTemplateSpecSchedulingGatesOutput {
	return o
}

func (o PoolerSpecTemplateSpecSchedulingGatesOutput) ToPoolerSpecTemplateSpecSchedulingGatesOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSchedulingGatesOutput {
	return o
}

// Name of the scheduling gate.
// Each scheduling gate must have a unique name field.
func (o PoolerSpecTemplateSpecSchedulingGatesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSchedulingGates) string { return v.Name }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecSchedulingGatesArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecSchedulingGatesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecSchedulingGates)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecSchedulingGatesArrayOutput) ToPoolerSpecTemplateSpecSchedulingGatesArrayOutput() PoolerSpecTemplateSpecSchedulingGatesArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecSchedulingGatesArrayOutput) ToPoolerSpecTemplateSpecSchedulingGatesArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSchedulingGatesArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecSchedulingGatesArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecSchedulingGatesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecSchedulingGates {
		return vs[0].([]PoolerSpecTemplateSpecSchedulingGates)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecSchedulingGatesOutput)
}

// SecurityContext holds pod-level security attributes and common container settings.
// Optional: Defaults to empty.  See type description for default values of each field.
type PoolerSpecTemplateSpecSecurityContext struct {
	// appArmorProfile is the AppArmor options to use by the containers in this pod.
	// Note that this field cannot be set when spec.os.name is windows.
	AppArmorProfile *PoolerSpecTemplateSpecSecurityContextAppArmorProfile `pulumi:"appArmorProfile"`
	// A special supplemental group that applies to all containers in a pod.
	// Some volume types allow the Kubelet to change the ownership of that volume
	// to be owned by the pod:
	//
	// 1. The owning GID will be the FSGroup
	// 2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
	// 3. The permission bits are OR'd with rw-rw----
	//
	// If unset, the Kubelet will not modify the ownership and permissions of any volume.
	// Note that this field cannot be set when spec.os.name is windows.
	FsGroup *int `pulumi:"fsGroup"`
	// fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
	// before being exposed inside Pod. This field will only apply to
	// volume types which support fsGroup based ownership(and permissions).
	// It will have no effect on ephemeral volume types such as: secret, configmaps
	// and emptydir.
	// Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
	// Note that this field cannot be set when spec.os.name is windows.
	FsGroupChangePolicy *string `pulumi:"fsGroupChangePolicy"`
	// The GID to run the entrypoint of the container process.
	// Uses runtime default if unset.
	// May also be set in SecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence
	// for that container.
	// Note that this field cannot be set when spec.os.name is windows.
	RunAsGroup *int `pulumi:"runAsGroup"`
	// Indicates that the container must run as a non-root user.
	// If true, the Kubelet will validate the image at runtime to ensure that it
	// does not run as UID 0 (root) and fail to start the container if it does.
	// If unset or false, no such validation will be performed.
	// May also be set in SecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsNonRoot *bool `pulumi:"runAsNonRoot"`
	// The UID to run the entrypoint of the container process.
	// Defaults to user specified in image metadata if unspecified.
	// May also be set in SecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence
	// for that container.
	// Note that this field cannot be set when spec.os.name is windows.
	RunAsUser *int `pulumi:"runAsUser"`
	// The SELinux context to be applied to all containers.
	// If unspecified, the container runtime will allocate a random SELinux context for each
	// container.  May also be set in SecurityContext.  If set in
	// both SecurityContext and PodSecurityContext, the value specified in SecurityContext
	// takes precedence for that container.
	// Note that this field cannot be set when spec.os.name is windows.
	SeLinuxOptions *PoolerSpecTemplateSpecSecurityContextSeLinuxOptions `pulumi:"seLinuxOptions"`
	// The seccomp options to use by the containers in this pod.
	// Note that this field cannot be set when spec.os.name is windows.
	SeccompProfile *PoolerSpecTemplateSpecSecurityContextSeccompProfile `pulumi:"seccompProfile"`
	// A list of groups applied to the first process run in each container, in addition
	// to the container's primary GID, the fsGroup (if specified), and group memberships
	// defined in the container image for the uid of the container process. If unspecified,
	// no additional groups are added to any container. Note that group memberships
	// defined in the container image for the uid of the container process are still effective,
	// even if they are not included in this list.
	// Note that this field cannot be set when spec.os.name is windows.
	SupplementalGroups []int `pulumi:"supplementalGroups"`
	// Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
	// sysctls (by the container runtime) might fail to launch.
	// Note that this field cannot be set when spec.os.name is windows.
	Sysctls []PoolerSpecTemplateSpecSecurityContextSysctls `pulumi:"sysctls"`
	// The Windows specific settings applied to all containers.
	// If unspecified, the options within a container's SecurityContext will be used.
	// If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	// Note that this field cannot be set when spec.os.name is linux.
	WindowsOptions *PoolerSpecTemplateSpecSecurityContextWindowsOptions `pulumi:"windowsOptions"`
}

// PoolerSpecTemplateSpecSecurityContextInput is an input type that accepts PoolerSpecTemplateSpecSecurityContextArgs and PoolerSpecTemplateSpecSecurityContextOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecSecurityContextInput` via:
//
//	PoolerSpecTemplateSpecSecurityContextArgs{...}
type PoolerSpecTemplateSpecSecurityContextInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecSecurityContextOutput() PoolerSpecTemplateSpecSecurityContextOutput
	ToPoolerSpecTemplateSpecSecurityContextOutputWithContext(context.Context) PoolerSpecTemplateSpecSecurityContextOutput
}

// SecurityContext holds pod-level security attributes and common container settings.
// Optional: Defaults to empty.  See type description for default values of each field.
type PoolerSpecTemplateSpecSecurityContextArgs struct {
	// appArmorProfile is the AppArmor options to use by the containers in this pod.
	// Note that this field cannot be set when spec.os.name is windows.
	AppArmorProfile PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrInput `pulumi:"appArmorProfile"`
	// A special supplemental group that applies to all containers in a pod.
	// Some volume types allow the Kubelet to change the ownership of that volume
	// to be owned by the pod:
	//
	// 1. The owning GID will be the FSGroup
	// 2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
	// 3. The permission bits are OR'd with rw-rw----
	//
	// If unset, the Kubelet will not modify the ownership and permissions of any volume.
	// Note that this field cannot be set when spec.os.name is windows.
	FsGroup pulumi.IntPtrInput `pulumi:"fsGroup"`
	// fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
	// before being exposed inside Pod. This field will only apply to
	// volume types which support fsGroup based ownership(and permissions).
	// It will have no effect on ephemeral volume types such as: secret, configmaps
	// and emptydir.
	// Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
	// Note that this field cannot be set when spec.os.name is windows.
	FsGroupChangePolicy pulumi.StringPtrInput `pulumi:"fsGroupChangePolicy"`
	// The GID to run the entrypoint of the container process.
	// Uses runtime default if unset.
	// May also be set in SecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence
	// for that container.
	// Note that this field cannot be set when spec.os.name is windows.
	RunAsGroup pulumi.IntPtrInput `pulumi:"runAsGroup"`
	// Indicates that the container must run as a non-root user.
	// If true, the Kubelet will validate the image at runtime to ensure that it
	// does not run as UID 0 (root) and fail to start the container if it does.
	// If unset or false, no such validation will be performed.
	// May also be set in SecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsNonRoot pulumi.BoolPtrInput `pulumi:"runAsNonRoot"`
	// The UID to run the entrypoint of the container process.
	// Defaults to user specified in image metadata if unspecified.
	// May also be set in SecurityContext.  If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence
	// for that container.
	// Note that this field cannot be set when spec.os.name is windows.
	RunAsUser pulumi.IntPtrInput `pulumi:"runAsUser"`
	// The SELinux context to be applied to all containers.
	// If unspecified, the container runtime will allocate a random SELinux context for each
	// container.  May also be set in SecurityContext.  If set in
	// both SecurityContext and PodSecurityContext, the value specified in SecurityContext
	// takes precedence for that container.
	// Note that this field cannot be set when spec.os.name is windows.
	SeLinuxOptions PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrInput `pulumi:"seLinuxOptions"`
	// The seccomp options to use by the containers in this pod.
	// Note that this field cannot be set when spec.os.name is windows.
	SeccompProfile PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrInput `pulumi:"seccompProfile"`
	// A list of groups applied to the first process run in each container, in addition
	// to the container's primary GID, the fsGroup (if specified), and group memberships
	// defined in the container image for the uid of the container process. If unspecified,
	// no additional groups are added to any container. Note that group memberships
	// defined in the container image for the uid of the container process are still effective,
	// even if they are not included in this list.
	// Note that this field cannot be set when spec.os.name is windows.
	SupplementalGroups pulumi.IntArrayInput `pulumi:"supplementalGroups"`
	// Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
	// sysctls (by the container runtime) might fail to launch.
	// Note that this field cannot be set when spec.os.name is windows.
	Sysctls PoolerSpecTemplateSpecSecurityContextSysctlsArrayInput `pulumi:"sysctls"`
	// The Windows specific settings applied to all containers.
	// If unspecified, the options within a container's SecurityContext will be used.
	// If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
	// Note that this field cannot be set when spec.os.name is linux.
	WindowsOptions PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrInput `pulumi:"windowsOptions"`
}

func (PoolerSpecTemplateSpecSecurityContextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecSecurityContext)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecSecurityContextArgs) ToPoolerSpecTemplateSpecSecurityContextOutput() PoolerSpecTemplateSpecSecurityContextOutput {
	return i.ToPoolerSpecTemplateSpecSecurityContextOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecSecurityContextArgs) ToPoolerSpecTemplateSpecSecurityContextOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecSecurityContextOutput)
}

func (i PoolerSpecTemplateSpecSecurityContextArgs) ToPoolerSpecTemplateSpecSecurityContextPtrOutput() PoolerSpecTemplateSpecSecurityContextPtrOutput {
	return i.ToPoolerSpecTemplateSpecSecurityContextPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecSecurityContextArgs) ToPoolerSpecTemplateSpecSecurityContextPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecSecurityContextOutput).ToPoolerSpecTemplateSpecSecurityContextPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecSecurityContextPtrInput is an input type that accepts PoolerSpecTemplateSpecSecurityContextArgs, PoolerSpecTemplateSpecSecurityContextPtr and PoolerSpecTemplateSpecSecurityContextPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecSecurityContextPtrInput` via:
//
//	        PoolerSpecTemplateSpecSecurityContextArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecSecurityContextPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecSecurityContextPtrOutput() PoolerSpecTemplateSpecSecurityContextPtrOutput
	ToPoolerSpecTemplateSpecSecurityContextPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecSecurityContextPtrOutput
}

type poolerSpecTemplateSpecSecurityContextPtrType PoolerSpecTemplateSpecSecurityContextArgs

func PoolerSpecTemplateSpecSecurityContextPtr(v *PoolerSpecTemplateSpecSecurityContextArgs) PoolerSpecTemplateSpecSecurityContextPtrInput {
	return (*poolerSpecTemplateSpecSecurityContextPtrType)(v)
}

func (*poolerSpecTemplateSpecSecurityContextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecSecurityContext)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecSecurityContextPtrType) ToPoolerSpecTemplateSpecSecurityContextPtrOutput() PoolerSpecTemplateSpecSecurityContextPtrOutput {
	return i.ToPoolerSpecTemplateSpecSecurityContextPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecSecurityContextPtrType) ToPoolerSpecTemplateSpecSecurityContextPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecSecurityContextPtrOutput)
}

// SecurityContext holds pod-level security attributes and common container settings.
// Optional: Defaults to empty.  See type description for default values of each field.
type PoolerSpecTemplateSpecSecurityContextOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecSecurityContextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecSecurityContext)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecSecurityContextOutput) ToPoolerSpecTemplateSpecSecurityContextOutput() PoolerSpecTemplateSpecSecurityContextOutput {
	return o
}

func (o PoolerSpecTemplateSpecSecurityContextOutput) ToPoolerSpecTemplateSpecSecurityContextOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextOutput {
	return o
}

func (o PoolerSpecTemplateSpecSecurityContextOutput) ToPoolerSpecTemplateSpecSecurityContextPtrOutput() PoolerSpecTemplateSpecSecurityContextPtrOutput {
	return o.ToPoolerSpecTemplateSpecSecurityContextPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecSecurityContextOutput) ToPoolerSpecTemplateSpecSecurityContextPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecSecurityContext) *PoolerSpecTemplateSpecSecurityContext {
		return &v
	}).(PoolerSpecTemplateSpecSecurityContextPtrOutput)
}

// appArmorProfile is the AppArmor options to use by the containers in this pod.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecSecurityContextOutput) AppArmorProfile() PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSecurityContext) *PoolerSpecTemplateSpecSecurityContextAppArmorProfile {
		return v.AppArmorProfile
	}).(PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput)
}

// A special supplemental group that applies to all containers in a pod.
// Some volume types allow the Kubelet to change the ownership of that volume
// to be owned by the pod:
//
// 1. The owning GID will be the FSGroup
// 2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
// 3. The permission bits are OR'd with rw-rw----
//
// If unset, the Kubelet will not modify the ownership and permissions of any volume.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecSecurityContextOutput) FsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSecurityContext) *int { return v.FsGroup }).(pulumi.IntPtrOutput)
}

// fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
// before being exposed inside Pod. This field will only apply to
// volume types which support fsGroup based ownership(and permissions).
// It will have no effect on ephemeral volume types such as: secret, configmaps
// and emptydir.
// Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecSecurityContextOutput) FsGroupChangePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSecurityContext) *string { return v.FsGroupChangePolicy }).(pulumi.StringPtrOutput)
}

// The GID to run the entrypoint of the container process.
// Uses runtime default if unset.
// May also be set in SecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence
// for that container.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecSecurityContextOutput) RunAsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSecurityContext) *int { return v.RunAsGroup }).(pulumi.IntPtrOutput)
}

// Indicates that the container must run as a non-root user.
// If true, the Kubelet will validate the image at runtime to ensure that it
// does not run as UID 0 (root) and fail to start the container if it does.
// If unset or false, no such validation will be performed.
// May also be set in SecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o PoolerSpecTemplateSpecSecurityContextOutput) RunAsNonRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSecurityContext) *bool { return v.RunAsNonRoot }).(pulumi.BoolPtrOutput)
}

// The UID to run the entrypoint of the container process.
// Defaults to user specified in image metadata if unspecified.
// May also be set in SecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence
// for that container.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecSecurityContextOutput) RunAsUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSecurityContext) *int { return v.RunAsUser }).(pulumi.IntPtrOutput)
}

// The SELinux context to be applied to all containers.
// If unspecified, the container runtime will allocate a random SELinux context for each
// container.  May also be set in SecurityContext.  If set in
// both SecurityContext and PodSecurityContext, the value specified in SecurityContext
// takes precedence for that container.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecSecurityContextOutput) SeLinuxOptions() PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSecurityContext) *PoolerSpecTemplateSpecSecurityContextSeLinuxOptions {
		return v.SeLinuxOptions
	}).(PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput)
}

// The seccomp options to use by the containers in this pod.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecSecurityContextOutput) SeccompProfile() PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSecurityContext) *PoolerSpecTemplateSpecSecurityContextSeccompProfile {
		return v.SeccompProfile
	}).(PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput)
}

// A list of groups applied to the first process run in each container, in addition
// to the container's primary GID, the fsGroup (if specified), and group memberships
// defined in the container image for the uid of the container process. If unspecified,
// no additional groups are added to any container. Note that group memberships
// defined in the container image for the uid of the container process are still effective,
// even if they are not included in this list.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecSecurityContextOutput) SupplementalGroups() pulumi.IntArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSecurityContext) []int { return v.SupplementalGroups }).(pulumi.IntArrayOutput)
}

// Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
// sysctls (by the container runtime) might fail to launch.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecSecurityContextOutput) Sysctls() PoolerSpecTemplateSpecSecurityContextSysctlsArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSecurityContext) []PoolerSpecTemplateSpecSecurityContextSysctls {
		return v.Sysctls
	}).(PoolerSpecTemplateSpecSecurityContextSysctlsArrayOutput)
}

// The Windows specific settings applied to all containers.
// If unspecified, the options within a container's SecurityContext will be used.
// If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
// Note that this field cannot be set when spec.os.name is linux.
func (o PoolerSpecTemplateSpecSecurityContextOutput) WindowsOptions() PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSecurityContext) *PoolerSpecTemplateSpecSecurityContextWindowsOptions {
		return v.WindowsOptions
	}).(PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput)
}

type PoolerSpecTemplateSpecSecurityContextPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecSecurityContextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecSecurityContext)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecSecurityContextPtrOutput) ToPoolerSpecTemplateSpecSecurityContextPtrOutput() PoolerSpecTemplateSpecSecurityContextPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecSecurityContextPtrOutput) ToPoolerSpecTemplateSpecSecurityContextPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecSecurityContextPtrOutput) Elem() PoolerSpecTemplateSpecSecurityContextOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContext) PoolerSpecTemplateSpecSecurityContext {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecSecurityContext
		return ret
	}).(PoolerSpecTemplateSpecSecurityContextOutput)
}

// appArmorProfile is the AppArmor options to use by the containers in this pod.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecSecurityContextPtrOutput) AppArmorProfile() PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContext) *PoolerSpecTemplateSpecSecurityContextAppArmorProfile {
		if v == nil {
			return nil
		}
		return v.AppArmorProfile
	}).(PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput)
}

// A special supplemental group that applies to all containers in a pod.
// Some volume types allow the Kubelet to change the ownership of that volume
// to be owned by the pod:
//
// 1. The owning GID will be the FSGroup
// 2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
// 3. The permission bits are OR'd with rw-rw----
//
// If unset, the Kubelet will not modify the ownership and permissions of any volume.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecSecurityContextPtrOutput) FsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContext) *int {
		if v == nil {
			return nil
		}
		return v.FsGroup
	}).(pulumi.IntPtrOutput)
}

// fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
// before being exposed inside Pod. This field will only apply to
// volume types which support fsGroup based ownership(and permissions).
// It will have no effect on ephemeral volume types such as: secret, configmaps
// and emptydir.
// Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecSecurityContextPtrOutput) FsGroupChangePolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContext) *string {
		if v == nil {
			return nil
		}
		return v.FsGroupChangePolicy
	}).(pulumi.StringPtrOutput)
}

// The GID to run the entrypoint of the container process.
// Uses runtime default if unset.
// May also be set in SecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence
// for that container.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecSecurityContextPtrOutput) RunAsGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContext) *int {
		if v == nil {
			return nil
		}
		return v.RunAsGroup
	}).(pulumi.IntPtrOutput)
}

// Indicates that the container must run as a non-root user.
// If true, the Kubelet will validate the image at runtime to ensure that it
// does not run as UID 0 (root) and fail to start the container if it does.
// If unset or false, no such validation will be performed.
// May also be set in SecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o PoolerSpecTemplateSpecSecurityContextPtrOutput) RunAsNonRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContext) *bool {
		if v == nil {
			return nil
		}
		return v.RunAsNonRoot
	}).(pulumi.BoolPtrOutput)
}

// The UID to run the entrypoint of the container process.
// Defaults to user specified in image metadata if unspecified.
// May also be set in SecurityContext.  If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence
// for that container.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecSecurityContextPtrOutput) RunAsUser() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContext) *int {
		if v == nil {
			return nil
		}
		return v.RunAsUser
	}).(pulumi.IntPtrOutput)
}

// The SELinux context to be applied to all containers.
// If unspecified, the container runtime will allocate a random SELinux context for each
// container.  May also be set in SecurityContext.  If set in
// both SecurityContext and PodSecurityContext, the value specified in SecurityContext
// takes precedence for that container.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecSecurityContextPtrOutput) SeLinuxOptions() PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContext) *PoolerSpecTemplateSpecSecurityContextSeLinuxOptions {
		if v == nil {
			return nil
		}
		return v.SeLinuxOptions
	}).(PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput)
}

// The seccomp options to use by the containers in this pod.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecSecurityContextPtrOutput) SeccompProfile() PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContext) *PoolerSpecTemplateSpecSecurityContextSeccompProfile {
		if v == nil {
			return nil
		}
		return v.SeccompProfile
	}).(PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput)
}

// A list of groups applied to the first process run in each container, in addition
// to the container's primary GID, the fsGroup (if specified), and group memberships
// defined in the container image for the uid of the container process. If unspecified,
// no additional groups are added to any container. Note that group memberships
// defined in the container image for the uid of the container process are still effective,
// even if they are not included in this list.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecSecurityContextPtrOutput) SupplementalGroups() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContext) []int {
		if v == nil {
			return nil
		}
		return v.SupplementalGroups
	}).(pulumi.IntArrayOutput)
}

// Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
// sysctls (by the container runtime) might fail to launch.
// Note that this field cannot be set when spec.os.name is windows.
func (o PoolerSpecTemplateSpecSecurityContextPtrOutput) Sysctls() PoolerSpecTemplateSpecSecurityContextSysctlsArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContext) []PoolerSpecTemplateSpecSecurityContextSysctls {
		if v == nil {
			return nil
		}
		return v.Sysctls
	}).(PoolerSpecTemplateSpecSecurityContextSysctlsArrayOutput)
}

// The Windows specific settings applied to all containers.
// If unspecified, the options within a container's SecurityContext will be used.
// If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
// Note that this field cannot be set when spec.os.name is linux.
func (o PoolerSpecTemplateSpecSecurityContextPtrOutput) WindowsOptions() PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContext) *PoolerSpecTemplateSpecSecurityContextWindowsOptions {
		if v == nil {
			return nil
		}
		return v.WindowsOptions
	}).(PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput)
}

// appArmorProfile is the AppArmor options to use by the containers in this pod.
// Note that this field cannot be set when spec.os.name is windows.
type PoolerSpecTemplateSpecSecurityContextAppArmorProfile struct {
	// localhostProfile indicates a profile loaded on the node that should be used.
	// The profile must be preconfigured on the node to work.
	// Must match the loaded name of the profile.
	// Must be set if and only if type is "Localhost".
	LocalhostProfile *string `pulumi:"localhostProfile"`
	// type indicates which kind of AppArmor profile will be applied.
	// Valid options are:
	//   Localhost - a profile pre-loaded on the node.
	//   RuntimeDefault - the container runtime's default profile.
	//   Unconfined - no AppArmor enforcement.
	Type string `pulumi:"type"`
}

// PoolerSpecTemplateSpecSecurityContextAppArmorProfileInput is an input type that accepts PoolerSpecTemplateSpecSecurityContextAppArmorProfileArgs and PoolerSpecTemplateSpecSecurityContextAppArmorProfileOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecSecurityContextAppArmorProfileInput` via:
//
//	PoolerSpecTemplateSpecSecurityContextAppArmorProfileArgs{...}
type PoolerSpecTemplateSpecSecurityContextAppArmorProfileInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecSecurityContextAppArmorProfileOutput() PoolerSpecTemplateSpecSecurityContextAppArmorProfileOutput
	ToPoolerSpecTemplateSpecSecurityContextAppArmorProfileOutputWithContext(context.Context) PoolerSpecTemplateSpecSecurityContextAppArmorProfileOutput
}

// appArmorProfile is the AppArmor options to use by the containers in this pod.
// Note that this field cannot be set when spec.os.name is windows.
type PoolerSpecTemplateSpecSecurityContextAppArmorProfileArgs struct {
	// localhostProfile indicates a profile loaded on the node that should be used.
	// The profile must be preconfigured on the node to work.
	// Must match the loaded name of the profile.
	// Must be set if and only if type is "Localhost".
	LocalhostProfile pulumi.StringPtrInput `pulumi:"localhostProfile"`
	// type indicates which kind of AppArmor profile will be applied.
	// Valid options are:
	//   Localhost - a profile pre-loaded on the node.
	//   RuntimeDefault - the container runtime's default profile.
	//   Unconfined - no AppArmor enforcement.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PoolerSpecTemplateSpecSecurityContextAppArmorProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecSecurityContextAppArmorProfile)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecSecurityContextAppArmorProfileArgs) ToPoolerSpecTemplateSpecSecurityContextAppArmorProfileOutput() PoolerSpecTemplateSpecSecurityContextAppArmorProfileOutput {
	return i.ToPoolerSpecTemplateSpecSecurityContextAppArmorProfileOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecSecurityContextAppArmorProfileArgs) ToPoolerSpecTemplateSpecSecurityContextAppArmorProfileOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextAppArmorProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecSecurityContextAppArmorProfileOutput)
}

func (i PoolerSpecTemplateSpecSecurityContextAppArmorProfileArgs) ToPoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput() PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput {
	return i.ToPoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecSecurityContextAppArmorProfileArgs) ToPoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecSecurityContextAppArmorProfileOutput).ToPoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrInput is an input type that accepts PoolerSpecTemplateSpecSecurityContextAppArmorProfileArgs, PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtr and PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrInput` via:
//
//	        PoolerSpecTemplateSpecSecurityContextAppArmorProfileArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput() PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput
	ToPoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutputWithContext(context.Context) PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput
}

type poolerSpecTemplateSpecSecurityContextAppArmorProfilePtrType PoolerSpecTemplateSpecSecurityContextAppArmorProfileArgs

func PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtr(v *PoolerSpecTemplateSpecSecurityContextAppArmorProfileArgs) PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrInput {
	return (*poolerSpecTemplateSpecSecurityContextAppArmorProfilePtrType)(v)
}

func (*poolerSpecTemplateSpecSecurityContextAppArmorProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecSecurityContextAppArmorProfile)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecSecurityContextAppArmorProfilePtrType) ToPoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput() PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput {
	return i.ToPoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecSecurityContextAppArmorProfilePtrType) ToPoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput)
}

// appArmorProfile is the AppArmor options to use by the containers in this pod.
// Note that this field cannot be set when spec.os.name is windows.
type PoolerSpecTemplateSpecSecurityContextAppArmorProfileOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecSecurityContextAppArmorProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecSecurityContextAppArmorProfile)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecSecurityContextAppArmorProfileOutput) ToPoolerSpecTemplateSpecSecurityContextAppArmorProfileOutput() PoolerSpecTemplateSpecSecurityContextAppArmorProfileOutput {
	return o
}

func (o PoolerSpecTemplateSpecSecurityContextAppArmorProfileOutput) ToPoolerSpecTemplateSpecSecurityContextAppArmorProfileOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextAppArmorProfileOutput {
	return o
}

func (o PoolerSpecTemplateSpecSecurityContextAppArmorProfileOutput) ToPoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput() PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput {
	return o.ToPoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecSecurityContextAppArmorProfileOutput) ToPoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecSecurityContextAppArmorProfile) *PoolerSpecTemplateSpecSecurityContextAppArmorProfile {
		return &v
	}).(PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput)
}

// localhostProfile indicates a profile loaded on the node that should be used.
// The profile must be preconfigured on the node to work.
// Must match the loaded name of the profile.
// Must be set if and only if type is "Localhost".
func (o PoolerSpecTemplateSpecSecurityContextAppArmorProfileOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSecurityContextAppArmorProfile) *string { return v.LocalhostProfile }).(pulumi.StringPtrOutput)
}

// type indicates which kind of AppArmor profile will be applied.
// Valid options are:
//
//	Localhost - a profile pre-loaded on the node.
//	RuntimeDefault - the container runtime's default profile.
//	Unconfined - no AppArmor enforcement.
func (o PoolerSpecTemplateSpecSecurityContextAppArmorProfileOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSecurityContextAppArmorProfile) string { return v.Type }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecSecurityContextAppArmorProfile)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput) ToPoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput() PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput) ToPoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput) Elem() PoolerSpecTemplateSpecSecurityContextAppArmorProfileOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContextAppArmorProfile) PoolerSpecTemplateSpecSecurityContextAppArmorProfile {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecSecurityContextAppArmorProfile
		return ret
	}).(PoolerSpecTemplateSpecSecurityContextAppArmorProfileOutput)
}

// localhostProfile indicates a profile loaded on the node that should be used.
// The profile must be preconfigured on the node to work.
// Must match the loaded name of the profile.
// Must be set if and only if type is "Localhost".
func (o PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContextAppArmorProfile) *string {
		if v == nil {
			return nil
		}
		return v.LocalhostProfile
	}).(pulumi.StringPtrOutput)
}

// type indicates which kind of AppArmor profile will be applied.
// Valid options are:
//
//	Localhost - a profile pre-loaded on the node.
//	RuntimeDefault - the container runtime's default profile.
//	Unconfined - no AppArmor enforcement.
func (o PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContextAppArmorProfile) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// The SELinux context to be applied to all containers.
// If unspecified, the container runtime will allocate a random SELinux context for each
// container.  May also be set in SecurityContext.  If set in
// both SecurityContext and PodSecurityContext, the value specified in SecurityContext
// takes precedence for that container.
// Note that this field cannot be set when spec.os.name is windows.
type PoolerSpecTemplateSpecSecurityContextSeLinuxOptions struct {
	// Level is SELinux level label that applies to the container.
	Level *string `pulumi:"level"`
	// Role is a SELinux role label that applies to the container.
	Role *string `pulumi:"role"`
	// Type is a SELinux type label that applies to the container.
	Type *string `pulumi:"type"`
	// User is a SELinux user label that applies to the container.
	User *string `pulumi:"user"`
}

// PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsInput is an input type that accepts PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsArgs and PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsInput` via:
//
//	PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsArgs{...}
type PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutput() PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutput
	ToPoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutputWithContext(context.Context) PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutput
}

// The SELinux context to be applied to all containers.
// If unspecified, the container runtime will allocate a random SELinux context for each
// container.  May also be set in SecurityContext.  If set in
// both SecurityContext and PodSecurityContext, the value specified in SecurityContext
// takes precedence for that container.
// Note that this field cannot be set when spec.os.name is windows.
type PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsArgs struct {
	// Level is SELinux level label that applies to the container.
	Level pulumi.StringPtrInput `pulumi:"level"`
	// Role is a SELinux role label that applies to the container.
	Role pulumi.StringPtrInput `pulumi:"role"`
	// Type is a SELinux type label that applies to the container.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// User is a SELinux user label that applies to the container.
	User pulumi.StringPtrInput `pulumi:"user"`
}

func (PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsArgs) ToPoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutput() PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutput {
	return i.ToPoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsArgs) ToPoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutput)
}

func (i PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsArgs) ToPoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput() PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput {
	return i.ToPoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsArgs) ToPoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutput).ToPoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrInput is an input type that accepts PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsArgs, PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtr and PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrInput` via:
//
//	        PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput() PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput
	ToPoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput
}

type poolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrType PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsArgs

func PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtr(v *PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsArgs) PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrInput {
	return (*poolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrType)(v)
}

func (*poolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrType) ToPoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput() PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput {
	return i.ToPoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrType) ToPoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput)
}

// The SELinux context to be applied to all containers.
// If unspecified, the container runtime will allocate a random SELinux context for each
// container.  May also be set in SecurityContext.  If set in
// both SecurityContext and PodSecurityContext, the value specified in SecurityContext
// takes precedence for that container.
// Note that this field cannot be set when spec.os.name is windows.
type PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutput) ToPoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutput() PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutput {
	return o
}

func (o PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutput) ToPoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutput {
	return o
}

func (o PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutput) ToPoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput() PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput {
	return o.ToPoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutput) ToPoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecSecurityContextSeLinuxOptions) *PoolerSpecTemplateSpecSecurityContextSeLinuxOptions {
		return &v
	}).(PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput)
}

// Level is SELinux level label that applies to the container.
func (o PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSecurityContextSeLinuxOptions) *string { return v.Level }).(pulumi.StringPtrOutput)
}

// Role is a SELinux role label that applies to the container.
func (o PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSecurityContextSeLinuxOptions) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// Type is a SELinux type label that applies to the container.
func (o PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSecurityContextSeLinuxOptions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// User is a SELinux user label that applies to the container.
func (o PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSecurityContextSeLinuxOptions) *string { return v.User }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecSecurityContextSeLinuxOptions)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput) ToPoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput() PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput) ToPoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput) Elem() PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContextSeLinuxOptions) PoolerSpecTemplateSpecSecurityContextSeLinuxOptions {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecSecurityContextSeLinuxOptions
		return ret
	}).(PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutput)
}

// Level is SELinux level label that applies to the container.
func (o PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

// Role is a SELinux role label that applies to the container.
func (o PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.Role
	}).(pulumi.StringPtrOutput)
}

// Type is a SELinux type label that applies to the container.
func (o PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// User is a SELinux user label that applies to the container.
func (o PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContextSeLinuxOptions) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// The seccomp options to use by the containers in this pod.
// Note that this field cannot be set when spec.os.name is windows.
type PoolerSpecTemplateSpecSecurityContextSeccompProfile struct {
	// localhostProfile indicates a profile defined in a file on the node should be used.
	// The profile must be preconfigured on the node to work.
	// Must be a descending path, relative to the kubelet's configured seccomp profile location.
	// Must be set if type is "Localhost". Must NOT be set for any other type.
	LocalhostProfile *string `pulumi:"localhostProfile"`
	// type indicates which kind of seccomp profile will be applied.
	// Valid options are:
	//
	// Localhost - a profile defined in a file on the node should be used.
	// RuntimeDefault - the container runtime default profile should be used.
	// Unconfined - no profile should be applied.
	Type string `pulumi:"type"`
}

// PoolerSpecTemplateSpecSecurityContextSeccompProfileInput is an input type that accepts PoolerSpecTemplateSpecSecurityContextSeccompProfileArgs and PoolerSpecTemplateSpecSecurityContextSeccompProfileOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecSecurityContextSeccompProfileInput` via:
//
//	PoolerSpecTemplateSpecSecurityContextSeccompProfileArgs{...}
type PoolerSpecTemplateSpecSecurityContextSeccompProfileInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecSecurityContextSeccompProfileOutput() PoolerSpecTemplateSpecSecurityContextSeccompProfileOutput
	ToPoolerSpecTemplateSpecSecurityContextSeccompProfileOutputWithContext(context.Context) PoolerSpecTemplateSpecSecurityContextSeccompProfileOutput
}

// The seccomp options to use by the containers in this pod.
// Note that this field cannot be set when spec.os.name is windows.
type PoolerSpecTemplateSpecSecurityContextSeccompProfileArgs struct {
	// localhostProfile indicates a profile defined in a file on the node should be used.
	// The profile must be preconfigured on the node to work.
	// Must be a descending path, relative to the kubelet's configured seccomp profile location.
	// Must be set if type is "Localhost". Must NOT be set for any other type.
	LocalhostProfile pulumi.StringPtrInput `pulumi:"localhostProfile"`
	// type indicates which kind of seccomp profile will be applied.
	// Valid options are:
	//
	// Localhost - a profile defined in a file on the node should be used.
	// RuntimeDefault - the container runtime default profile should be used.
	// Unconfined - no profile should be applied.
	Type pulumi.StringInput `pulumi:"type"`
}

func (PoolerSpecTemplateSpecSecurityContextSeccompProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecSecurityContextSeccompProfile)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecSecurityContextSeccompProfileArgs) ToPoolerSpecTemplateSpecSecurityContextSeccompProfileOutput() PoolerSpecTemplateSpecSecurityContextSeccompProfileOutput {
	return i.ToPoolerSpecTemplateSpecSecurityContextSeccompProfileOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecSecurityContextSeccompProfileArgs) ToPoolerSpecTemplateSpecSecurityContextSeccompProfileOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextSeccompProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecSecurityContextSeccompProfileOutput)
}

func (i PoolerSpecTemplateSpecSecurityContextSeccompProfileArgs) ToPoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput() PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput {
	return i.ToPoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecSecurityContextSeccompProfileArgs) ToPoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecSecurityContextSeccompProfileOutput).ToPoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrInput is an input type that accepts PoolerSpecTemplateSpecSecurityContextSeccompProfileArgs, PoolerSpecTemplateSpecSecurityContextSeccompProfilePtr and PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrInput` via:
//
//	        PoolerSpecTemplateSpecSecurityContextSeccompProfileArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput() PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput
	ToPoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutputWithContext(context.Context) PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput
}

type poolerSpecTemplateSpecSecurityContextSeccompProfilePtrType PoolerSpecTemplateSpecSecurityContextSeccompProfileArgs

func PoolerSpecTemplateSpecSecurityContextSeccompProfilePtr(v *PoolerSpecTemplateSpecSecurityContextSeccompProfileArgs) PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrInput {
	return (*poolerSpecTemplateSpecSecurityContextSeccompProfilePtrType)(v)
}

func (*poolerSpecTemplateSpecSecurityContextSeccompProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecSecurityContextSeccompProfile)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecSecurityContextSeccompProfilePtrType) ToPoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput() PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput {
	return i.ToPoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecSecurityContextSeccompProfilePtrType) ToPoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput)
}

// The seccomp options to use by the containers in this pod.
// Note that this field cannot be set when spec.os.name is windows.
type PoolerSpecTemplateSpecSecurityContextSeccompProfileOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecSecurityContextSeccompProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecSecurityContextSeccompProfile)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecSecurityContextSeccompProfileOutput) ToPoolerSpecTemplateSpecSecurityContextSeccompProfileOutput() PoolerSpecTemplateSpecSecurityContextSeccompProfileOutput {
	return o
}

func (o PoolerSpecTemplateSpecSecurityContextSeccompProfileOutput) ToPoolerSpecTemplateSpecSecurityContextSeccompProfileOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextSeccompProfileOutput {
	return o
}

func (o PoolerSpecTemplateSpecSecurityContextSeccompProfileOutput) ToPoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput() PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput {
	return o.ToPoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecSecurityContextSeccompProfileOutput) ToPoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecSecurityContextSeccompProfile) *PoolerSpecTemplateSpecSecurityContextSeccompProfile {
		return &v
	}).(PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput)
}

// localhostProfile indicates a profile defined in a file on the node should be used.
// The profile must be preconfigured on the node to work.
// Must be a descending path, relative to the kubelet's configured seccomp profile location.
// Must be set if type is "Localhost". Must NOT be set for any other type.
func (o PoolerSpecTemplateSpecSecurityContextSeccompProfileOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSecurityContextSeccompProfile) *string { return v.LocalhostProfile }).(pulumi.StringPtrOutput)
}

// type indicates which kind of seccomp profile will be applied.
// Valid options are:
//
// Localhost - a profile defined in a file on the node should be used.
// RuntimeDefault - the container runtime default profile should be used.
// Unconfined - no profile should be applied.
func (o PoolerSpecTemplateSpecSecurityContextSeccompProfileOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSecurityContextSeccompProfile) string { return v.Type }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecSecurityContextSeccompProfile)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput) ToPoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput() PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput) ToPoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput) Elem() PoolerSpecTemplateSpecSecurityContextSeccompProfileOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContextSeccompProfile) PoolerSpecTemplateSpecSecurityContextSeccompProfile {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecSecurityContextSeccompProfile
		return ret
	}).(PoolerSpecTemplateSpecSecurityContextSeccompProfileOutput)
}

// localhostProfile indicates a profile defined in a file on the node should be used.
// The profile must be preconfigured on the node to work.
// Must be a descending path, relative to the kubelet's configured seccomp profile location.
// Must be set if type is "Localhost". Must NOT be set for any other type.
func (o PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput) LocalhostProfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContextSeccompProfile) *string {
		if v == nil {
			return nil
		}
		return v.LocalhostProfile
	}).(pulumi.StringPtrOutput)
}

// type indicates which kind of seccomp profile will be applied.
// Valid options are:
//
// Localhost - a profile defined in a file on the node should be used.
// RuntimeDefault - the container runtime default profile should be used.
// Unconfined - no profile should be applied.
func (o PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContextSeccompProfile) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Sysctl defines a kernel parameter to be set
type PoolerSpecTemplateSpecSecurityContextSysctls struct {
	// Name of a property to set
	Name string `pulumi:"name"`
	// Value of a property to set
	Value string `pulumi:"value"`
}

// PoolerSpecTemplateSpecSecurityContextSysctlsInput is an input type that accepts PoolerSpecTemplateSpecSecurityContextSysctlsArgs and PoolerSpecTemplateSpecSecurityContextSysctlsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecSecurityContextSysctlsInput` via:
//
//	PoolerSpecTemplateSpecSecurityContextSysctlsArgs{...}
type PoolerSpecTemplateSpecSecurityContextSysctlsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecSecurityContextSysctlsOutput() PoolerSpecTemplateSpecSecurityContextSysctlsOutput
	ToPoolerSpecTemplateSpecSecurityContextSysctlsOutputWithContext(context.Context) PoolerSpecTemplateSpecSecurityContextSysctlsOutput
}

// Sysctl defines a kernel parameter to be set
type PoolerSpecTemplateSpecSecurityContextSysctlsArgs struct {
	// Name of a property to set
	Name pulumi.StringInput `pulumi:"name"`
	// Value of a property to set
	Value pulumi.StringInput `pulumi:"value"`
}

func (PoolerSpecTemplateSpecSecurityContextSysctlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecSecurityContextSysctls)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecSecurityContextSysctlsArgs) ToPoolerSpecTemplateSpecSecurityContextSysctlsOutput() PoolerSpecTemplateSpecSecurityContextSysctlsOutput {
	return i.ToPoolerSpecTemplateSpecSecurityContextSysctlsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecSecurityContextSysctlsArgs) ToPoolerSpecTemplateSpecSecurityContextSysctlsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextSysctlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecSecurityContextSysctlsOutput)
}

// PoolerSpecTemplateSpecSecurityContextSysctlsArrayInput is an input type that accepts PoolerSpecTemplateSpecSecurityContextSysctlsArray and PoolerSpecTemplateSpecSecurityContextSysctlsArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecSecurityContextSysctlsArrayInput` via:
//
//	PoolerSpecTemplateSpecSecurityContextSysctlsArray{ PoolerSpecTemplateSpecSecurityContextSysctlsArgs{...} }
type PoolerSpecTemplateSpecSecurityContextSysctlsArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecSecurityContextSysctlsArrayOutput() PoolerSpecTemplateSpecSecurityContextSysctlsArrayOutput
	ToPoolerSpecTemplateSpecSecurityContextSysctlsArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecSecurityContextSysctlsArrayOutput
}

type PoolerSpecTemplateSpecSecurityContextSysctlsArray []PoolerSpecTemplateSpecSecurityContextSysctlsInput

func (PoolerSpecTemplateSpecSecurityContextSysctlsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecSecurityContextSysctls)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecSecurityContextSysctlsArray) ToPoolerSpecTemplateSpecSecurityContextSysctlsArrayOutput() PoolerSpecTemplateSpecSecurityContextSysctlsArrayOutput {
	return i.ToPoolerSpecTemplateSpecSecurityContextSysctlsArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecSecurityContextSysctlsArray) ToPoolerSpecTemplateSpecSecurityContextSysctlsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextSysctlsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecSecurityContextSysctlsArrayOutput)
}

// Sysctl defines a kernel parameter to be set
type PoolerSpecTemplateSpecSecurityContextSysctlsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecSecurityContextSysctlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecSecurityContextSysctls)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecSecurityContextSysctlsOutput) ToPoolerSpecTemplateSpecSecurityContextSysctlsOutput() PoolerSpecTemplateSpecSecurityContextSysctlsOutput {
	return o
}

func (o PoolerSpecTemplateSpecSecurityContextSysctlsOutput) ToPoolerSpecTemplateSpecSecurityContextSysctlsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextSysctlsOutput {
	return o
}

// Name of a property to set
func (o PoolerSpecTemplateSpecSecurityContextSysctlsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSecurityContextSysctls) string { return v.Name }).(pulumi.StringOutput)
}

// Value of a property to set
func (o PoolerSpecTemplateSpecSecurityContextSysctlsOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSecurityContextSysctls) string { return v.Value }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecSecurityContextSysctlsArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecSecurityContextSysctlsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecSecurityContextSysctls)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecSecurityContextSysctlsArrayOutput) ToPoolerSpecTemplateSpecSecurityContextSysctlsArrayOutput() PoolerSpecTemplateSpecSecurityContextSysctlsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecSecurityContextSysctlsArrayOutput) ToPoolerSpecTemplateSpecSecurityContextSysctlsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextSysctlsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecSecurityContextSysctlsArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecSecurityContextSysctlsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecSecurityContextSysctls {
		return vs[0].([]PoolerSpecTemplateSpecSecurityContextSysctls)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecSecurityContextSysctlsOutput)
}

// The Windows specific settings applied to all containers.
// If unspecified, the options within a container's SecurityContext will be used.
// If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
// Note that this field cannot be set when spec.os.name is linux.
type PoolerSpecTemplateSpecSecurityContextWindowsOptions struct {
	// GMSACredentialSpec is where the GMSA admission webhook
	// (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
	// GMSA credential spec named by the GMSACredentialSpecName field.
	GmsaCredentialSpec *string `pulumi:"gmsaCredentialSpec"`
	// GMSACredentialSpecName is the name of the GMSA credential spec to use.
	GmsaCredentialSpecName *string `pulumi:"gmsaCredentialSpecName"`
	// HostProcess determines if a container should be run as a 'Host Process' container.
	// All of a Pod's containers must have the same effective HostProcess value
	// (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
	// In addition, if HostProcess is true then HostNetwork must also be set to true.
	HostProcess *bool `pulumi:"hostProcess"`
	// The UserName in Windows to run the entrypoint of the container process.
	// Defaults to the user specified in image metadata if unspecified.
	// May also be set in PodSecurityContext. If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsUserName *string `pulumi:"runAsUserName"`
}

// PoolerSpecTemplateSpecSecurityContextWindowsOptionsInput is an input type that accepts PoolerSpecTemplateSpecSecurityContextWindowsOptionsArgs and PoolerSpecTemplateSpecSecurityContextWindowsOptionsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecSecurityContextWindowsOptionsInput` via:
//
//	PoolerSpecTemplateSpecSecurityContextWindowsOptionsArgs{...}
type PoolerSpecTemplateSpecSecurityContextWindowsOptionsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecSecurityContextWindowsOptionsOutput() PoolerSpecTemplateSpecSecurityContextWindowsOptionsOutput
	ToPoolerSpecTemplateSpecSecurityContextWindowsOptionsOutputWithContext(context.Context) PoolerSpecTemplateSpecSecurityContextWindowsOptionsOutput
}

// The Windows specific settings applied to all containers.
// If unspecified, the options within a container's SecurityContext will be used.
// If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
// Note that this field cannot be set when spec.os.name is linux.
type PoolerSpecTemplateSpecSecurityContextWindowsOptionsArgs struct {
	// GMSACredentialSpec is where the GMSA admission webhook
	// (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
	// GMSA credential spec named by the GMSACredentialSpecName field.
	GmsaCredentialSpec pulumi.StringPtrInput `pulumi:"gmsaCredentialSpec"`
	// GMSACredentialSpecName is the name of the GMSA credential spec to use.
	GmsaCredentialSpecName pulumi.StringPtrInput `pulumi:"gmsaCredentialSpecName"`
	// HostProcess determines if a container should be run as a 'Host Process' container.
	// All of a Pod's containers must have the same effective HostProcess value
	// (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
	// In addition, if HostProcess is true then HostNetwork must also be set to true.
	HostProcess pulumi.BoolPtrInput `pulumi:"hostProcess"`
	// The UserName in Windows to run the entrypoint of the container process.
	// Defaults to the user specified in image metadata if unspecified.
	// May also be set in PodSecurityContext. If set in both SecurityContext and
	// PodSecurityContext, the value specified in SecurityContext takes precedence.
	RunAsUserName pulumi.StringPtrInput `pulumi:"runAsUserName"`
}

func (PoolerSpecTemplateSpecSecurityContextWindowsOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecSecurityContextWindowsOptions)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecSecurityContextWindowsOptionsArgs) ToPoolerSpecTemplateSpecSecurityContextWindowsOptionsOutput() PoolerSpecTemplateSpecSecurityContextWindowsOptionsOutput {
	return i.ToPoolerSpecTemplateSpecSecurityContextWindowsOptionsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecSecurityContextWindowsOptionsArgs) ToPoolerSpecTemplateSpecSecurityContextWindowsOptionsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextWindowsOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecSecurityContextWindowsOptionsOutput)
}

func (i PoolerSpecTemplateSpecSecurityContextWindowsOptionsArgs) ToPoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput() PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput {
	return i.ToPoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecSecurityContextWindowsOptionsArgs) ToPoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecSecurityContextWindowsOptionsOutput).ToPoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrInput is an input type that accepts PoolerSpecTemplateSpecSecurityContextWindowsOptionsArgs, PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtr and PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrInput` via:
//
//	        PoolerSpecTemplateSpecSecurityContextWindowsOptionsArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput() PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput
	ToPoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput
}

type poolerSpecTemplateSpecSecurityContextWindowsOptionsPtrType PoolerSpecTemplateSpecSecurityContextWindowsOptionsArgs

func PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtr(v *PoolerSpecTemplateSpecSecurityContextWindowsOptionsArgs) PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrInput {
	return (*poolerSpecTemplateSpecSecurityContextWindowsOptionsPtrType)(v)
}

func (*poolerSpecTemplateSpecSecurityContextWindowsOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecSecurityContextWindowsOptions)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecSecurityContextWindowsOptionsPtrType) ToPoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput() PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput {
	return i.ToPoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecSecurityContextWindowsOptionsPtrType) ToPoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput)
}

// The Windows specific settings applied to all containers.
// If unspecified, the options within a container's SecurityContext will be used.
// If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
// Note that this field cannot be set when spec.os.name is linux.
type PoolerSpecTemplateSpecSecurityContextWindowsOptionsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecSecurityContextWindowsOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecSecurityContextWindowsOptions)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecSecurityContextWindowsOptionsOutput) ToPoolerSpecTemplateSpecSecurityContextWindowsOptionsOutput() PoolerSpecTemplateSpecSecurityContextWindowsOptionsOutput {
	return o
}

func (o PoolerSpecTemplateSpecSecurityContextWindowsOptionsOutput) ToPoolerSpecTemplateSpecSecurityContextWindowsOptionsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextWindowsOptionsOutput {
	return o
}

func (o PoolerSpecTemplateSpecSecurityContextWindowsOptionsOutput) ToPoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput() PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput {
	return o.ToPoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecSecurityContextWindowsOptionsOutput) ToPoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecSecurityContextWindowsOptions) *PoolerSpecTemplateSpecSecurityContextWindowsOptions {
		return &v
	}).(PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput)
}

// GMSACredentialSpec is where the GMSA admission webhook
// (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
// GMSA credential spec named by the GMSACredentialSpecName field.
func (o PoolerSpecTemplateSpecSecurityContextWindowsOptionsOutput) GmsaCredentialSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSecurityContextWindowsOptions) *string { return v.GmsaCredentialSpec }).(pulumi.StringPtrOutput)
}

// GMSACredentialSpecName is the name of the GMSA credential spec to use.
func (o PoolerSpecTemplateSpecSecurityContextWindowsOptionsOutput) GmsaCredentialSpecName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSecurityContextWindowsOptions) *string { return v.GmsaCredentialSpecName }).(pulumi.StringPtrOutput)
}

// HostProcess determines if a container should be run as a 'Host Process' container.
// All of a Pod's containers must have the same effective HostProcess value
// (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
// In addition, if HostProcess is true then HostNetwork must also be set to true.
func (o PoolerSpecTemplateSpecSecurityContextWindowsOptionsOutput) HostProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSecurityContextWindowsOptions) *bool { return v.HostProcess }).(pulumi.BoolPtrOutput)
}

// The UserName in Windows to run the entrypoint of the container process.
// Defaults to the user specified in image metadata if unspecified.
// May also be set in PodSecurityContext. If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o PoolerSpecTemplateSpecSecurityContextWindowsOptionsOutput) RunAsUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecSecurityContextWindowsOptions) *string { return v.RunAsUserName }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecSecurityContextWindowsOptions)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput) ToPoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput() PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput) ToPoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput) Elem() PoolerSpecTemplateSpecSecurityContextWindowsOptionsOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContextWindowsOptions) PoolerSpecTemplateSpecSecurityContextWindowsOptions {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecSecurityContextWindowsOptions
		return ret
	}).(PoolerSpecTemplateSpecSecurityContextWindowsOptionsOutput)
}

// GMSACredentialSpec is where the GMSA admission webhook
// (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
// GMSA credential spec named by the GMSACredentialSpecName field.
func (o PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput) GmsaCredentialSpec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContextWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.GmsaCredentialSpec
	}).(pulumi.StringPtrOutput)
}

// GMSACredentialSpecName is the name of the GMSA credential spec to use.
func (o PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput) GmsaCredentialSpecName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContextWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.GmsaCredentialSpecName
	}).(pulumi.StringPtrOutput)
}

// HostProcess determines if a container should be run as a 'Host Process' container.
// All of a Pod's containers must have the same effective HostProcess value
// (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
// In addition, if HostProcess is true then HostNetwork must also be set to true.
func (o PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput) HostProcess() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContextWindowsOptions) *bool {
		if v == nil {
			return nil
		}
		return v.HostProcess
	}).(pulumi.BoolPtrOutput)
}

// The UserName in Windows to run the entrypoint of the container process.
// Defaults to the user specified in image metadata if unspecified.
// May also be set in PodSecurityContext. If set in both SecurityContext and
// PodSecurityContext, the value specified in SecurityContext takes precedence.
func (o PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput) RunAsUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecSecurityContextWindowsOptions) *string {
		if v == nil {
			return nil
		}
		return v.RunAsUserName
	}).(pulumi.StringPtrOutput)
}

// The pod this Toleration is attached to tolerates any taint that matches
// the triple <key,value,effect> using the matching operator <operator>.
type PoolerSpecTemplateSpecTolerations struct {
	// Effect indicates the taint effect to match. Empty means match all taint effects.
	// When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect *string `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys.
	// If the key is empty, operator must be Exists; this combination means to match all values and all keys.
	Key *string `pulumi:"key"`
	// Operator represents a key's relationship to the value.
	// Valid operators are Exists and Equal. Defaults to Equal.
	// Exists is equivalent to wildcard for value, so that a pod can
	// tolerate all taints of a particular category.
	Operator *string `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be
	// of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
	// it is not set, which means tolerate the taint forever (do not evict). Zero and
	// negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds *int `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to.
	// If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value *string `pulumi:"value"`
}

// PoolerSpecTemplateSpecTolerationsInput is an input type that accepts PoolerSpecTemplateSpecTolerationsArgs and PoolerSpecTemplateSpecTolerationsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecTolerationsInput` via:
//
//	PoolerSpecTemplateSpecTolerationsArgs{...}
type PoolerSpecTemplateSpecTolerationsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecTolerationsOutput() PoolerSpecTemplateSpecTolerationsOutput
	ToPoolerSpecTemplateSpecTolerationsOutputWithContext(context.Context) PoolerSpecTemplateSpecTolerationsOutput
}

// The pod this Toleration is attached to tolerates any taint that matches
// the triple <key,value,effect> using the matching operator <operator>.
type PoolerSpecTemplateSpecTolerationsArgs struct {
	// Effect indicates the taint effect to match. Empty means match all taint effects.
	// When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
	Effect pulumi.StringPtrInput `pulumi:"effect"`
	// Key is the taint key that the toleration applies to. Empty means match all taint keys.
	// If the key is empty, operator must be Exists; this combination means to match all values and all keys.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Operator represents a key's relationship to the value.
	// Valid operators are Exists and Equal. Defaults to Equal.
	// Exists is equivalent to wildcard for value, so that a pod can
	// tolerate all taints of a particular category.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// TolerationSeconds represents the period of time the toleration (which must be
	// of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
	// it is not set, which means tolerate the taint forever (do not evict). Zero and
	// negative values will be treated as 0 (evict immediately) by the system.
	TolerationSeconds pulumi.IntPtrInput `pulumi:"tolerationSeconds"`
	// Value is the taint value the toleration matches to.
	// If the operator is Exists, the value should be empty, otherwise just a regular string.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (PoolerSpecTemplateSpecTolerationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecTolerations)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecTolerationsArgs) ToPoolerSpecTemplateSpecTolerationsOutput() PoolerSpecTemplateSpecTolerationsOutput {
	return i.ToPoolerSpecTemplateSpecTolerationsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecTolerationsArgs) ToPoolerSpecTemplateSpecTolerationsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecTolerationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecTolerationsOutput)
}

// PoolerSpecTemplateSpecTolerationsArrayInput is an input type that accepts PoolerSpecTemplateSpecTolerationsArray and PoolerSpecTemplateSpecTolerationsArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecTolerationsArrayInput` via:
//
//	PoolerSpecTemplateSpecTolerationsArray{ PoolerSpecTemplateSpecTolerationsArgs{...} }
type PoolerSpecTemplateSpecTolerationsArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecTolerationsArrayOutput() PoolerSpecTemplateSpecTolerationsArrayOutput
	ToPoolerSpecTemplateSpecTolerationsArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecTolerationsArrayOutput
}

type PoolerSpecTemplateSpecTolerationsArray []PoolerSpecTemplateSpecTolerationsInput

func (PoolerSpecTemplateSpecTolerationsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecTolerations)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecTolerationsArray) ToPoolerSpecTemplateSpecTolerationsArrayOutput() PoolerSpecTemplateSpecTolerationsArrayOutput {
	return i.ToPoolerSpecTemplateSpecTolerationsArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecTolerationsArray) ToPoolerSpecTemplateSpecTolerationsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecTolerationsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecTolerationsArrayOutput)
}

// The pod this Toleration is attached to tolerates any taint that matches
// the triple <key,value,effect> using the matching operator <operator>.
type PoolerSpecTemplateSpecTolerationsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecTolerationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecTolerations)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecTolerationsOutput) ToPoolerSpecTemplateSpecTolerationsOutput() PoolerSpecTemplateSpecTolerationsOutput {
	return o
}

func (o PoolerSpecTemplateSpecTolerationsOutput) ToPoolerSpecTemplateSpecTolerationsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecTolerationsOutput {
	return o
}

// Effect indicates the taint effect to match. Empty means match all taint effects.
// When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
func (o PoolerSpecTemplateSpecTolerationsOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecTolerations) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

// Key is the taint key that the toleration applies to. Empty means match all taint keys.
// If the key is empty, operator must be Exists; this combination means to match all values and all keys.
func (o PoolerSpecTemplateSpecTolerationsOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecTolerations) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Operator represents a key's relationship to the value.
// Valid operators are Exists and Equal. Defaults to Equal.
// Exists is equivalent to wildcard for value, so that a pod can
// tolerate all taints of a particular category.
func (o PoolerSpecTemplateSpecTolerationsOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecTolerations) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// TolerationSeconds represents the period of time the toleration (which must be
// of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
// it is not set, which means tolerate the taint forever (do not evict). Zero and
// negative values will be treated as 0 (evict immediately) by the system.
func (o PoolerSpecTemplateSpecTolerationsOutput) TolerationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecTolerations) *int { return v.TolerationSeconds }).(pulumi.IntPtrOutput)
}

// Value is the taint value the toleration matches to.
// If the operator is Exists, the value should be empty, otherwise just a regular string.
func (o PoolerSpecTemplateSpecTolerationsOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecTolerations) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecTolerationsArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecTolerationsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecTolerations)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecTolerationsArrayOutput) ToPoolerSpecTemplateSpecTolerationsArrayOutput() PoolerSpecTemplateSpecTolerationsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecTolerationsArrayOutput) ToPoolerSpecTemplateSpecTolerationsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecTolerationsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecTolerationsArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecTolerationsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecTolerations {
		return vs[0].([]PoolerSpecTemplateSpecTolerations)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecTolerationsOutput)
}

// TopologySpreadConstraint specifies how to spread matching pods among the given topology.
type PoolerSpecTemplateSpecTopologySpreadConstraints struct {
	// LabelSelector is used to find matching pods.
	// Pods that match this label selector are counted to determine the number of pods
	// in their corresponding topology domain.
	LabelSelector *PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelector `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select the pods over which
	// spreading will be calculated. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are ANDed with labelSelector
	// to select the group of existing pods over which spreading will be calculated
	// for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
	// MatchLabelKeys cannot be set when LabelSelector isn't set.
	// Keys that don't exist in the incoming pod labels will
	// be ignored. A null or empty list means only match against labelSelector.
	//
	// This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
	MatchLabelKeys []string `pulumi:"matchLabelKeys"`
	// MaxSkew describes the degree to which pods may be unevenly distributed.
	// When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
	// between the number of matching pods in the target topology and the global minimum.
	// The global minimum is the minimum number of matching pods in an eligible domain
	// or zero if the number of eligible domains is less than MinDomains.
	// For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
	// labelSelector spread as 2/2/1:
	// In this case, the global minimum is 1.
	// | zone1 | zone2 | zone3 |
	// |  P P  |  P P  |   P   |
	// - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
	//   scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
	//   violate MaxSkew(1).
	// - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
	//   When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
	//   to topologies that satisfy it.
	//   It's a required field. Default value is 1 and 0 is not allowed.
	MaxSkew int `pulumi:"maxSkew"`
	// MinDomains indicates a minimum number of eligible domains.
	// When the number of eligible domains with matching topology keys is less than minDomains,
	// Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
	// And when the number of eligible domains with matching topology keys equals or greater than minDomains,
	// this value has no effect on scheduling.
	// As a result, when the number of eligible domains is less than minDomains,
	// scheduler won't schedule more than maxSkew Pods to those domains.
	// If value is nil, the constraint behaves as if MinDomains is equal to 1.
	// Valid values are integers greater than 0.
	// When value is not nil, WhenUnsatisfiable must be DoNotSchedule.
	//
	// For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
	// labelSelector spread as 2/2/2:
	// | zone1 | zone2 | zone3 |
	// |  P P  |  P P  |  P P  |
	// The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
	// In this situation, new pod with the same labelSelector cannot be scheduled,
	// because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
	// it will violate MaxSkew.
	MinDomains *int `pulumi:"minDomains"`
	// NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
	// when calculating pod topology spread skew. Options are:
	// - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
	// - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.
	//
	// If this value is nil, the behavior is equivalent to the Honor policy.
	// This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
	NodeAffinityPolicy *string `pulumi:"nodeAffinityPolicy"`
	// NodeTaintsPolicy indicates how we will treat node taints when calculating
	// pod topology spread skew. Options are:
	// - Honor: nodes without taints, along with tainted nodes for which the incoming pod
	//   has a toleration, are included.
	// - Ignore: node taints are ignored. All nodes are included.
	//
	// If this value is nil, the behavior is equivalent to the Ignore policy.
	// This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
	NodeTaintsPolicy *string `pulumi:"nodeTaintsPolicy"`
	// TopologyKey is the key of node labels. Nodes that have a label with this key
	// and identical values are considered to be in the same topology.
	// We consider each <key, value> as a "bucket", and try to put balanced number
	// of pods into each bucket.
	// We define a domain as a particular instance of a topology.
	// Also, we define an eligible domain as a domain whose nodes meet the requirements of
	// nodeAffinityPolicy and nodeTaintsPolicy.
	// e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
	// And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
	// It's a required field.
	TopologyKey string `pulumi:"topologyKey"`
	// WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
	// the spread constraint.
	// - DoNotSchedule (default) tells the scheduler not to schedule it.
	// - ScheduleAnyway tells the scheduler to schedule the pod in any location,
	//   but giving higher precedence to topologies that would help reduce the
	//   skew.
	//   A constraint is considered "Unsatisfiable" for an incoming pod
	//   if and only if every possible node assignment for that pod would violate
	//   "MaxSkew" on some topology.
	//   For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
	//   labelSelector spread as 3/1/1:
	//   | zone1 | zone2 | zone3 |
	//   | P P P |   P   |   P   |
	//   If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
	//   to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
	//   MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
	//   won't make it *more* imbalanced.
	//   It's a required field.
	WhenUnsatisfiable string `pulumi:"whenUnsatisfiable"`
}

// PoolerSpecTemplateSpecTopologySpreadConstraintsInput is an input type that accepts PoolerSpecTemplateSpecTopologySpreadConstraintsArgs and PoolerSpecTemplateSpecTopologySpreadConstraintsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecTopologySpreadConstraintsInput` via:
//
//	PoolerSpecTemplateSpecTopologySpreadConstraintsArgs{...}
type PoolerSpecTemplateSpecTopologySpreadConstraintsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecTopologySpreadConstraintsOutput() PoolerSpecTemplateSpecTopologySpreadConstraintsOutput
	ToPoolerSpecTemplateSpecTopologySpreadConstraintsOutputWithContext(context.Context) PoolerSpecTemplateSpecTopologySpreadConstraintsOutput
}

// TopologySpreadConstraint specifies how to spread matching pods among the given topology.
type PoolerSpecTemplateSpecTopologySpreadConstraintsArgs struct {
	// LabelSelector is used to find matching pods.
	// Pods that match this label selector are counted to determine the number of pods
	// in their corresponding topology domain.
	LabelSelector PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrInput `pulumi:"labelSelector"`
	// MatchLabelKeys is a set of pod label keys to select the pods over which
	// spreading will be calculated. The keys are used to lookup values from the
	// incoming pod labels, those key-value labels are ANDed with labelSelector
	// to select the group of existing pods over which spreading will be calculated
	// for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
	// MatchLabelKeys cannot be set when LabelSelector isn't set.
	// Keys that don't exist in the incoming pod labels will
	// be ignored. A null or empty list means only match against labelSelector.
	//
	// This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
	MatchLabelKeys pulumi.StringArrayInput `pulumi:"matchLabelKeys"`
	// MaxSkew describes the degree to which pods may be unevenly distributed.
	// When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
	// between the number of matching pods in the target topology and the global minimum.
	// The global minimum is the minimum number of matching pods in an eligible domain
	// or zero if the number of eligible domains is less than MinDomains.
	// For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
	// labelSelector spread as 2/2/1:
	// In this case, the global minimum is 1.
	// | zone1 | zone2 | zone3 |
	// |  P P  |  P P  |   P   |
	// - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
	//   scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
	//   violate MaxSkew(1).
	// - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
	//   When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
	//   to topologies that satisfy it.
	//   It's a required field. Default value is 1 and 0 is not allowed.
	MaxSkew pulumi.IntInput `pulumi:"maxSkew"`
	// MinDomains indicates a minimum number of eligible domains.
	// When the number of eligible domains with matching topology keys is less than minDomains,
	// Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
	// And when the number of eligible domains with matching topology keys equals or greater than minDomains,
	// this value has no effect on scheduling.
	// As a result, when the number of eligible domains is less than minDomains,
	// scheduler won't schedule more than maxSkew Pods to those domains.
	// If value is nil, the constraint behaves as if MinDomains is equal to 1.
	// Valid values are integers greater than 0.
	// When value is not nil, WhenUnsatisfiable must be DoNotSchedule.
	//
	// For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
	// labelSelector spread as 2/2/2:
	// | zone1 | zone2 | zone3 |
	// |  P P  |  P P  |  P P  |
	// The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
	// In this situation, new pod with the same labelSelector cannot be scheduled,
	// because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
	// it will violate MaxSkew.
	MinDomains pulumi.IntPtrInput `pulumi:"minDomains"`
	// NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
	// when calculating pod topology spread skew. Options are:
	// - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
	// - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.
	//
	// If this value is nil, the behavior is equivalent to the Honor policy.
	// This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
	NodeAffinityPolicy pulumi.StringPtrInput `pulumi:"nodeAffinityPolicy"`
	// NodeTaintsPolicy indicates how we will treat node taints when calculating
	// pod topology spread skew. Options are:
	// - Honor: nodes without taints, along with tainted nodes for which the incoming pod
	//   has a toleration, are included.
	// - Ignore: node taints are ignored. All nodes are included.
	//
	// If this value is nil, the behavior is equivalent to the Ignore policy.
	// This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
	NodeTaintsPolicy pulumi.StringPtrInput `pulumi:"nodeTaintsPolicy"`
	// TopologyKey is the key of node labels. Nodes that have a label with this key
	// and identical values are considered to be in the same topology.
	// We consider each <key, value> as a "bucket", and try to put balanced number
	// of pods into each bucket.
	// We define a domain as a particular instance of a topology.
	// Also, we define an eligible domain as a domain whose nodes meet the requirements of
	// nodeAffinityPolicy and nodeTaintsPolicy.
	// e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
	// And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
	// It's a required field.
	TopologyKey pulumi.StringInput `pulumi:"topologyKey"`
	// WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
	// the spread constraint.
	// - DoNotSchedule (default) tells the scheduler not to schedule it.
	// - ScheduleAnyway tells the scheduler to schedule the pod in any location,
	//   but giving higher precedence to topologies that would help reduce the
	//   skew.
	//   A constraint is considered "Unsatisfiable" for an incoming pod
	//   if and only if every possible node assignment for that pod would violate
	//   "MaxSkew" on some topology.
	//   For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
	//   labelSelector spread as 3/1/1:
	//   | zone1 | zone2 | zone3 |
	//   | P P P |   P   |   P   |
	//   If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
	//   to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
	//   MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
	//   won't make it *more* imbalanced.
	//   It's a required field.
	WhenUnsatisfiable pulumi.StringInput `pulumi:"whenUnsatisfiable"`
}

func (PoolerSpecTemplateSpecTopologySpreadConstraintsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecTopologySpreadConstraints)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecTopologySpreadConstraintsArgs) ToPoolerSpecTemplateSpecTopologySpreadConstraintsOutput() PoolerSpecTemplateSpecTopologySpreadConstraintsOutput {
	return i.ToPoolerSpecTemplateSpecTopologySpreadConstraintsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecTopologySpreadConstraintsArgs) ToPoolerSpecTemplateSpecTopologySpreadConstraintsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecTopologySpreadConstraintsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecTopologySpreadConstraintsOutput)
}

// PoolerSpecTemplateSpecTopologySpreadConstraintsArrayInput is an input type that accepts PoolerSpecTemplateSpecTopologySpreadConstraintsArray and PoolerSpecTemplateSpecTopologySpreadConstraintsArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecTopologySpreadConstraintsArrayInput` via:
//
//	PoolerSpecTemplateSpecTopologySpreadConstraintsArray{ PoolerSpecTemplateSpecTopologySpreadConstraintsArgs{...} }
type PoolerSpecTemplateSpecTopologySpreadConstraintsArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecTopologySpreadConstraintsArrayOutput() PoolerSpecTemplateSpecTopologySpreadConstraintsArrayOutput
	ToPoolerSpecTemplateSpecTopologySpreadConstraintsArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecTopologySpreadConstraintsArrayOutput
}

type PoolerSpecTemplateSpecTopologySpreadConstraintsArray []PoolerSpecTemplateSpecTopologySpreadConstraintsInput

func (PoolerSpecTemplateSpecTopologySpreadConstraintsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecTopologySpreadConstraints)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecTopologySpreadConstraintsArray) ToPoolerSpecTemplateSpecTopologySpreadConstraintsArrayOutput() PoolerSpecTemplateSpecTopologySpreadConstraintsArrayOutput {
	return i.ToPoolerSpecTemplateSpecTopologySpreadConstraintsArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecTopologySpreadConstraintsArray) ToPoolerSpecTemplateSpecTopologySpreadConstraintsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecTopologySpreadConstraintsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecTopologySpreadConstraintsArrayOutput)
}

// TopologySpreadConstraint specifies how to spread matching pods among the given topology.
type PoolerSpecTemplateSpecTopologySpreadConstraintsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecTopologySpreadConstraintsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecTopologySpreadConstraints)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecTopologySpreadConstraintsOutput) ToPoolerSpecTemplateSpecTopologySpreadConstraintsOutput() PoolerSpecTemplateSpecTopologySpreadConstraintsOutput {
	return o
}

func (o PoolerSpecTemplateSpecTopologySpreadConstraintsOutput) ToPoolerSpecTemplateSpecTopologySpreadConstraintsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecTopologySpreadConstraintsOutput {
	return o
}

// LabelSelector is used to find matching pods.
// Pods that match this label selector are counted to determine the number of pods
// in their corresponding topology domain.
func (o PoolerSpecTemplateSpecTopologySpreadConstraintsOutput) LabelSelector() PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecTopologySpreadConstraints) *PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelector {
		return v.LabelSelector
	}).(PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput)
}

// MatchLabelKeys is a set of pod label keys to select the pods over which
// spreading will be calculated. The keys are used to lookup values from the
// incoming pod labels, those key-value labels are ANDed with labelSelector
// to select the group of existing pods over which spreading will be calculated
// for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
// MatchLabelKeys cannot be set when LabelSelector isn't set.
// Keys that don't exist in the incoming pod labels will
// be ignored. A null or empty list means only match against labelSelector.
//
// This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
func (o PoolerSpecTemplateSpecTopologySpreadConstraintsOutput) MatchLabelKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecTopologySpreadConstraints) []string { return v.MatchLabelKeys }).(pulumi.StringArrayOutput)
}

// MaxSkew describes the degree to which pods may be unevenly distributed.
// When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
// between the number of matching pods in the target topology and the global minimum.
// The global minimum is the minimum number of matching pods in an eligible domain
// or zero if the number of eligible domains is less than MinDomains.
// For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
// labelSelector spread as 2/2/1:
// In this case, the global minimum is 1.
// | zone1 | zone2 | zone3 |
// |  P P  |  P P  |   P   |
//   - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
//     scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
//     violate MaxSkew(1).
//   - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
//     When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
//     to topologies that satisfy it.
//     It's a required field. Default value is 1 and 0 is not allowed.
func (o PoolerSpecTemplateSpecTopologySpreadConstraintsOutput) MaxSkew() pulumi.IntOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecTopologySpreadConstraints) int { return v.MaxSkew }).(pulumi.IntOutput)
}

// MinDomains indicates a minimum number of eligible domains.
// When the number of eligible domains with matching topology keys is less than minDomains,
// Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
// And when the number of eligible domains with matching topology keys equals or greater than minDomains,
// this value has no effect on scheduling.
// As a result, when the number of eligible domains is less than minDomains,
// scheduler won't schedule more than maxSkew Pods to those domains.
// If value is nil, the constraint behaves as if MinDomains is equal to 1.
// Valid values are integers greater than 0.
// When value is not nil, WhenUnsatisfiable must be DoNotSchedule.
//
// For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
// labelSelector spread as 2/2/2:
// | zone1 | zone2 | zone3 |
// |  P P  |  P P  |  P P  |
// The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
// In this situation, new pod with the same labelSelector cannot be scheduled,
// because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
// it will violate MaxSkew.
func (o PoolerSpecTemplateSpecTopologySpreadConstraintsOutput) MinDomains() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecTopologySpreadConstraints) *int { return v.MinDomains }).(pulumi.IntPtrOutput)
}

// NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
// when calculating pod topology spread skew. Options are:
// - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
// - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.
//
// If this value is nil, the behavior is equivalent to the Honor policy.
// This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
func (o PoolerSpecTemplateSpecTopologySpreadConstraintsOutput) NodeAffinityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecTopologySpreadConstraints) *string { return v.NodeAffinityPolicy }).(pulumi.StringPtrOutput)
}

// NodeTaintsPolicy indicates how we will treat node taints when calculating
// pod topology spread skew. Options are:
//   - Honor: nodes without taints, along with tainted nodes for which the incoming pod
//     has a toleration, are included.
//   - Ignore: node taints are ignored. All nodes are included.
//
// If this value is nil, the behavior is equivalent to the Ignore policy.
// This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
func (o PoolerSpecTemplateSpecTopologySpreadConstraintsOutput) NodeTaintsPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecTopologySpreadConstraints) *string { return v.NodeTaintsPolicy }).(pulumi.StringPtrOutput)
}

// TopologyKey is the key of node labels. Nodes that have a label with this key
// and identical values are considered to be in the same topology.
// We consider each <key, value> as a "bucket", and try to put balanced number
// of pods into each bucket.
// We define a domain as a particular instance of a topology.
// Also, we define an eligible domain as a domain whose nodes meet the requirements of
// nodeAffinityPolicy and nodeTaintsPolicy.
// e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
// And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
// It's a required field.
func (o PoolerSpecTemplateSpecTopologySpreadConstraintsOutput) TopologyKey() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecTopologySpreadConstraints) string { return v.TopologyKey }).(pulumi.StringOutput)
}

// WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
// the spread constraint.
//   - DoNotSchedule (default) tells the scheduler not to schedule it.
//   - ScheduleAnyway tells the scheduler to schedule the pod in any location,
//     but giving higher precedence to topologies that would help reduce the
//     skew.
//     A constraint is considered "Unsatisfiable" for an incoming pod
//     if and only if every possible node assignment for that pod would violate
//     "MaxSkew" on some topology.
//     For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
//     labelSelector spread as 3/1/1:
//     | zone1 | zone2 | zone3 |
//     | P P P |   P   |   P   |
//     If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
//     to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
//     MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
//     won't make it *more* imbalanced.
//     It's a required field.
func (o PoolerSpecTemplateSpecTopologySpreadConstraintsOutput) WhenUnsatisfiable() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecTopologySpreadConstraints) string { return v.WhenUnsatisfiable }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecTopologySpreadConstraintsArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecTopologySpreadConstraintsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecTopologySpreadConstraints)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecTopologySpreadConstraintsArrayOutput) ToPoolerSpecTemplateSpecTopologySpreadConstraintsArrayOutput() PoolerSpecTemplateSpecTopologySpreadConstraintsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecTopologySpreadConstraintsArrayOutput) ToPoolerSpecTemplateSpecTopologySpreadConstraintsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecTopologySpreadConstraintsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecTopologySpreadConstraintsArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecTopologySpreadConstraintsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecTopologySpreadConstraints {
		return vs[0].([]PoolerSpecTemplateSpecTopologySpreadConstraints)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecTopologySpreadConstraintsOutput)
}

// LabelSelector is used to find matching pods.
// Pods that match this label selector are counted to determine the number of pods
// in their corresponding topology domain.
type PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorInput is an input type that accepts PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorArgs and PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorInput` via:
//
//	PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorArgs{...}
type PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutput() PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutput
	ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutputWithContext(context.Context) PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutput
}

// LabelSelector is used to find matching pods.
// Pods that match this label selector are counted to determine the number of pods
// in their corresponding topology domain.
type PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelector)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorArgs) ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutput() PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutput {
	return i.ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorArgs) ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutput)
}

func (i PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorArgs) ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput() PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput {
	return i.ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorArgs) ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutput).ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrInput is an input type that accepts PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorArgs, PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtr and PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrInput` via:
//
//	        PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput() PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput
	ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput
}

type poolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrType PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorArgs

func PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtr(v *PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorArgs) PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrInput {
	return (*poolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrType)(v)
}

func (*poolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelector)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrType) ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput() PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput {
	return i.ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrType) ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput)
}

// LabelSelector is used to find matching pods.
// Pods that match this label selector are counted to determine the number of pods
// in their corresponding topology domain.
type PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelector)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutput) ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutput() PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutput {
	return o
}

func (o PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutput) ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutput {
	return o
}

func (o PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutput) ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput() PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput {
	return o.ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutput) ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelector) *PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelector {
		return &v
	}).(PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutput) MatchExpressions() PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelector) []PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelector)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput) ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput() PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput) ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput) Elem() PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelector) PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelector {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelector
		return ret
	}).(PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput) MatchExpressions() PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelector) []PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsInput is an input type that accepts PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArgs and PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsInput` via:
//
//	PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArgs{...}
type PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput() PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput
	ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutputWithContext(context.Context) PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArgs) ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput() PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput {
	return i.ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArgs) ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput)
}

// PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayInput is an input type that accepts PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArray and PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayInput` via:
//
//	PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArray{ PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArgs{...} }
type PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput() PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput
	ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput
}

type PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArray []PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsInput

func (PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArray) ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput() PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput {
	return i.ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArray) ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput) ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput() PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput {
	return o
}

func (o PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput) ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput) ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput() PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput) ToPoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressions {
		return vs[0].([]PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
type PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchLabels struct {
}

// Volume represents a named volume in a pod that may be accessed by any container in the pod.
type PoolerSpecTemplateSpecVolumes struct {
	// awsElasticBlockStore represents an AWS Disk resource that is attached to a
	// kubelet's host machine and then exposed to the pod.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	AwsElasticBlockStore *PoolerSpecTemplateSpecVolumesAwsElasticBlockStore `pulumi:"awsElasticBlockStore"`
	// azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
	AzureDisk *PoolerSpecTemplateSpecVolumesAzureDisk `pulumi:"azureDisk"`
	// azureFile represents an Azure File Service mount on the host and bind mount to the pod.
	AzureFile *PoolerSpecTemplateSpecVolumesAzureFile `pulumi:"azureFile"`
	// cephFS represents a Ceph FS mount on the host that shares a pod's lifetime
	Cephfs *PoolerSpecTemplateSpecVolumesCephfs `pulumi:"cephfs"`
	// cinder represents a cinder volume attached and mounted on kubelets host machine.
	// More info: https://examples.k8s.io/mysql-cinder-pd/README.md
	Cinder *PoolerSpecTemplateSpecVolumesCinder `pulumi:"cinder"`
	// configMap represents a configMap that should populate this volume
	ConfigMap *PoolerSpecTemplateSpecVolumesConfigMap `pulumi:"configMap"`
	// csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).
	Csi *PoolerSpecTemplateSpecVolumesCsi `pulumi:"csi"`
	// downwardAPI represents downward API about the pod that should populate this volume
	DownwardAPI *PoolerSpecTemplateSpecVolumesDownwardApi `pulumi:"downwardAPI"`
	// emptyDir represents a temporary directory that shares a pod's lifetime.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
	EmptyDir *PoolerSpecTemplateSpecVolumesEmptyDir `pulumi:"emptyDir"`
	// ephemeral represents a volume that is handled by a cluster storage driver.
	// The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
	// and deleted when the pod is removed.
	//
	// Use this if:
	// a) the volume is only needed while the pod runs,
	// b) features of normal volumes like restoring from snapshot or capacity
	//    tracking are needed,
	// c) the storage driver is specified through a storage class, and
	// d) the storage driver supports dynamic volume provisioning through
	//    a PersistentVolumeClaim (see EphemeralVolumeSource for more
	//    information on the connection between this volume type
	//    and PersistentVolumeClaim).
	//
	// Use PersistentVolumeClaim or one of the vendor-specific
	// APIs for volumes that persist for longer than the lifecycle
	// of an individual pod.
	//
	// Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
	// be used that way - see the documentation of the driver for
	// more information.
	//
	// A pod can use both types of ephemeral volumes and
	// persistent volumes at the same time.
	Ephemeral *PoolerSpecTemplateSpecVolumesEphemeral `pulumi:"ephemeral"`
	// fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
	Fc *PoolerSpecTemplateSpecVolumesFc `pulumi:"fc"`
	// flexVolume represents a generic volume resource that is
	// provisioned/attached using an exec based plugin.
	FlexVolume *PoolerSpecTemplateSpecVolumesFlexVolume `pulumi:"flexVolume"`
	// flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
	Flocker *PoolerSpecTemplateSpecVolumesFlocker `pulumi:"flocker"`
	// gcePersistentDisk represents a GCE Disk resource that is attached to a
	// kubelet's host machine and then exposed to the pod.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	GcePersistentDisk *PoolerSpecTemplateSpecVolumesGcePersistentDisk `pulumi:"gcePersistentDisk"`
	// gitRepo represents a git repository at a particular revision.
	// DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an
	// EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
	// into the Pod's container.
	GitRepo *PoolerSpecTemplateSpecVolumesGitRepo `pulumi:"gitRepo"`
	// glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
	// More info: https://examples.k8s.io/volumes/glusterfs/README.md
	Glusterfs *PoolerSpecTemplateSpecVolumesGlusterfs `pulumi:"glusterfs"`
	// hostPath represents a pre-existing file or directory on the host
	// machine that is directly exposed to the container. This is generally
	// used for system agents or other privileged things that are allowed
	// to see the host machine. Most containers will NOT need this.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	// ---
	// TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not
	// mount host directories as read/write.
	HostPath *PoolerSpecTemplateSpecVolumesHostPath `pulumi:"hostPath"`
	// iscsi represents an ISCSI Disk resource that is attached to a
	// kubelet's host machine and then exposed to the pod.
	// More info: https://examples.k8s.io/volumes/iscsi/README.md
	Iscsi *PoolerSpecTemplateSpecVolumesIscsi `pulumi:"iscsi"`
	// name of the volume.
	// Must be a DNS_LABEL and unique within the pod.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name string `pulumi:"name"`
	// nfs represents an NFS mount on the host that shares a pod's lifetime
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Nfs *PoolerSpecTemplateSpecVolumesNfs `pulumi:"nfs"`
	// persistentVolumeClaimVolumeSource represents a reference to a
	// PersistentVolumeClaim in the same namespace.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
	PersistentVolumeClaim *PoolerSpecTemplateSpecVolumesPersistentVolumeClaim `pulumi:"persistentVolumeClaim"`
	// photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
	PhotonPersistentDisk *PoolerSpecTemplateSpecVolumesPhotonPersistentDisk `pulumi:"photonPersistentDisk"`
	// portworxVolume represents a portworx volume attached and mounted on kubelets host machine
	PortworxVolume *PoolerSpecTemplateSpecVolumesPortworxVolume `pulumi:"portworxVolume"`
	// projected items for all in one resources secrets, configmaps, and downward API
	Projected *PoolerSpecTemplateSpecVolumesProjected `pulumi:"projected"`
	// quobyte represents a Quobyte mount on the host that shares a pod's lifetime
	Quobyte *PoolerSpecTemplateSpecVolumesQuobyte `pulumi:"quobyte"`
	// rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
	// More info: https://examples.k8s.io/volumes/rbd/README.md
	Rbd *PoolerSpecTemplateSpecVolumesRbd `pulumi:"rbd"`
	// scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
	ScaleIO *PoolerSpecTemplateSpecVolumesScaleIo `pulumi:"scaleIO"`
	// secret represents a secret that should populate this volume.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
	Secret *PoolerSpecTemplateSpecVolumesSecret `pulumi:"secret"`
	// storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
	Storageos *PoolerSpecTemplateSpecVolumesStorageos `pulumi:"storageos"`
	// vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
	VsphereVolume *PoolerSpecTemplateSpecVolumesVsphereVolume `pulumi:"vsphereVolume"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumes
func (val *PoolerSpecTemplateSpecVolumes) Defaults() *PoolerSpecTemplateSpecVolumes {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Cephfs = tmp.Cephfs.Defaults()

	tmp.Cinder = tmp.Cinder.Defaults()

	tmp.ConfigMap = tmp.ConfigMap.Defaults()

	tmp.Csi = tmp.Csi.Defaults()

	tmp.FlexVolume = tmp.FlexVolume.Defaults()

	tmp.Iscsi = tmp.Iscsi.Defaults()

	tmp.Rbd = tmp.Rbd.Defaults()

	tmp.ScaleIO = tmp.ScaleIO.Defaults()

	tmp.Storageos = tmp.Storageos.Defaults()

	return &tmp
}

// PoolerSpecTemplateSpecVolumesInput is an input type that accepts PoolerSpecTemplateSpecVolumesArgs and PoolerSpecTemplateSpecVolumesOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesInput` via:
//
//	PoolerSpecTemplateSpecVolumesArgs{...}
type PoolerSpecTemplateSpecVolumesInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesOutput() PoolerSpecTemplateSpecVolumesOutput
	ToPoolerSpecTemplateSpecVolumesOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesOutput
}

// Volume represents a named volume in a pod that may be accessed by any container in the pod.
type PoolerSpecTemplateSpecVolumesArgs struct {
	// awsElasticBlockStore represents an AWS Disk resource that is attached to a
	// kubelet's host machine and then exposed to the pod.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	AwsElasticBlockStore PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrInput `pulumi:"awsElasticBlockStore"`
	// azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
	AzureDisk PoolerSpecTemplateSpecVolumesAzureDiskPtrInput `pulumi:"azureDisk"`
	// azureFile represents an Azure File Service mount on the host and bind mount to the pod.
	AzureFile PoolerSpecTemplateSpecVolumesAzureFilePtrInput `pulumi:"azureFile"`
	// cephFS represents a Ceph FS mount on the host that shares a pod's lifetime
	Cephfs PoolerSpecTemplateSpecVolumesCephfsPtrInput `pulumi:"cephfs"`
	// cinder represents a cinder volume attached and mounted on kubelets host machine.
	// More info: https://examples.k8s.io/mysql-cinder-pd/README.md
	Cinder PoolerSpecTemplateSpecVolumesCinderPtrInput `pulumi:"cinder"`
	// configMap represents a configMap that should populate this volume
	ConfigMap PoolerSpecTemplateSpecVolumesConfigMapPtrInput `pulumi:"configMap"`
	// csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).
	Csi PoolerSpecTemplateSpecVolumesCsiPtrInput `pulumi:"csi"`
	// downwardAPI represents downward API about the pod that should populate this volume
	DownwardAPI PoolerSpecTemplateSpecVolumesDownwardApiPtrInput `pulumi:"downwardAPI"`
	// emptyDir represents a temporary directory that shares a pod's lifetime.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
	EmptyDir PoolerSpecTemplateSpecVolumesEmptyDirPtrInput `pulumi:"emptyDir"`
	// ephemeral represents a volume that is handled by a cluster storage driver.
	// The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
	// and deleted when the pod is removed.
	//
	// Use this if:
	// a) the volume is only needed while the pod runs,
	// b) features of normal volumes like restoring from snapshot or capacity
	//    tracking are needed,
	// c) the storage driver is specified through a storage class, and
	// d) the storage driver supports dynamic volume provisioning through
	//    a PersistentVolumeClaim (see EphemeralVolumeSource for more
	//    information on the connection between this volume type
	//    and PersistentVolumeClaim).
	//
	// Use PersistentVolumeClaim or one of the vendor-specific
	// APIs for volumes that persist for longer than the lifecycle
	// of an individual pod.
	//
	// Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
	// be used that way - see the documentation of the driver for
	// more information.
	//
	// A pod can use both types of ephemeral volumes and
	// persistent volumes at the same time.
	Ephemeral PoolerSpecTemplateSpecVolumesEphemeralPtrInput `pulumi:"ephemeral"`
	// fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
	Fc PoolerSpecTemplateSpecVolumesFcPtrInput `pulumi:"fc"`
	// flexVolume represents a generic volume resource that is
	// provisioned/attached using an exec based plugin.
	FlexVolume PoolerSpecTemplateSpecVolumesFlexVolumePtrInput `pulumi:"flexVolume"`
	// flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
	Flocker PoolerSpecTemplateSpecVolumesFlockerPtrInput `pulumi:"flocker"`
	// gcePersistentDisk represents a GCE Disk resource that is attached to a
	// kubelet's host machine and then exposed to the pod.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	GcePersistentDisk PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrInput `pulumi:"gcePersistentDisk"`
	// gitRepo represents a git repository at a particular revision.
	// DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an
	// EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
	// into the Pod's container.
	GitRepo PoolerSpecTemplateSpecVolumesGitRepoPtrInput `pulumi:"gitRepo"`
	// glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
	// More info: https://examples.k8s.io/volumes/glusterfs/README.md
	Glusterfs PoolerSpecTemplateSpecVolumesGlusterfsPtrInput `pulumi:"glusterfs"`
	// hostPath represents a pre-existing file or directory on the host
	// machine that is directly exposed to the container. This is generally
	// used for system agents or other privileged things that are allowed
	// to see the host machine. Most containers will NOT need this.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	// ---
	// TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not
	// mount host directories as read/write.
	HostPath PoolerSpecTemplateSpecVolumesHostPathPtrInput `pulumi:"hostPath"`
	// iscsi represents an ISCSI Disk resource that is attached to a
	// kubelet's host machine and then exposed to the pod.
	// More info: https://examples.k8s.io/volumes/iscsi/README.md
	Iscsi PoolerSpecTemplateSpecVolumesIscsiPtrInput `pulumi:"iscsi"`
	// name of the volume.
	// Must be a DNS_LABEL and unique within the pod.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	Name pulumi.StringInput `pulumi:"name"`
	// nfs represents an NFS mount on the host that shares a pod's lifetime
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Nfs PoolerSpecTemplateSpecVolumesNfsPtrInput `pulumi:"nfs"`
	// persistentVolumeClaimVolumeSource represents a reference to a
	// PersistentVolumeClaim in the same namespace.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
	PersistentVolumeClaim PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrInput `pulumi:"persistentVolumeClaim"`
	// photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
	PhotonPersistentDisk PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrInput `pulumi:"photonPersistentDisk"`
	// portworxVolume represents a portworx volume attached and mounted on kubelets host machine
	PortworxVolume PoolerSpecTemplateSpecVolumesPortworxVolumePtrInput `pulumi:"portworxVolume"`
	// projected items for all in one resources secrets, configmaps, and downward API
	Projected PoolerSpecTemplateSpecVolumesProjectedPtrInput `pulumi:"projected"`
	// quobyte represents a Quobyte mount on the host that shares a pod's lifetime
	Quobyte PoolerSpecTemplateSpecVolumesQuobytePtrInput `pulumi:"quobyte"`
	// rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
	// More info: https://examples.k8s.io/volumes/rbd/README.md
	Rbd PoolerSpecTemplateSpecVolumesRbdPtrInput `pulumi:"rbd"`
	// scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
	ScaleIO PoolerSpecTemplateSpecVolumesScaleIoPtrInput `pulumi:"scaleIO"`
	// secret represents a secret that should populate this volume.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
	Secret PoolerSpecTemplateSpecVolumesSecretPtrInput `pulumi:"secret"`
	// storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
	Storageos PoolerSpecTemplateSpecVolumesStorageosPtrInput `pulumi:"storageos"`
	// vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
	VsphereVolume PoolerSpecTemplateSpecVolumesVsphereVolumePtrInput `pulumi:"vsphereVolume"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesArgs
func (val *PoolerSpecTemplateSpecVolumesArgs) Defaults() *PoolerSpecTemplateSpecVolumesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (PoolerSpecTemplateSpecVolumesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumes)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesArgs) ToPoolerSpecTemplateSpecVolumesOutput() PoolerSpecTemplateSpecVolumesOutput {
	return i.ToPoolerSpecTemplateSpecVolumesOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesArgs) ToPoolerSpecTemplateSpecVolumesOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesOutput)
}

// PoolerSpecTemplateSpecVolumesArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesArray and PoolerSpecTemplateSpecVolumesArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesArray{ PoolerSpecTemplateSpecVolumesArgs{...} }
type PoolerSpecTemplateSpecVolumesArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesArrayOutput() PoolerSpecTemplateSpecVolumesArrayOutput
	ToPoolerSpecTemplateSpecVolumesArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesArrayOutput
}

type PoolerSpecTemplateSpecVolumesArray []PoolerSpecTemplateSpecVolumesInput

func (PoolerSpecTemplateSpecVolumesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumes)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesArray) ToPoolerSpecTemplateSpecVolumesArrayOutput() PoolerSpecTemplateSpecVolumesArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesArray) ToPoolerSpecTemplateSpecVolumesArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesArrayOutput)
}

// Volume represents a named volume in a pod that may be accessed by any container in the pod.
type PoolerSpecTemplateSpecVolumesOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumes)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesOutput) ToPoolerSpecTemplateSpecVolumesOutput() PoolerSpecTemplateSpecVolumesOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesOutput) ToPoolerSpecTemplateSpecVolumesOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesOutput {
	return o
}

// awsElasticBlockStore represents an AWS Disk resource that is attached to a
// kubelet's host machine and then exposed to the pod.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
func (o PoolerSpecTemplateSpecVolumesOutput) AwsElasticBlockStore() PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesAwsElasticBlockStore {
		return v.AwsElasticBlockStore
	}).(PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput)
}

// azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
func (o PoolerSpecTemplateSpecVolumesOutput) AzureDisk() PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesAzureDisk { return v.AzureDisk }).(PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput)
}

// azureFile represents an Azure File Service mount on the host and bind mount to the pod.
func (o PoolerSpecTemplateSpecVolumesOutput) AzureFile() PoolerSpecTemplateSpecVolumesAzureFilePtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesAzureFile { return v.AzureFile }).(PoolerSpecTemplateSpecVolumesAzureFilePtrOutput)
}

// cephFS represents a Ceph FS mount on the host that shares a pod's lifetime
func (o PoolerSpecTemplateSpecVolumesOutput) Cephfs() PoolerSpecTemplateSpecVolumesCephfsPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesCephfs { return v.Cephfs }).(PoolerSpecTemplateSpecVolumesCephfsPtrOutput)
}

// cinder represents a cinder volume attached and mounted on kubelets host machine.
// More info: https://examples.k8s.io/mysql-cinder-pd/README.md
func (o PoolerSpecTemplateSpecVolumesOutput) Cinder() PoolerSpecTemplateSpecVolumesCinderPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesCinder { return v.Cinder }).(PoolerSpecTemplateSpecVolumesCinderPtrOutput)
}

// configMap represents a configMap that should populate this volume
func (o PoolerSpecTemplateSpecVolumesOutput) ConfigMap() PoolerSpecTemplateSpecVolumesConfigMapPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesConfigMap { return v.ConfigMap }).(PoolerSpecTemplateSpecVolumesConfigMapPtrOutput)
}

// csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).
func (o PoolerSpecTemplateSpecVolumesOutput) Csi() PoolerSpecTemplateSpecVolumesCsiPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesCsi { return v.Csi }).(PoolerSpecTemplateSpecVolumesCsiPtrOutput)
}

// downwardAPI represents downward API about the pod that should populate this volume
func (o PoolerSpecTemplateSpecVolumesOutput) DownwardAPI() PoolerSpecTemplateSpecVolumesDownwardApiPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesDownwardApi { return v.DownwardAPI }).(PoolerSpecTemplateSpecVolumesDownwardApiPtrOutput)
}

// emptyDir represents a temporary directory that shares a pod's lifetime.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
func (o PoolerSpecTemplateSpecVolumesOutput) EmptyDir() PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesEmptyDir { return v.EmptyDir }).(PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput)
}

// ephemeral represents a volume that is handled by a cluster storage driver.
// The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
// and deleted when the pod is removed.
//
// Use this if:
// a) the volume is only needed while the pod runs,
// b) features of normal volumes like restoring from snapshot or capacity
//
//	tracking are needed,
//
// c) the storage driver is specified through a storage class, and
// d) the storage driver supports dynamic volume provisioning through
//
//	a PersistentVolumeClaim (see EphemeralVolumeSource for more
//	information on the connection between this volume type
//	and PersistentVolumeClaim).
//
// Use PersistentVolumeClaim or one of the vendor-specific
// APIs for volumes that persist for longer than the lifecycle
// of an individual pod.
//
// Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
// be used that way - see the documentation of the driver for
// more information.
//
// A pod can use both types of ephemeral volumes and
// persistent volumes at the same time.
func (o PoolerSpecTemplateSpecVolumesOutput) Ephemeral() PoolerSpecTemplateSpecVolumesEphemeralPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesEphemeral { return v.Ephemeral }).(PoolerSpecTemplateSpecVolumesEphemeralPtrOutput)
}

// fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
func (o PoolerSpecTemplateSpecVolumesOutput) Fc() PoolerSpecTemplateSpecVolumesFcPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesFc { return v.Fc }).(PoolerSpecTemplateSpecVolumesFcPtrOutput)
}

// flexVolume represents a generic volume resource that is
// provisioned/attached using an exec based plugin.
func (o PoolerSpecTemplateSpecVolumesOutput) FlexVolume() PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesFlexVolume { return v.FlexVolume }).(PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput)
}

// flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
func (o PoolerSpecTemplateSpecVolumesOutput) Flocker() PoolerSpecTemplateSpecVolumesFlockerPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesFlocker { return v.Flocker }).(PoolerSpecTemplateSpecVolumesFlockerPtrOutput)
}

// gcePersistentDisk represents a GCE Disk resource that is attached to a
// kubelet's host machine and then exposed to the pod.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o PoolerSpecTemplateSpecVolumesOutput) GcePersistentDisk() PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesGcePersistentDisk {
		return v.GcePersistentDisk
	}).(PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput)
}

// gitRepo represents a git repository at a particular revision.
// DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an
// EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
// into the Pod's container.
func (o PoolerSpecTemplateSpecVolumesOutput) GitRepo() PoolerSpecTemplateSpecVolumesGitRepoPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesGitRepo { return v.GitRepo }).(PoolerSpecTemplateSpecVolumesGitRepoPtrOutput)
}

// glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md
func (o PoolerSpecTemplateSpecVolumesOutput) Glusterfs() PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesGlusterfs { return v.Glusterfs }).(PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput)
}

// hostPath represents a pre-existing file or directory on the host
// machine that is directly exposed to the container. This is generally
// used for system agents or other privileged things that are allowed
// to see the host machine. Most containers will NOT need this.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
// ---
// TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not
// mount host directories as read/write.
func (o PoolerSpecTemplateSpecVolumesOutput) HostPath() PoolerSpecTemplateSpecVolumesHostPathPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesHostPath { return v.HostPath }).(PoolerSpecTemplateSpecVolumesHostPathPtrOutput)
}

// iscsi represents an ISCSI Disk resource that is attached to a
// kubelet's host machine and then exposed to the pod.
// More info: https://examples.k8s.io/volumes/iscsi/README.md
func (o PoolerSpecTemplateSpecVolumesOutput) Iscsi() PoolerSpecTemplateSpecVolumesIscsiPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesIscsi { return v.Iscsi }).(PoolerSpecTemplateSpecVolumesIscsiPtrOutput)
}

// name of the volume.
// Must be a DNS_LABEL and unique within the pod.
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
func (o PoolerSpecTemplateSpecVolumesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) string { return v.Name }).(pulumi.StringOutput)
}

// nfs represents an NFS mount on the host that shares a pod's lifetime
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o PoolerSpecTemplateSpecVolumesOutput) Nfs() PoolerSpecTemplateSpecVolumesNfsPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesNfs { return v.Nfs }).(PoolerSpecTemplateSpecVolumesNfsPtrOutput)
}

// persistentVolumeClaimVolumeSource represents a reference to a
// PersistentVolumeClaim in the same namespace.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
func (o PoolerSpecTemplateSpecVolumesOutput) PersistentVolumeClaim() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesPersistentVolumeClaim {
		return v.PersistentVolumeClaim
	}).(PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput)
}

// photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
func (o PoolerSpecTemplateSpecVolumesOutput) PhotonPersistentDisk() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesPhotonPersistentDisk {
		return v.PhotonPersistentDisk
	}).(PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput)
}

// portworxVolume represents a portworx volume attached and mounted on kubelets host machine
func (o PoolerSpecTemplateSpecVolumesOutput) PortworxVolume() PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesPortworxVolume {
		return v.PortworxVolume
	}).(PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput)
}

// projected items for all in one resources secrets, configmaps, and downward API
func (o PoolerSpecTemplateSpecVolumesOutput) Projected() PoolerSpecTemplateSpecVolumesProjectedPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesProjected { return v.Projected }).(PoolerSpecTemplateSpecVolumesProjectedPtrOutput)
}

// quobyte represents a Quobyte mount on the host that shares a pod's lifetime
func (o PoolerSpecTemplateSpecVolumesOutput) Quobyte() PoolerSpecTemplateSpecVolumesQuobytePtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesQuobyte { return v.Quobyte }).(PoolerSpecTemplateSpecVolumesQuobytePtrOutput)
}

// rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
// More info: https://examples.k8s.io/volumes/rbd/README.md
func (o PoolerSpecTemplateSpecVolumesOutput) Rbd() PoolerSpecTemplateSpecVolumesRbdPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesRbd { return v.Rbd }).(PoolerSpecTemplateSpecVolumesRbdPtrOutput)
}

// scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
func (o PoolerSpecTemplateSpecVolumesOutput) ScaleIO() PoolerSpecTemplateSpecVolumesScaleIoPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesScaleIo { return v.ScaleIO }).(PoolerSpecTemplateSpecVolumesScaleIoPtrOutput)
}

// secret represents a secret that should populate this volume.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
func (o PoolerSpecTemplateSpecVolumesOutput) Secret() PoolerSpecTemplateSpecVolumesSecretPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesSecret { return v.Secret }).(PoolerSpecTemplateSpecVolumesSecretPtrOutput)
}

// storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
func (o PoolerSpecTemplateSpecVolumesOutput) Storageos() PoolerSpecTemplateSpecVolumesStorageosPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesStorageos { return v.Storageos }).(PoolerSpecTemplateSpecVolumesStorageosPtrOutput)
}

// vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
func (o PoolerSpecTemplateSpecVolumesOutput) VsphereVolume() PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumes) *PoolerSpecTemplateSpecVolumesVsphereVolume {
		return v.VsphereVolume
	}).(PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput)
}

type PoolerSpecTemplateSpecVolumesArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumes)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesArrayOutput) ToPoolerSpecTemplateSpecVolumesArrayOutput() PoolerSpecTemplateSpecVolumesArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesArrayOutput) ToPoolerSpecTemplateSpecVolumesArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumes {
		return vs[0].([]PoolerSpecTemplateSpecVolumes)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesOutput)
}

// awsElasticBlockStore represents an AWS Disk resource that is attached to a
// kubelet's host machine and then exposed to the pod.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
type PoolerSpecTemplateSpecVolumesAwsElasticBlockStore struct {
	// fsType is the filesystem type of the volume that you want to mount.
	// Tip: Ensure that the filesystem type is supported by the host operating system.
	// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	// TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType *string `pulumi:"fsType"`
	// partition is the partition in the volume that you want to mount.
	// If omitted, the default is to mount by volume name.
	// Examples: For volume /dev/sda1, you specify the partition as "1".
	// Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
	Partition *int `pulumi:"partition"`
	// readOnly value true will force the readOnly setting in VolumeMounts.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	ReadOnly *bool `pulumi:"readOnly"`
	// volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	VolumeID string `pulumi:"volumeID"`
}

// PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreInput is an input type that accepts PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreArgs and PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreInput` via:
//
//	PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreArgs{...}
type PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutput() PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutput
	ToPoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutput
}

// awsElasticBlockStore represents an AWS Disk resource that is attached to a
// kubelet's host machine and then exposed to the pod.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
type PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreArgs struct {
	// fsType is the filesystem type of the volume that you want to mount.
	// Tip: Ensure that the filesystem type is supported by the host operating system.
	// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	// TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// partition is the partition in the volume that you want to mount.
	// If omitted, the default is to mount by volume name.
	// Examples: For volume /dev/sda1, you specify the partition as "1".
	// Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
	Partition pulumi.IntPtrInput `pulumi:"partition"`
	// readOnly value true will force the readOnly setting in VolumeMounts.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
	VolumeID pulumi.StringInput `pulumi:"volumeID"`
}

func (PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesAwsElasticBlockStore)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreArgs) ToPoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutput() PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutput {
	return i.ToPoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreArgs) ToPoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutput)
}

func (i PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreArgs) ToPoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput() PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreArgs) ToPoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutput).ToPoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreArgs, PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtr and PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput() PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput
	ToPoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput
}

type poolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrType PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreArgs

func PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtr(v *PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreArgs) PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrInput {
	return (*poolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesAwsElasticBlockStore)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrType) ToPoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput() PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrType) ToPoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput)
}

// awsElasticBlockStore represents an AWS Disk resource that is attached to a
// kubelet's host machine and then exposed to the pod.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
type PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesAwsElasticBlockStore)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutput) ToPoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutput() PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutput) ToPoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutput) ToPoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput() PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutput) ToPoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesAwsElasticBlockStore) *PoolerSpecTemplateSpecVolumesAwsElasticBlockStore {
		return &v
	}).(PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput)
}

// fsType is the filesystem type of the volume that you want to mount.
// Tip: Ensure that the filesystem type is supported by the host operating system.
// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
// TODO: how do we prevent errors in the filesystem from compromising the machine
func (o PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesAwsElasticBlockStore) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// partition is the partition in the volume that you want to mount.
// If omitted, the default is to mount by volume name.
// Examples: For volume /dev/sda1, you specify the partition as "1".
// Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
func (o PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutput) Partition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesAwsElasticBlockStore) *int { return v.Partition }).(pulumi.IntPtrOutput)
}

// readOnly value true will force the readOnly setting in VolumeMounts.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
func (o PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesAwsElasticBlockStore) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).
// More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
func (o PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutput) VolumeID() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesAwsElasticBlockStore) string { return v.VolumeID }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesAwsElasticBlockStore)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput) ToPoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput() PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput) ToPoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput) Elem() PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesAwsElasticBlockStore) PoolerSpecTemplateSpecVolumesAwsElasticBlockStore {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesAwsElasticBlockStore
		return ret
	}).(PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutput)
}

// fsType is the filesystem type of the volume that you want to mount.
// Tip: Ensure that the filesystem type is supported by the host operating system.
// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
// TODO: how do we prevent errors in the filesystem from compromising the machine
func (o PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesAwsElasticBlockStore) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// partition is the partition in the volume that you want to mount.
// If omitted, the default is to mount by volume name.
// Examples: For volume /dev/sda1, you specify the partition as "1".
// Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
func (o PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput) Partition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesAwsElasticBlockStore) *int {
		if v == nil {
			return nil
		}
		return v.Partition
	}).(pulumi.IntPtrOutput)
}

// readOnly value true will force the readOnly setting in VolumeMounts.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
func (o PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesAwsElasticBlockStore) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).
// More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
func (o PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput) VolumeID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesAwsElasticBlockStore) *string {
		if v == nil {
			return nil
		}
		return &v.VolumeID
	}).(pulumi.StringPtrOutput)
}

// azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
type PoolerSpecTemplateSpecVolumesAzureDisk struct {
	// cachingMode is the Host Caching mode: None, Read Only, Read Write.
	CachingMode *string `pulumi:"cachingMode"`
	// diskName is the Name of the data disk in the blob storage
	DiskName string `pulumi:"diskName"`
	// diskURI is the URI of data disk in the blob storage
	DiskURI string `pulumi:"diskURI"`
	// fsType is Filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`
	// kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
	Kind *string `pulumi:"kind"`
	// readOnly Defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`
}

// PoolerSpecTemplateSpecVolumesAzureDiskInput is an input type that accepts PoolerSpecTemplateSpecVolumesAzureDiskArgs and PoolerSpecTemplateSpecVolumesAzureDiskOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesAzureDiskInput` via:
//
//	PoolerSpecTemplateSpecVolumesAzureDiskArgs{...}
type PoolerSpecTemplateSpecVolumesAzureDiskInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesAzureDiskOutput() PoolerSpecTemplateSpecVolumesAzureDiskOutput
	ToPoolerSpecTemplateSpecVolumesAzureDiskOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesAzureDiskOutput
}

// azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
type PoolerSpecTemplateSpecVolumesAzureDiskArgs struct {
	// cachingMode is the Host Caching mode: None, Read Only, Read Write.
	CachingMode pulumi.StringPtrInput `pulumi:"cachingMode"`
	// diskName is the Name of the data disk in the blob storage
	DiskName pulumi.StringInput `pulumi:"diskName"`
	// diskURI is the URI of data disk in the blob storage
	DiskURI pulumi.StringInput `pulumi:"diskURI"`
	// fsType is Filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// readOnly Defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
}

func (PoolerSpecTemplateSpecVolumesAzureDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesAzureDisk)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesAzureDiskArgs) ToPoolerSpecTemplateSpecVolumesAzureDiskOutput() PoolerSpecTemplateSpecVolumesAzureDiskOutput {
	return i.ToPoolerSpecTemplateSpecVolumesAzureDiskOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesAzureDiskArgs) ToPoolerSpecTemplateSpecVolumesAzureDiskOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesAzureDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesAzureDiskOutput)
}

func (i PoolerSpecTemplateSpecVolumesAzureDiskArgs) ToPoolerSpecTemplateSpecVolumesAzureDiskPtrOutput() PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesAzureDiskPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesAzureDiskArgs) ToPoolerSpecTemplateSpecVolumesAzureDiskPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesAzureDiskOutput).ToPoolerSpecTemplateSpecVolumesAzureDiskPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesAzureDiskPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesAzureDiskArgs, PoolerSpecTemplateSpecVolumesAzureDiskPtr and PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesAzureDiskPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesAzureDiskArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesAzureDiskPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesAzureDiskPtrOutput() PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput
	ToPoolerSpecTemplateSpecVolumesAzureDiskPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput
}

type poolerSpecTemplateSpecVolumesAzureDiskPtrType PoolerSpecTemplateSpecVolumesAzureDiskArgs

func PoolerSpecTemplateSpecVolumesAzureDiskPtr(v *PoolerSpecTemplateSpecVolumesAzureDiskArgs) PoolerSpecTemplateSpecVolumesAzureDiskPtrInput {
	return (*poolerSpecTemplateSpecVolumesAzureDiskPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesAzureDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesAzureDisk)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesAzureDiskPtrType) ToPoolerSpecTemplateSpecVolumesAzureDiskPtrOutput() PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesAzureDiskPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesAzureDiskPtrType) ToPoolerSpecTemplateSpecVolumesAzureDiskPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput)
}

// azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
type PoolerSpecTemplateSpecVolumesAzureDiskOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesAzureDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesAzureDisk)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesAzureDiskOutput) ToPoolerSpecTemplateSpecVolumesAzureDiskOutput() PoolerSpecTemplateSpecVolumesAzureDiskOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesAzureDiskOutput) ToPoolerSpecTemplateSpecVolumesAzureDiskOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesAzureDiskOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesAzureDiskOutput) ToPoolerSpecTemplateSpecVolumesAzureDiskPtrOutput() PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesAzureDiskPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesAzureDiskOutput) ToPoolerSpecTemplateSpecVolumesAzureDiskPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesAzureDisk) *PoolerSpecTemplateSpecVolumesAzureDisk {
		return &v
	}).(PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput)
}

// cachingMode is the Host Caching mode: None, Read Only, Read Write.
func (o PoolerSpecTemplateSpecVolumesAzureDiskOutput) CachingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesAzureDisk) *string { return v.CachingMode }).(pulumi.StringPtrOutput)
}

// diskName is the Name of the data disk in the blob storage
func (o PoolerSpecTemplateSpecVolumesAzureDiskOutput) DiskName() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesAzureDisk) string { return v.DiskName }).(pulumi.StringOutput)
}

// diskURI is the URI of data disk in the blob storage
func (o PoolerSpecTemplateSpecVolumesAzureDiskOutput) DiskURI() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesAzureDisk) string { return v.DiskURI }).(pulumi.StringOutput)
}

// fsType is Filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesAzureDiskOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesAzureDisk) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
func (o PoolerSpecTemplateSpecVolumesAzureDiskOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesAzureDisk) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// readOnly Defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesAzureDiskOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesAzureDisk) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

type PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesAzureDisk)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput) ToPoolerSpecTemplateSpecVolumesAzureDiskPtrOutput() PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput) ToPoolerSpecTemplateSpecVolumesAzureDiskPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput) Elem() PoolerSpecTemplateSpecVolumesAzureDiskOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesAzureDisk) PoolerSpecTemplateSpecVolumesAzureDisk {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesAzureDisk
		return ret
	}).(PoolerSpecTemplateSpecVolumesAzureDiskOutput)
}

// cachingMode is the Host Caching mode: None, Read Only, Read Write.
func (o PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput) CachingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesAzureDisk) *string {
		if v == nil {
			return nil
		}
		return v.CachingMode
	}).(pulumi.StringPtrOutput)
}

// diskName is the Name of the data disk in the blob storage
func (o PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput) DiskName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesAzureDisk) *string {
		if v == nil {
			return nil
		}
		return &v.DiskName
	}).(pulumi.StringPtrOutput)
}

// diskURI is the URI of data disk in the blob storage
func (o PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput) DiskURI() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesAzureDisk) *string {
		if v == nil {
			return nil
		}
		return &v.DiskURI
	}).(pulumi.StringPtrOutput)
}

// fsType is Filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesAzureDisk) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
func (o PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesAzureDisk) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// readOnly Defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesAzureDisk) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// azureFile represents an Azure File Service mount on the host and bind mount to the pod.
type PoolerSpecTemplateSpecVolumesAzureFile struct {
	// readOnly defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`
	// secretName is the  name of secret that contains Azure Storage Account Name and Key
	SecretName string `pulumi:"secretName"`
	// shareName is the azure share Name
	ShareName string `pulumi:"shareName"`
}

// PoolerSpecTemplateSpecVolumesAzureFileInput is an input type that accepts PoolerSpecTemplateSpecVolumesAzureFileArgs and PoolerSpecTemplateSpecVolumesAzureFileOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesAzureFileInput` via:
//
//	PoolerSpecTemplateSpecVolumesAzureFileArgs{...}
type PoolerSpecTemplateSpecVolumesAzureFileInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesAzureFileOutput() PoolerSpecTemplateSpecVolumesAzureFileOutput
	ToPoolerSpecTemplateSpecVolumesAzureFileOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesAzureFileOutput
}

// azureFile represents an Azure File Service mount on the host and bind mount to the pod.
type PoolerSpecTemplateSpecVolumesAzureFileArgs struct {
	// readOnly defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// secretName is the  name of secret that contains Azure Storage Account Name and Key
	SecretName pulumi.StringInput `pulumi:"secretName"`
	// shareName is the azure share Name
	ShareName pulumi.StringInput `pulumi:"shareName"`
}

func (PoolerSpecTemplateSpecVolumesAzureFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesAzureFile)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesAzureFileArgs) ToPoolerSpecTemplateSpecVolumesAzureFileOutput() PoolerSpecTemplateSpecVolumesAzureFileOutput {
	return i.ToPoolerSpecTemplateSpecVolumesAzureFileOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesAzureFileArgs) ToPoolerSpecTemplateSpecVolumesAzureFileOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesAzureFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesAzureFileOutput)
}

func (i PoolerSpecTemplateSpecVolumesAzureFileArgs) ToPoolerSpecTemplateSpecVolumesAzureFilePtrOutput() PoolerSpecTemplateSpecVolumesAzureFilePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesAzureFilePtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesAzureFileArgs) ToPoolerSpecTemplateSpecVolumesAzureFilePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesAzureFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesAzureFileOutput).ToPoolerSpecTemplateSpecVolumesAzureFilePtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesAzureFilePtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesAzureFileArgs, PoolerSpecTemplateSpecVolumesAzureFilePtr and PoolerSpecTemplateSpecVolumesAzureFilePtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesAzureFilePtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesAzureFileArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesAzureFilePtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesAzureFilePtrOutput() PoolerSpecTemplateSpecVolumesAzureFilePtrOutput
	ToPoolerSpecTemplateSpecVolumesAzureFilePtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesAzureFilePtrOutput
}

type poolerSpecTemplateSpecVolumesAzureFilePtrType PoolerSpecTemplateSpecVolumesAzureFileArgs

func PoolerSpecTemplateSpecVolumesAzureFilePtr(v *PoolerSpecTemplateSpecVolumesAzureFileArgs) PoolerSpecTemplateSpecVolumesAzureFilePtrInput {
	return (*poolerSpecTemplateSpecVolumesAzureFilePtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesAzureFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesAzureFile)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesAzureFilePtrType) ToPoolerSpecTemplateSpecVolumesAzureFilePtrOutput() PoolerSpecTemplateSpecVolumesAzureFilePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesAzureFilePtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesAzureFilePtrType) ToPoolerSpecTemplateSpecVolumesAzureFilePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesAzureFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesAzureFilePtrOutput)
}

// azureFile represents an Azure File Service mount on the host and bind mount to the pod.
type PoolerSpecTemplateSpecVolumesAzureFileOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesAzureFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesAzureFile)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesAzureFileOutput) ToPoolerSpecTemplateSpecVolumesAzureFileOutput() PoolerSpecTemplateSpecVolumesAzureFileOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesAzureFileOutput) ToPoolerSpecTemplateSpecVolumesAzureFileOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesAzureFileOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesAzureFileOutput) ToPoolerSpecTemplateSpecVolumesAzureFilePtrOutput() PoolerSpecTemplateSpecVolumesAzureFilePtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesAzureFilePtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesAzureFileOutput) ToPoolerSpecTemplateSpecVolumesAzureFilePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesAzureFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesAzureFile) *PoolerSpecTemplateSpecVolumesAzureFile {
		return &v
	}).(PoolerSpecTemplateSpecVolumesAzureFilePtrOutput)
}

// readOnly defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesAzureFileOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesAzureFile) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// secretName is the  name of secret that contains Azure Storage Account Name and Key
func (o PoolerSpecTemplateSpecVolumesAzureFileOutput) SecretName() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesAzureFile) string { return v.SecretName }).(pulumi.StringOutput)
}

// shareName is the azure share Name
func (o PoolerSpecTemplateSpecVolumesAzureFileOutput) ShareName() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesAzureFile) string { return v.ShareName }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecVolumesAzureFilePtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesAzureFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesAzureFile)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesAzureFilePtrOutput) ToPoolerSpecTemplateSpecVolumesAzureFilePtrOutput() PoolerSpecTemplateSpecVolumesAzureFilePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesAzureFilePtrOutput) ToPoolerSpecTemplateSpecVolumesAzureFilePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesAzureFilePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesAzureFilePtrOutput) Elem() PoolerSpecTemplateSpecVolumesAzureFileOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesAzureFile) PoolerSpecTemplateSpecVolumesAzureFile {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesAzureFile
		return ret
	}).(PoolerSpecTemplateSpecVolumesAzureFileOutput)
}

// readOnly defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesAzureFilePtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesAzureFile) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// secretName is the  name of secret that contains Azure Storage Account Name and Key
func (o PoolerSpecTemplateSpecVolumesAzureFilePtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesAzureFile) *string {
		if v == nil {
			return nil
		}
		return &v.SecretName
	}).(pulumi.StringPtrOutput)
}

// shareName is the azure share Name
func (o PoolerSpecTemplateSpecVolumesAzureFilePtrOutput) ShareName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesAzureFile) *string {
		if v == nil {
			return nil
		}
		return &v.ShareName
	}).(pulumi.StringPtrOutput)
}

// cephFS represents a Ceph FS mount on the host that shares a pod's lifetime
type PoolerSpecTemplateSpecVolumesCephfs struct {
	// monitors is Required: Monitors is a collection of Ceph monitors
	// More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	Monitors []string `pulumi:"monitors"`
	// path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /
	Path *string `pulumi:"path"`
	// readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	// More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	ReadOnly *bool `pulumi:"readOnly"`
	// secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
	// More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	SecretFile *string `pulumi:"secretFile"`
	// secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
	// More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	SecretRef *PoolerSpecTemplateSpecVolumesCephfsSecretRef `pulumi:"secretRef"`
	// user is optional: User is the rados user name, default is admin
	// More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	User *string `pulumi:"user"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesCephfs
func (val *PoolerSpecTemplateSpecVolumesCephfs) Defaults() *PoolerSpecTemplateSpecVolumesCephfs {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.SecretRef = tmp.SecretRef.Defaults()

	return &tmp
}

// PoolerSpecTemplateSpecVolumesCephfsInput is an input type that accepts PoolerSpecTemplateSpecVolumesCephfsArgs and PoolerSpecTemplateSpecVolumesCephfsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesCephfsInput` via:
//
//	PoolerSpecTemplateSpecVolumesCephfsArgs{...}
type PoolerSpecTemplateSpecVolumesCephfsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesCephfsOutput() PoolerSpecTemplateSpecVolumesCephfsOutput
	ToPoolerSpecTemplateSpecVolumesCephfsOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesCephfsOutput
}

// cephFS represents a Ceph FS mount on the host that shares a pod's lifetime
type PoolerSpecTemplateSpecVolumesCephfsArgs struct {
	// monitors is Required: Monitors is a collection of Ceph monitors
	// More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	Monitors pulumi.StringArrayInput `pulumi:"monitors"`
	// path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /
	Path pulumi.StringPtrInput `pulumi:"path"`
	// readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	// More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
	// More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	SecretFile pulumi.StringPtrInput `pulumi:"secretFile"`
	// secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
	// More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	SecretRef PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrInput `pulumi:"secretRef"`
	// user is optional: User is the rados user name, default is admin
	// More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
	User pulumi.StringPtrInput `pulumi:"user"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesCephfsArgs
func (val *PoolerSpecTemplateSpecVolumesCephfsArgs) Defaults() *PoolerSpecTemplateSpecVolumesCephfsArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (PoolerSpecTemplateSpecVolumesCephfsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCephfs)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesCephfsArgs) ToPoolerSpecTemplateSpecVolumesCephfsOutput() PoolerSpecTemplateSpecVolumesCephfsOutput {
	return i.ToPoolerSpecTemplateSpecVolumesCephfsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesCephfsArgs) ToPoolerSpecTemplateSpecVolumesCephfsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCephfsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesCephfsOutput)
}

func (i PoolerSpecTemplateSpecVolumesCephfsArgs) ToPoolerSpecTemplateSpecVolumesCephfsPtrOutput() PoolerSpecTemplateSpecVolumesCephfsPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesCephfsPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesCephfsArgs) ToPoolerSpecTemplateSpecVolumesCephfsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCephfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesCephfsOutput).ToPoolerSpecTemplateSpecVolumesCephfsPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesCephfsPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesCephfsArgs, PoolerSpecTemplateSpecVolumesCephfsPtr and PoolerSpecTemplateSpecVolumesCephfsPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesCephfsPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesCephfsArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesCephfsPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesCephfsPtrOutput() PoolerSpecTemplateSpecVolumesCephfsPtrOutput
	ToPoolerSpecTemplateSpecVolumesCephfsPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesCephfsPtrOutput
}

type poolerSpecTemplateSpecVolumesCephfsPtrType PoolerSpecTemplateSpecVolumesCephfsArgs

func PoolerSpecTemplateSpecVolumesCephfsPtr(v *PoolerSpecTemplateSpecVolumesCephfsArgs) PoolerSpecTemplateSpecVolumesCephfsPtrInput {
	return (*poolerSpecTemplateSpecVolumesCephfsPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesCephfsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesCephfs)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesCephfsPtrType) ToPoolerSpecTemplateSpecVolumesCephfsPtrOutput() PoolerSpecTemplateSpecVolumesCephfsPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesCephfsPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesCephfsPtrType) ToPoolerSpecTemplateSpecVolumesCephfsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCephfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesCephfsPtrOutput)
}

// cephFS represents a Ceph FS mount on the host that shares a pod's lifetime
type PoolerSpecTemplateSpecVolumesCephfsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesCephfsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCephfs)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesCephfsOutput) ToPoolerSpecTemplateSpecVolumesCephfsOutput() PoolerSpecTemplateSpecVolumesCephfsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCephfsOutput) ToPoolerSpecTemplateSpecVolumesCephfsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCephfsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCephfsOutput) ToPoolerSpecTemplateSpecVolumesCephfsPtrOutput() PoolerSpecTemplateSpecVolumesCephfsPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesCephfsPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesCephfsOutput) ToPoolerSpecTemplateSpecVolumesCephfsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCephfsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesCephfs) *PoolerSpecTemplateSpecVolumesCephfs {
		return &v
	}).(PoolerSpecTemplateSpecVolumesCephfsPtrOutput)
}

// monitors is Required: Monitors is a collection of Ceph monitors
// More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesCephfsOutput) Monitors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesCephfs) []string { return v.Monitors }).(pulumi.StringArrayOutput)
}

// path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /
func (o PoolerSpecTemplateSpecVolumesCephfsOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesCephfs) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
// More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesCephfsOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesCephfs) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
// More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesCephfsOutput) SecretFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesCephfs) *string { return v.SecretFile }).(pulumi.StringPtrOutput)
}

// secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
// More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesCephfsOutput) SecretRef() PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesCephfs) *PoolerSpecTemplateSpecVolumesCephfsSecretRef {
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput)
}

// user is optional: User is the rados user name, default is admin
// More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesCephfsOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesCephfs) *string { return v.User }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesCephfsPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesCephfsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesCephfs)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesCephfsPtrOutput) ToPoolerSpecTemplateSpecVolumesCephfsPtrOutput() PoolerSpecTemplateSpecVolumesCephfsPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCephfsPtrOutput) ToPoolerSpecTemplateSpecVolumesCephfsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCephfsPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCephfsPtrOutput) Elem() PoolerSpecTemplateSpecVolumesCephfsOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCephfs) PoolerSpecTemplateSpecVolumesCephfs {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesCephfs
		return ret
	}).(PoolerSpecTemplateSpecVolumesCephfsOutput)
}

// monitors is Required: Monitors is a collection of Ceph monitors
// More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesCephfsPtrOutput) Monitors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCephfs) []string {
		if v == nil {
			return nil
		}
		return v.Monitors
	}).(pulumi.StringArrayOutput)
}

// path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /
func (o PoolerSpecTemplateSpecVolumesCephfsPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCephfs) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
// More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesCephfsPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCephfs) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
// More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesCephfsPtrOutput) SecretFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCephfs) *string {
		if v == nil {
			return nil
		}
		return v.SecretFile
	}).(pulumi.StringPtrOutput)
}

// secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
// More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesCephfsPtrOutput) SecretRef() PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCephfs) *PoolerSpecTemplateSpecVolumesCephfsSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput)
}

// user is optional: User is the rados user name, default is admin
// More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesCephfsPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCephfs) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
// More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
type PoolerSpecTemplateSpecVolumesCephfsSecretRef struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name *string `pulumi:"name"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesCephfsSecretRef
func (val *PoolerSpecTemplateSpecVolumesCephfsSecretRef) Defaults() *PoolerSpecTemplateSpecVolumesCephfsSecretRef {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		name_ := ""
		tmp.Name = &name_
	}
	return &tmp
}

// PoolerSpecTemplateSpecVolumesCephfsSecretRefInput is an input type that accepts PoolerSpecTemplateSpecVolumesCephfsSecretRefArgs and PoolerSpecTemplateSpecVolumesCephfsSecretRefOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesCephfsSecretRefInput` via:
//
//	PoolerSpecTemplateSpecVolumesCephfsSecretRefArgs{...}
type PoolerSpecTemplateSpecVolumesCephfsSecretRefInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesCephfsSecretRefOutput() PoolerSpecTemplateSpecVolumesCephfsSecretRefOutput
	ToPoolerSpecTemplateSpecVolumesCephfsSecretRefOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesCephfsSecretRefOutput
}

// secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
// More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
type PoolerSpecTemplateSpecVolumesCephfsSecretRefArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesCephfsSecretRefArgs
func (val *PoolerSpecTemplateSpecVolumesCephfsSecretRefArgs) Defaults() *PoolerSpecTemplateSpecVolumesCephfsSecretRefArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		tmp.Name = pulumi.StringPtr("")
	}
	return &tmp
}
func (PoolerSpecTemplateSpecVolumesCephfsSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCephfsSecretRef)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesCephfsSecretRefArgs) ToPoolerSpecTemplateSpecVolumesCephfsSecretRefOutput() PoolerSpecTemplateSpecVolumesCephfsSecretRefOutput {
	return i.ToPoolerSpecTemplateSpecVolumesCephfsSecretRefOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesCephfsSecretRefArgs) ToPoolerSpecTemplateSpecVolumesCephfsSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCephfsSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesCephfsSecretRefOutput)
}

func (i PoolerSpecTemplateSpecVolumesCephfsSecretRefArgs) ToPoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesCephfsSecretRefArgs) ToPoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesCephfsSecretRefOutput).ToPoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesCephfsSecretRefArgs, PoolerSpecTemplateSpecVolumesCephfsSecretRefPtr and PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesCephfsSecretRefArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput
	ToPoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput
}

type poolerSpecTemplateSpecVolumesCephfsSecretRefPtrType PoolerSpecTemplateSpecVolumesCephfsSecretRefArgs

func PoolerSpecTemplateSpecVolumesCephfsSecretRefPtr(v *PoolerSpecTemplateSpecVolumesCephfsSecretRefArgs) PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrInput {
	return (*poolerSpecTemplateSpecVolumesCephfsSecretRefPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesCephfsSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesCephfsSecretRef)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesCephfsSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesCephfsSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput)
}

// secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.
// More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
type PoolerSpecTemplateSpecVolumesCephfsSecretRefOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesCephfsSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCephfsSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesCephfsSecretRefOutput) ToPoolerSpecTemplateSpecVolumesCephfsSecretRefOutput() PoolerSpecTemplateSpecVolumesCephfsSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCephfsSecretRefOutput) ToPoolerSpecTemplateSpecVolumesCephfsSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCephfsSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCephfsSecretRefOutput) ToPoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesCephfsSecretRefOutput) ToPoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesCephfsSecretRef) *PoolerSpecTemplateSpecVolumesCephfsSecretRef {
		return &v
	}).(PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o PoolerSpecTemplateSpecVolumesCephfsSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesCephfsSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesCephfsSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput) Elem() PoolerSpecTemplateSpecVolumesCephfsSecretRefOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCephfsSecretRef) PoolerSpecTemplateSpecVolumesCephfsSecretRef {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesCephfsSecretRef
		return ret
	}).(PoolerSpecTemplateSpecVolumesCephfsSecretRefOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCephfsSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// cinder represents a cinder volume attached and mounted on kubelets host machine.
// More info: https://examples.k8s.io/mysql-cinder-pd/README.md
type PoolerSpecTemplateSpecVolumesCinder struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	// More info: https://examples.k8s.io/mysql-cinder-pd/README.md
	FsType *string `pulumi:"fsType"`
	// readOnly defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	// More info: https://examples.k8s.io/mysql-cinder-pd/README.md
	ReadOnly *bool `pulumi:"readOnly"`
	// secretRef is optional: points to a secret object containing parameters used to connect
	// to OpenStack.
	SecretRef *PoolerSpecTemplateSpecVolumesCinderSecretRef `pulumi:"secretRef"`
	// volumeID used to identify the volume in cinder.
	// More info: https://examples.k8s.io/mysql-cinder-pd/README.md
	VolumeID string `pulumi:"volumeID"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesCinder
func (val *PoolerSpecTemplateSpecVolumesCinder) Defaults() *PoolerSpecTemplateSpecVolumesCinder {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.SecretRef = tmp.SecretRef.Defaults()

	return &tmp
}

// PoolerSpecTemplateSpecVolumesCinderInput is an input type that accepts PoolerSpecTemplateSpecVolumesCinderArgs and PoolerSpecTemplateSpecVolumesCinderOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesCinderInput` via:
//
//	PoolerSpecTemplateSpecVolumesCinderArgs{...}
type PoolerSpecTemplateSpecVolumesCinderInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesCinderOutput() PoolerSpecTemplateSpecVolumesCinderOutput
	ToPoolerSpecTemplateSpecVolumesCinderOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesCinderOutput
}

// cinder represents a cinder volume attached and mounted on kubelets host machine.
// More info: https://examples.k8s.io/mysql-cinder-pd/README.md
type PoolerSpecTemplateSpecVolumesCinderArgs struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	// More info: https://examples.k8s.io/mysql-cinder-pd/README.md
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// readOnly defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	// More info: https://examples.k8s.io/mysql-cinder-pd/README.md
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// secretRef is optional: points to a secret object containing parameters used to connect
	// to OpenStack.
	SecretRef PoolerSpecTemplateSpecVolumesCinderSecretRefPtrInput `pulumi:"secretRef"`
	// volumeID used to identify the volume in cinder.
	// More info: https://examples.k8s.io/mysql-cinder-pd/README.md
	VolumeID pulumi.StringInput `pulumi:"volumeID"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesCinderArgs
func (val *PoolerSpecTemplateSpecVolumesCinderArgs) Defaults() *PoolerSpecTemplateSpecVolumesCinderArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (PoolerSpecTemplateSpecVolumesCinderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCinder)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesCinderArgs) ToPoolerSpecTemplateSpecVolumesCinderOutput() PoolerSpecTemplateSpecVolumesCinderOutput {
	return i.ToPoolerSpecTemplateSpecVolumesCinderOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesCinderArgs) ToPoolerSpecTemplateSpecVolumesCinderOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCinderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesCinderOutput)
}

func (i PoolerSpecTemplateSpecVolumesCinderArgs) ToPoolerSpecTemplateSpecVolumesCinderPtrOutput() PoolerSpecTemplateSpecVolumesCinderPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesCinderPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesCinderArgs) ToPoolerSpecTemplateSpecVolumesCinderPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCinderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesCinderOutput).ToPoolerSpecTemplateSpecVolumesCinderPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesCinderPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesCinderArgs, PoolerSpecTemplateSpecVolumesCinderPtr and PoolerSpecTemplateSpecVolumesCinderPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesCinderPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesCinderArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesCinderPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesCinderPtrOutput() PoolerSpecTemplateSpecVolumesCinderPtrOutput
	ToPoolerSpecTemplateSpecVolumesCinderPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesCinderPtrOutput
}

type poolerSpecTemplateSpecVolumesCinderPtrType PoolerSpecTemplateSpecVolumesCinderArgs

func PoolerSpecTemplateSpecVolumesCinderPtr(v *PoolerSpecTemplateSpecVolumesCinderArgs) PoolerSpecTemplateSpecVolumesCinderPtrInput {
	return (*poolerSpecTemplateSpecVolumesCinderPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesCinderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesCinder)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesCinderPtrType) ToPoolerSpecTemplateSpecVolumesCinderPtrOutput() PoolerSpecTemplateSpecVolumesCinderPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesCinderPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesCinderPtrType) ToPoolerSpecTemplateSpecVolumesCinderPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCinderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesCinderPtrOutput)
}

// cinder represents a cinder volume attached and mounted on kubelets host machine.
// More info: https://examples.k8s.io/mysql-cinder-pd/README.md
type PoolerSpecTemplateSpecVolumesCinderOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesCinderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCinder)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesCinderOutput) ToPoolerSpecTemplateSpecVolumesCinderOutput() PoolerSpecTemplateSpecVolumesCinderOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCinderOutput) ToPoolerSpecTemplateSpecVolumesCinderOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCinderOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCinderOutput) ToPoolerSpecTemplateSpecVolumesCinderPtrOutput() PoolerSpecTemplateSpecVolumesCinderPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesCinderPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesCinderOutput) ToPoolerSpecTemplateSpecVolumesCinderPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCinderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesCinder) *PoolerSpecTemplateSpecVolumesCinder {
		return &v
	}).(PoolerSpecTemplateSpecVolumesCinderPtrOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
// More info: https://examples.k8s.io/mysql-cinder-pd/README.md
func (o PoolerSpecTemplateSpecVolumesCinderOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesCinder) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// readOnly defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
// More info: https://examples.k8s.io/mysql-cinder-pd/README.md
func (o PoolerSpecTemplateSpecVolumesCinderOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesCinder) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// secretRef is optional: points to a secret object containing parameters used to connect
// to OpenStack.
func (o PoolerSpecTemplateSpecVolumesCinderOutput) SecretRef() PoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesCinder) *PoolerSpecTemplateSpecVolumesCinderSecretRef {
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput)
}

// volumeID used to identify the volume in cinder.
// More info: https://examples.k8s.io/mysql-cinder-pd/README.md
func (o PoolerSpecTemplateSpecVolumesCinderOutput) VolumeID() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesCinder) string { return v.VolumeID }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecVolumesCinderPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesCinderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesCinder)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesCinderPtrOutput) ToPoolerSpecTemplateSpecVolumesCinderPtrOutput() PoolerSpecTemplateSpecVolumesCinderPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCinderPtrOutput) ToPoolerSpecTemplateSpecVolumesCinderPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCinderPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCinderPtrOutput) Elem() PoolerSpecTemplateSpecVolumesCinderOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCinder) PoolerSpecTemplateSpecVolumesCinder {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesCinder
		return ret
	}).(PoolerSpecTemplateSpecVolumesCinderOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
// More info: https://examples.k8s.io/mysql-cinder-pd/README.md
func (o PoolerSpecTemplateSpecVolumesCinderPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCinder) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// readOnly defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
// More info: https://examples.k8s.io/mysql-cinder-pd/README.md
func (o PoolerSpecTemplateSpecVolumesCinderPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCinder) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// secretRef is optional: points to a secret object containing parameters used to connect
// to OpenStack.
func (o PoolerSpecTemplateSpecVolumesCinderPtrOutput) SecretRef() PoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCinder) *PoolerSpecTemplateSpecVolumesCinderSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput)
}

// volumeID used to identify the volume in cinder.
// More info: https://examples.k8s.io/mysql-cinder-pd/README.md
func (o PoolerSpecTemplateSpecVolumesCinderPtrOutput) VolumeID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCinder) *string {
		if v == nil {
			return nil
		}
		return &v.VolumeID
	}).(pulumi.StringPtrOutput)
}

// secretRef is optional: points to a secret object containing parameters used to connect
// to OpenStack.
type PoolerSpecTemplateSpecVolumesCinderSecretRef struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name *string `pulumi:"name"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesCinderSecretRef
func (val *PoolerSpecTemplateSpecVolumesCinderSecretRef) Defaults() *PoolerSpecTemplateSpecVolumesCinderSecretRef {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		name_ := ""
		tmp.Name = &name_
	}
	return &tmp
}

// PoolerSpecTemplateSpecVolumesCinderSecretRefInput is an input type that accepts PoolerSpecTemplateSpecVolumesCinderSecretRefArgs and PoolerSpecTemplateSpecVolumesCinderSecretRefOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesCinderSecretRefInput` via:
//
//	PoolerSpecTemplateSpecVolumesCinderSecretRefArgs{...}
type PoolerSpecTemplateSpecVolumesCinderSecretRefInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesCinderSecretRefOutput() PoolerSpecTemplateSpecVolumesCinderSecretRefOutput
	ToPoolerSpecTemplateSpecVolumesCinderSecretRefOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesCinderSecretRefOutput
}

// secretRef is optional: points to a secret object containing parameters used to connect
// to OpenStack.
type PoolerSpecTemplateSpecVolumesCinderSecretRefArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesCinderSecretRefArgs
func (val *PoolerSpecTemplateSpecVolumesCinderSecretRefArgs) Defaults() *PoolerSpecTemplateSpecVolumesCinderSecretRefArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		tmp.Name = pulumi.StringPtr("")
	}
	return &tmp
}
func (PoolerSpecTemplateSpecVolumesCinderSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCinderSecretRef)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesCinderSecretRefArgs) ToPoolerSpecTemplateSpecVolumesCinderSecretRefOutput() PoolerSpecTemplateSpecVolumesCinderSecretRefOutput {
	return i.ToPoolerSpecTemplateSpecVolumesCinderSecretRefOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesCinderSecretRefArgs) ToPoolerSpecTemplateSpecVolumesCinderSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCinderSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesCinderSecretRefOutput)
}

func (i PoolerSpecTemplateSpecVolumesCinderSecretRefArgs) ToPoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesCinderSecretRefArgs) ToPoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesCinderSecretRefOutput).ToPoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesCinderSecretRefPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesCinderSecretRefArgs, PoolerSpecTemplateSpecVolumesCinderSecretRefPtr and PoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesCinderSecretRefPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesCinderSecretRefArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesCinderSecretRefPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput
	ToPoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput
}

type poolerSpecTemplateSpecVolumesCinderSecretRefPtrType PoolerSpecTemplateSpecVolumesCinderSecretRefArgs

func PoolerSpecTemplateSpecVolumesCinderSecretRefPtr(v *PoolerSpecTemplateSpecVolumesCinderSecretRefArgs) PoolerSpecTemplateSpecVolumesCinderSecretRefPtrInput {
	return (*poolerSpecTemplateSpecVolumesCinderSecretRefPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesCinderSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesCinderSecretRef)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesCinderSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesCinderSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput)
}

// secretRef is optional: points to a secret object containing parameters used to connect
// to OpenStack.
type PoolerSpecTemplateSpecVolumesCinderSecretRefOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesCinderSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCinderSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesCinderSecretRefOutput) ToPoolerSpecTemplateSpecVolumesCinderSecretRefOutput() PoolerSpecTemplateSpecVolumesCinderSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCinderSecretRefOutput) ToPoolerSpecTemplateSpecVolumesCinderSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCinderSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCinderSecretRefOutput) ToPoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesCinderSecretRefOutput) ToPoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesCinderSecretRef) *PoolerSpecTemplateSpecVolumesCinderSecretRef {
		return &v
	}).(PoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o PoolerSpecTemplateSpecVolumesCinderSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesCinderSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesCinderSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput) Elem() PoolerSpecTemplateSpecVolumesCinderSecretRefOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCinderSecretRef) PoolerSpecTemplateSpecVolumesCinderSecretRef {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesCinderSecretRef
		return ret
	}).(PoolerSpecTemplateSpecVolumesCinderSecretRefOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o PoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCinderSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// configMap represents a configMap that should populate this volume
type PoolerSpecTemplateSpecVolumesConfigMap struct {
	// defaultMode is optional: mode bits used to set permissions on created files by default.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// Defaults to 0644.
	// Directories within the path are not affected by this setting.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode *int `pulumi:"defaultMode"`
	// items if unspecified, each key-value pair in the Data field of the referenced
	// ConfigMap will be projected into the volume as a file whose name is the
	// key and content is the value. If specified, the listed keys will be
	// projected into the specified paths, and unlisted keys will not be
	// present. If a key is specified which is not present in the ConfigMap,
	// the volume setup will error unless it is marked optional. Paths must be
	// relative and may not contain the '..' path or start with '..'.
	Items []PoolerSpecTemplateSpecVolumesConfigMapItems `pulumi:"items"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name *string `pulumi:"name"`
	// optional specify whether the ConfigMap or its keys must be defined
	Optional *bool `pulumi:"optional"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesConfigMap
func (val *PoolerSpecTemplateSpecVolumesConfigMap) Defaults() *PoolerSpecTemplateSpecVolumesConfigMap {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		name_ := ""
		tmp.Name = &name_
	}
	return &tmp
}

// PoolerSpecTemplateSpecVolumesConfigMapInput is an input type that accepts PoolerSpecTemplateSpecVolumesConfigMap and PoolerSpecTemplateSpecVolumesConfigMapOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesConfigMapInput` via:
//
//	PoolerSpecTemplateSpecVolumesConfigMap{ "key": PoolerSpecTemplateSpecVolumesConfigArgs{...} }
type PoolerSpecTemplateSpecVolumesConfigMapInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesConfigMapOutput() PoolerSpecTemplateSpecVolumesConfigMapOutput
	ToPoolerSpecTemplateSpecVolumesConfigMapOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesConfigMapOutput
}

// configMap represents a configMap that should populate this volume
type PoolerSpecTemplateSpecVolumesConfigMapArgs struct {
	// defaultMode is optional: mode bits used to set permissions on created files by default.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// Defaults to 0644.
	// Directories within the path are not affected by this setting.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode pulumi.IntPtrInput `pulumi:"defaultMode"`
	// items if unspecified, each key-value pair in the Data field of the referenced
	// ConfigMap will be projected into the volume as a file whose name is the
	// key and content is the value. If specified, the listed keys will be
	// projected into the specified paths, and unlisted keys will not be
	// present. If a key is specified which is not present in the ConfigMap,
	// the volume setup will error unless it is marked optional. Paths must be
	// relative and may not contain the '..' path or start with '..'.
	Items PoolerSpecTemplateSpecVolumesConfigMapItemsArrayInput `pulumi:"items"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// optional specify whether the ConfigMap or its keys must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesConfigMapArgs
func (val *PoolerSpecTemplateSpecVolumesConfigMapArgs) Defaults() *PoolerSpecTemplateSpecVolumesConfigMapArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		tmp.Name = pulumi.StringPtr("")
	}
	return &tmp
}
func (PoolerSpecTemplateSpecVolumesConfigMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesConfigMap)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesConfigMapArgs) ToPoolerSpecTemplateSpecVolumesConfigMapOutput() PoolerSpecTemplateSpecVolumesConfigMapOutput {
	return i.ToPoolerSpecTemplateSpecVolumesConfigMapOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesConfigMapArgs) ToPoolerSpecTemplateSpecVolumesConfigMapOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesConfigMapOutput)
}

func (i PoolerSpecTemplateSpecVolumesConfigMapArgs) ToPoolerSpecTemplateSpecVolumesConfigMapPtrOutput() PoolerSpecTemplateSpecVolumesConfigMapPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesConfigMapPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesConfigMapArgs) ToPoolerSpecTemplateSpecVolumesConfigMapPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesConfigMapOutput).ToPoolerSpecTemplateSpecVolumesConfigMapPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesConfigMapPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesConfigMapArgs, PoolerSpecTemplateSpecVolumesConfigMapPtr and PoolerSpecTemplateSpecVolumesConfigMapPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesConfigMapPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesConfigMapArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesConfigMapPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesConfigMapPtrOutput() PoolerSpecTemplateSpecVolumesConfigMapPtrOutput
	ToPoolerSpecTemplateSpecVolumesConfigMapPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesConfigMapPtrOutput
}

type poolerSpecTemplateSpecVolumesConfigMapPtrType PoolerSpecTemplateSpecVolumesConfigMapArgs

func PoolerSpecTemplateSpecVolumesConfigMapPtr(v *PoolerSpecTemplateSpecVolumesConfigMapArgs) PoolerSpecTemplateSpecVolumesConfigMapPtrInput {
	return (*poolerSpecTemplateSpecVolumesConfigMapPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesConfigMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesConfigMap)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesConfigMapPtrType) ToPoolerSpecTemplateSpecVolumesConfigMapPtrOutput() PoolerSpecTemplateSpecVolumesConfigMapPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesConfigMapPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesConfigMapPtrType) ToPoolerSpecTemplateSpecVolumesConfigMapPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesConfigMapPtrOutput)
}

// configMap represents a configMap that should populate this volume
type PoolerSpecTemplateSpecVolumesConfigMapOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesConfigMap)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesConfigMapOutput) ToPoolerSpecTemplateSpecVolumesConfigMapOutput() PoolerSpecTemplateSpecVolumesConfigMapOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesConfigMapOutput) ToPoolerSpecTemplateSpecVolumesConfigMapOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesConfigMapOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesConfigMapOutput) ToPoolerSpecTemplateSpecVolumesConfigMapPtrOutput() PoolerSpecTemplateSpecVolumesConfigMapPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesConfigMapPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesConfigMapOutput) ToPoolerSpecTemplateSpecVolumesConfigMapPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesConfigMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesConfigMap) *PoolerSpecTemplateSpecVolumesConfigMap {
		return &v
	}).(PoolerSpecTemplateSpecVolumesConfigMapPtrOutput)
}

// defaultMode is optional: mode bits used to set permissions on created files by default.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// Defaults to 0644.
// Directories within the path are not affected by this setting.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesConfigMapOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesConfigMap) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

// items if unspecified, each key-value pair in the Data field of the referenced
// ConfigMap will be projected into the volume as a file whose name is the
// key and content is the value. If specified, the listed keys will be
// projected into the specified paths, and unlisted keys will not be
// present. If a key is specified which is not present in the ConfigMap,
// the volume setup will error unless it is marked optional. Paths must be
// relative and may not contain the '..' path or start with '..'.
func (o PoolerSpecTemplateSpecVolumesConfigMapOutput) Items() PoolerSpecTemplateSpecVolumesConfigMapItemsArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesConfigMap) []PoolerSpecTemplateSpecVolumesConfigMapItems {
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesConfigMapItemsArrayOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o PoolerSpecTemplateSpecVolumesConfigMapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesConfigMap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// optional specify whether the ConfigMap or its keys must be defined
func (o PoolerSpecTemplateSpecVolumesConfigMapOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesConfigMap) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type PoolerSpecTemplateSpecVolumesConfigMapPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesConfigMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesConfigMap)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesConfigMapPtrOutput) ToPoolerSpecTemplateSpecVolumesConfigMapPtrOutput() PoolerSpecTemplateSpecVolumesConfigMapPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesConfigMapPtrOutput) ToPoolerSpecTemplateSpecVolumesConfigMapPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesConfigMapPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesConfigMapPtrOutput) Elem() PoolerSpecTemplateSpecVolumesConfigMapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesConfigMap) PoolerSpecTemplateSpecVolumesConfigMap {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesConfigMap
		return ret
	}).(PoolerSpecTemplateSpecVolumesConfigMapOutput)
}

// defaultMode is optional: mode bits used to set permissions on created files by default.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// Defaults to 0644.
// Directories within the path are not affected by this setting.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesConfigMapPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesConfigMap) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

// items if unspecified, each key-value pair in the Data field of the referenced
// ConfigMap will be projected into the volume as a file whose name is the
// key and content is the value. If specified, the listed keys will be
// projected into the specified paths, and unlisted keys will not be
// present. If a key is specified which is not present in the ConfigMap,
// the volume setup will error unless it is marked optional. Paths must be
// relative and may not contain the '..' path or start with '..'.
func (o PoolerSpecTemplateSpecVolumesConfigMapPtrOutput) Items() PoolerSpecTemplateSpecVolumesConfigMapItemsArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesConfigMap) []PoolerSpecTemplateSpecVolumesConfigMapItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesConfigMapItemsArrayOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o PoolerSpecTemplateSpecVolumesConfigMapPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesConfigMap) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// optional specify whether the ConfigMap or its keys must be defined
func (o PoolerSpecTemplateSpecVolumesConfigMapPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesConfigMap) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesConfigMapItems struct {
	// key is the key to project.
	Key string `pulumi:"key"`
	// mode is Optional: mode bits used to set permissions on this file.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// path is the relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path string `pulumi:"path"`
}

// PoolerSpecTemplateSpecVolumesConfigMapItemsInput is an input type that accepts PoolerSpecTemplateSpecVolumesConfigMapItemsArgs and PoolerSpecTemplateSpecVolumesConfigMapItemsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesConfigMapItemsInput` via:
//
//	PoolerSpecTemplateSpecVolumesConfigMapItemsArgs{...}
type PoolerSpecTemplateSpecVolumesConfigMapItemsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesConfigMapItemsOutput() PoolerSpecTemplateSpecVolumesConfigMapItemsOutput
	ToPoolerSpecTemplateSpecVolumesConfigMapItemsOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesConfigMapItemsOutput
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesConfigMapItemsArgs struct {
	// key is the key to project.
	Key pulumi.StringInput `pulumi:"key"`
	// mode is Optional: mode bits used to set permissions on this file.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// path is the relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path pulumi.StringInput `pulumi:"path"`
}

func (PoolerSpecTemplateSpecVolumesConfigMapItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesConfigMapItems)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesConfigMapItemsArgs) ToPoolerSpecTemplateSpecVolumesConfigMapItemsOutput() PoolerSpecTemplateSpecVolumesConfigMapItemsOutput {
	return i.ToPoolerSpecTemplateSpecVolumesConfigMapItemsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesConfigMapItemsArgs) ToPoolerSpecTemplateSpecVolumesConfigMapItemsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesConfigMapItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesConfigMapItemsOutput)
}

// PoolerSpecTemplateSpecVolumesConfigMapItemsArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesConfigMapItemsArray and PoolerSpecTemplateSpecVolumesConfigMapItemsArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesConfigMapItemsArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesConfigMapItemsArray{ PoolerSpecTemplateSpecVolumesConfigMapItemsArgs{...} }
type PoolerSpecTemplateSpecVolumesConfigMapItemsArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesConfigMapItemsArrayOutput() PoolerSpecTemplateSpecVolumesConfigMapItemsArrayOutput
	ToPoolerSpecTemplateSpecVolumesConfigMapItemsArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesConfigMapItemsArrayOutput
}

type PoolerSpecTemplateSpecVolumesConfigMapItemsArray []PoolerSpecTemplateSpecVolumesConfigMapItemsInput

func (PoolerSpecTemplateSpecVolumesConfigMapItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesConfigMapItems)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesConfigMapItemsArray) ToPoolerSpecTemplateSpecVolumesConfigMapItemsArrayOutput() PoolerSpecTemplateSpecVolumesConfigMapItemsArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesConfigMapItemsArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesConfigMapItemsArray) ToPoolerSpecTemplateSpecVolumesConfigMapItemsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesConfigMapItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesConfigMapItemsArrayOutput)
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesConfigMapItemsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesConfigMapItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesConfigMapItems)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesConfigMapItemsOutput) ToPoolerSpecTemplateSpecVolumesConfigMapItemsOutput() PoolerSpecTemplateSpecVolumesConfigMapItemsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesConfigMapItemsOutput) ToPoolerSpecTemplateSpecVolumesConfigMapItemsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesConfigMapItemsOutput {
	return o
}

// key is the key to project.
func (o PoolerSpecTemplateSpecVolumesConfigMapItemsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesConfigMapItems) string { return v.Key }).(pulumi.StringOutput)
}

// mode is Optional: mode bits used to set permissions on this file.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// If not specified, the volume defaultMode will be used.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesConfigMapItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesConfigMapItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// path is the relative path of the file to map the key to.
// May not be an absolute path.
// May not contain the path element '..'.
// May not start with the string '..'.
func (o PoolerSpecTemplateSpecVolumesConfigMapItemsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesConfigMapItems) string { return v.Path }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecVolumesConfigMapItemsArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesConfigMapItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesConfigMapItems)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesConfigMapItemsArrayOutput) ToPoolerSpecTemplateSpecVolumesConfigMapItemsArrayOutput() PoolerSpecTemplateSpecVolumesConfigMapItemsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesConfigMapItemsArrayOutput) ToPoolerSpecTemplateSpecVolumesConfigMapItemsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesConfigMapItemsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesConfigMapItemsArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesConfigMapItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesConfigMapItems {
		return vs[0].([]PoolerSpecTemplateSpecVolumesConfigMapItems)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesConfigMapItemsOutput)
}

// csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).
type PoolerSpecTemplateSpecVolumesCsi struct {
	// driver is the name of the CSI driver that handles this volume.
	// Consult with your admin for the correct name as registered in the cluster.
	Driver string `pulumi:"driver"`
	// fsType to mount. Ex. "ext4", "xfs", "ntfs".
	// If not provided, the empty value is passed to the associated CSI driver
	// which will determine the default filesystem to apply.
	FsType *string `pulumi:"fsType"`
	// nodePublishSecretRef is a reference to the secret object containing
	// sensitive information to pass to the CSI driver to complete the CSI
	// NodePublishVolume and NodeUnpublishVolume calls.
	// This field is optional, and  may be empty if no secret is required. If the
	// secret object contains more than one secret, all secret references are passed.
	NodePublishSecretRef *PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRef `pulumi:"nodePublishSecretRef"`
	// readOnly specifies a read-only configuration for the volume.
	// Defaults to false (read/write).
	ReadOnly *bool `pulumi:"readOnly"`
	// volumeAttributes stores driver-specific properties that are passed to the CSI
	// driver. Consult your driver's documentation for supported values.
	VolumeAttributes map[string]string `pulumi:"volumeAttributes"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesCsi
func (val *PoolerSpecTemplateSpecVolumesCsi) Defaults() *PoolerSpecTemplateSpecVolumesCsi {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.NodePublishSecretRef = tmp.NodePublishSecretRef.Defaults()

	return &tmp
}

// PoolerSpecTemplateSpecVolumesCsiInput is an input type that accepts PoolerSpecTemplateSpecVolumesCsiArgs and PoolerSpecTemplateSpecVolumesCsiOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesCsiInput` via:
//
//	PoolerSpecTemplateSpecVolumesCsiArgs{...}
type PoolerSpecTemplateSpecVolumesCsiInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesCsiOutput() PoolerSpecTemplateSpecVolumesCsiOutput
	ToPoolerSpecTemplateSpecVolumesCsiOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesCsiOutput
}

// csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).
type PoolerSpecTemplateSpecVolumesCsiArgs struct {
	// driver is the name of the CSI driver that handles this volume.
	// Consult with your admin for the correct name as registered in the cluster.
	Driver pulumi.StringInput `pulumi:"driver"`
	// fsType to mount. Ex. "ext4", "xfs", "ntfs".
	// If not provided, the empty value is passed to the associated CSI driver
	// which will determine the default filesystem to apply.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// nodePublishSecretRef is a reference to the secret object containing
	// sensitive information to pass to the CSI driver to complete the CSI
	// NodePublishVolume and NodeUnpublishVolume calls.
	// This field is optional, and  may be empty if no secret is required. If the
	// secret object contains more than one secret, all secret references are passed.
	NodePublishSecretRef PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrInput `pulumi:"nodePublishSecretRef"`
	// readOnly specifies a read-only configuration for the volume.
	// Defaults to false (read/write).
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// volumeAttributes stores driver-specific properties that are passed to the CSI
	// driver. Consult your driver's documentation for supported values.
	VolumeAttributes pulumi.StringMapInput `pulumi:"volumeAttributes"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesCsiArgs
func (val *PoolerSpecTemplateSpecVolumesCsiArgs) Defaults() *PoolerSpecTemplateSpecVolumesCsiArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (PoolerSpecTemplateSpecVolumesCsiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCsi)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesCsiArgs) ToPoolerSpecTemplateSpecVolumesCsiOutput() PoolerSpecTemplateSpecVolumesCsiOutput {
	return i.ToPoolerSpecTemplateSpecVolumesCsiOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesCsiArgs) ToPoolerSpecTemplateSpecVolumesCsiOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCsiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesCsiOutput)
}

func (i PoolerSpecTemplateSpecVolumesCsiArgs) ToPoolerSpecTemplateSpecVolumesCsiPtrOutput() PoolerSpecTemplateSpecVolumesCsiPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesCsiPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesCsiArgs) ToPoolerSpecTemplateSpecVolumesCsiPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCsiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesCsiOutput).ToPoolerSpecTemplateSpecVolumesCsiPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesCsiPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesCsiArgs, PoolerSpecTemplateSpecVolumesCsiPtr and PoolerSpecTemplateSpecVolumesCsiPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesCsiPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesCsiArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesCsiPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesCsiPtrOutput() PoolerSpecTemplateSpecVolumesCsiPtrOutput
	ToPoolerSpecTemplateSpecVolumesCsiPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesCsiPtrOutput
}

type poolerSpecTemplateSpecVolumesCsiPtrType PoolerSpecTemplateSpecVolumesCsiArgs

func PoolerSpecTemplateSpecVolumesCsiPtr(v *PoolerSpecTemplateSpecVolumesCsiArgs) PoolerSpecTemplateSpecVolumesCsiPtrInput {
	return (*poolerSpecTemplateSpecVolumesCsiPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesCsiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesCsi)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesCsiPtrType) ToPoolerSpecTemplateSpecVolumesCsiPtrOutput() PoolerSpecTemplateSpecVolumesCsiPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesCsiPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesCsiPtrType) ToPoolerSpecTemplateSpecVolumesCsiPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCsiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesCsiPtrOutput)
}

// csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).
type PoolerSpecTemplateSpecVolumesCsiOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesCsiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCsi)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesCsiOutput) ToPoolerSpecTemplateSpecVolumesCsiOutput() PoolerSpecTemplateSpecVolumesCsiOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCsiOutput) ToPoolerSpecTemplateSpecVolumesCsiOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCsiOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCsiOutput) ToPoolerSpecTemplateSpecVolumesCsiPtrOutput() PoolerSpecTemplateSpecVolumesCsiPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesCsiPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesCsiOutput) ToPoolerSpecTemplateSpecVolumesCsiPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCsiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesCsi) *PoolerSpecTemplateSpecVolumesCsi {
		return &v
	}).(PoolerSpecTemplateSpecVolumesCsiPtrOutput)
}

// driver is the name of the CSI driver that handles this volume.
// Consult with your admin for the correct name as registered in the cluster.
func (o PoolerSpecTemplateSpecVolumesCsiOutput) Driver() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesCsi) string { return v.Driver }).(pulumi.StringOutput)
}

// fsType to mount. Ex. "ext4", "xfs", "ntfs".
// If not provided, the empty value is passed to the associated CSI driver
// which will determine the default filesystem to apply.
func (o PoolerSpecTemplateSpecVolumesCsiOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesCsi) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// nodePublishSecretRef is a reference to the secret object containing
// sensitive information to pass to the CSI driver to complete the CSI
// NodePublishVolume and NodeUnpublishVolume calls.
// This field is optional, and  may be empty if no secret is required. If the
// secret object contains more than one secret, all secret references are passed.
func (o PoolerSpecTemplateSpecVolumesCsiOutput) NodePublishSecretRef() PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesCsi) *PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRef {
		return v.NodePublishSecretRef
	}).(PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput)
}

// readOnly specifies a read-only configuration for the volume.
// Defaults to false (read/write).
func (o PoolerSpecTemplateSpecVolumesCsiOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesCsi) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// volumeAttributes stores driver-specific properties that are passed to the CSI
// driver. Consult your driver's documentation for supported values.
func (o PoolerSpecTemplateSpecVolumesCsiOutput) VolumeAttributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesCsi) map[string]string { return v.VolumeAttributes }).(pulumi.StringMapOutput)
}

type PoolerSpecTemplateSpecVolumesCsiPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesCsiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesCsi)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesCsiPtrOutput) ToPoolerSpecTemplateSpecVolumesCsiPtrOutput() PoolerSpecTemplateSpecVolumesCsiPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCsiPtrOutput) ToPoolerSpecTemplateSpecVolumesCsiPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCsiPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCsiPtrOutput) Elem() PoolerSpecTemplateSpecVolumesCsiOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCsi) PoolerSpecTemplateSpecVolumesCsi {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesCsi
		return ret
	}).(PoolerSpecTemplateSpecVolumesCsiOutput)
}

// driver is the name of the CSI driver that handles this volume.
// Consult with your admin for the correct name as registered in the cluster.
func (o PoolerSpecTemplateSpecVolumesCsiPtrOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCsi) *string {
		if v == nil {
			return nil
		}
		return &v.Driver
	}).(pulumi.StringPtrOutput)
}

// fsType to mount. Ex. "ext4", "xfs", "ntfs".
// If not provided, the empty value is passed to the associated CSI driver
// which will determine the default filesystem to apply.
func (o PoolerSpecTemplateSpecVolumesCsiPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCsi) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// nodePublishSecretRef is a reference to the secret object containing
// sensitive information to pass to the CSI driver to complete the CSI
// NodePublishVolume and NodeUnpublishVolume calls.
// This field is optional, and  may be empty if no secret is required. If the
// secret object contains more than one secret, all secret references are passed.
func (o PoolerSpecTemplateSpecVolumesCsiPtrOutput) NodePublishSecretRef() PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCsi) *PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRef {
		if v == nil {
			return nil
		}
		return v.NodePublishSecretRef
	}).(PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput)
}

// readOnly specifies a read-only configuration for the volume.
// Defaults to false (read/write).
func (o PoolerSpecTemplateSpecVolumesCsiPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCsi) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// volumeAttributes stores driver-specific properties that are passed to the CSI
// driver. Consult your driver's documentation for supported values.
func (o PoolerSpecTemplateSpecVolumesCsiPtrOutput) VolumeAttributes() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCsi) map[string]string {
		if v == nil {
			return nil
		}
		return v.VolumeAttributes
	}).(pulumi.StringMapOutput)
}

// nodePublishSecretRef is a reference to the secret object containing
// sensitive information to pass to the CSI driver to complete the CSI
// NodePublishVolume and NodeUnpublishVolume calls.
// This field is optional, and  may be empty if no secret is required. If the
// secret object contains more than one secret, all secret references are passed.
type PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRef struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name *string `pulumi:"name"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRef
func (val *PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRef) Defaults() *PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRef {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		name_ := ""
		tmp.Name = &name_
	}
	return &tmp
}

// PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefInput is an input type that accepts PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefArgs and PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefInput` via:
//
//	PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefArgs{...}
type PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutput() PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutput
	ToPoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutput
}

// nodePublishSecretRef is a reference to the secret object containing
// sensitive information to pass to the CSI driver to complete the CSI
// NodePublishVolume and NodeUnpublishVolume calls.
// This field is optional, and  may be empty if no secret is required. If the
// secret object contains more than one secret, all secret references are passed.
type PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefArgs
func (val *PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefArgs) Defaults() *PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		tmp.Name = pulumi.StringPtr("")
	}
	return &tmp
}
func (PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRef)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefArgs) ToPoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutput() PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutput {
	return i.ToPoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefArgs) ToPoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutput)
}

func (i PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefArgs) ToPoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefArgs) ToPoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutput).ToPoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefArgs, PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtr and PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput
	ToPoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput
}

type poolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrType PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefArgs

func PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtr(v *PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefArgs) PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrInput {
	return (*poolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRef)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput)
}

// nodePublishSecretRef is a reference to the secret object containing
// sensitive information to pass to the CSI driver to complete the CSI
// NodePublishVolume and NodeUnpublishVolume calls.
// This field is optional, and  may be empty if no secret is required. If the
// secret object contains more than one secret, all secret references are passed.
type PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutput) ToPoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutput() PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutput) ToPoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutput) ToPoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutput) ToPoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRef) *PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRef {
		return &v
	}).(PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput) Elem() PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRef) PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRef {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRef
		return ret
	}).(PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// volumeAttributes stores driver-specific properties that are passed to the CSI
// driver. Consult your driver's documentation for supported values.
type PoolerSpecTemplateSpecVolumesCsiVolumeAttributes struct {
}

// downwardAPI represents downward API about the pod that should populate this volume
type PoolerSpecTemplateSpecVolumesDownwardApi struct {
	// Optional: mode bits to use on created files by default. Must be a
	// Optional: mode bits used to set permissions on created files by default.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// Defaults to 0644.
	// Directories within the path are not affected by this setting.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode *int `pulumi:"defaultMode"`
	// Items is a list of downward API volume file
	Items []PoolerSpecTemplateSpecVolumesDownwardApiItems `pulumi:"items"`
}

// PoolerSpecTemplateSpecVolumesDownwardApiInput is an input type that accepts PoolerSpecTemplateSpecVolumesDownwardApiArgs and PoolerSpecTemplateSpecVolumesDownwardApiOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesDownwardApiInput` via:
//
//	PoolerSpecTemplateSpecVolumesDownwardApiArgs{...}
type PoolerSpecTemplateSpecVolumesDownwardApiInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesDownwardApiOutput() PoolerSpecTemplateSpecVolumesDownwardApiOutput
	ToPoolerSpecTemplateSpecVolumesDownwardApiOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesDownwardApiOutput
}

// downwardAPI represents downward API about the pod that should populate this volume
type PoolerSpecTemplateSpecVolumesDownwardApiArgs struct {
	// Optional: mode bits to use on created files by default. Must be a
	// Optional: mode bits used to set permissions on created files by default.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// Defaults to 0644.
	// Directories within the path are not affected by this setting.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode pulumi.IntPtrInput `pulumi:"defaultMode"`
	// Items is a list of downward API volume file
	Items PoolerSpecTemplateSpecVolumesDownwardApiItemsArrayInput `pulumi:"items"`
}

func (PoolerSpecTemplateSpecVolumesDownwardApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardApi)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesDownwardApiArgs) ToPoolerSpecTemplateSpecVolumesDownwardApiOutput() PoolerSpecTemplateSpecVolumesDownwardApiOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardApiOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesDownwardApiArgs) ToPoolerSpecTemplateSpecVolumesDownwardApiOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardApiOutput)
}

func (i PoolerSpecTemplateSpecVolumesDownwardApiArgs) ToPoolerSpecTemplateSpecVolumesDownwardApiPtrOutput() PoolerSpecTemplateSpecVolumesDownwardApiPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardApiPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesDownwardApiArgs) ToPoolerSpecTemplateSpecVolumesDownwardApiPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardApiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardApiOutput).ToPoolerSpecTemplateSpecVolumesDownwardApiPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesDownwardApiPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesDownwardApiArgs, PoolerSpecTemplateSpecVolumesDownwardApiPtr and PoolerSpecTemplateSpecVolumesDownwardApiPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesDownwardApiPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesDownwardApiArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesDownwardApiPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesDownwardApiPtrOutput() PoolerSpecTemplateSpecVolumesDownwardApiPtrOutput
	ToPoolerSpecTemplateSpecVolumesDownwardApiPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesDownwardApiPtrOutput
}

type poolerSpecTemplateSpecVolumesDownwardApiPtrType PoolerSpecTemplateSpecVolumesDownwardApiArgs

func PoolerSpecTemplateSpecVolumesDownwardApiPtr(v *PoolerSpecTemplateSpecVolumesDownwardApiArgs) PoolerSpecTemplateSpecVolumesDownwardApiPtrInput {
	return (*poolerSpecTemplateSpecVolumesDownwardApiPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesDownwardApiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesDownwardApi)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesDownwardApiPtrType) ToPoolerSpecTemplateSpecVolumesDownwardApiPtrOutput() PoolerSpecTemplateSpecVolumesDownwardApiPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardApiPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesDownwardApiPtrType) ToPoolerSpecTemplateSpecVolumesDownwardApiPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardApiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardApiPtrOutput)
}

// downwardAPI represents downward API about the pod that should populate this volume
type PoolerSpecTemplateSpecVolumesDownwardApiOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesDownwardApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardApi)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiOutput) ToPoolerSpecTemplateSpecVolumesDownwardApiOutput() PoolerSpecTemplateSpecVolumesDownwardApiOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiOutput) ToPoolerSpecTemplateSpecVolumesDownwardApiOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardApiOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiOutput) ToPoolerSpecTemplateSpecVolumesDownwardApiPtrOutput() PoolerSpecTemplateSpecVolumesDownwardApiPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesDownwardApiPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiOutput) ToPoolerSpecTemplateSpecVolumesDownwardApiPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardApiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesDownwardApi) *PoolerSpecTemplateSpecVolumesDownwardApi {
		return &v
	}).(PoolerSpecTemplateSpecVolumesDownwardApiPtrOutput)
}

// Optional: mode bits to use on created files by default. Must be a
// Optional: mode bits used to set permissions on created files by default.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// Defaults to 0644.
// Directories within the path are not affected by this setting.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesDownwardApiOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardApi) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

// Items is a list of downward API volume file
func (o PoolerSpecTemplateSpecVolumesDownwardApiOutput) Items() PoolerSpecTemplateSpecVolumesDownwardApiItemsArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardApi) []PoolerSpecTemplateSpecVolumesDownwardApiItems {
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesDownwardApiItemsArrayOutput)
}

type PoolerSpecTemplateSpecVolumesDownwardApiPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesDownwardApiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesDownwardApi)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiPtrOutput) ToPoolerSpecTemplateSpecVolumesDownwardApiPtrOutput() PoolerSpecTemplateSpecVolumesDownwardApiPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiPtrOutput) ToPoolerSpecTemplateSpecVolumesDownwardApiPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardApiPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiPtrOutput) Elem() PoolerSpecTemplateSpecVolumesDownwardApiOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardApi) PoolerSpecTemplateSpecVolumesDownwardApi {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesDownwardApi
		return ret
	}).(PoolerSpecTemplateSpecVolumesDownwardApiOutput)
}

// Optional: mode bits to use on created files by default. Must be a
// Optional: mode bits used to set permissions on created files by default.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// Defaults to 0644.
// Directories within the path are not affected by this setting.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesDownwardApiPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardApi) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

// Items is a list of downward API volume file
func (o PoolerSpecTemplateSpecVolumesDownwardApiPtrOutput) Items() PoolerSpecTemplateSpecVolumesDownwardApiItemsArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardApi) []PoolerSpecTemplateSpecVolumesDownwardApiItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesDownwardApiItemsArrayOutput)
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type PoolerSpecTemplateSpecVolumesDownwardApiItems struct {
	// Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.
	FieldRef *PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRef `pulumi:"fieldRef"`
	// Optional: mode bits used to set permissions on this file, must be an octal value
	// between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
	Path string `pulumi:"path"`
	// Selects a resource of the container: only resources limits and requests
	// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
	ResourceFieldRef *PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRef `pulumi:"resourceFieldRef"`
}

// PoolerSpecTemplateSpecVolumesDownwardApiItemsInput is an input type that accepts PoolerSpecTemplateSpecVolumesDownwardApiItemsArgs and PoolerSpecTemplateSpecVolumesDownwardApiItemsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesDownwardApiItemsInput` via:
//
//	PoolerSpecTemplateSpecVolumesDownwardApiItemsArgs{...}
type PoolerSpecTemplateSpecVolumesDownwardApiItemsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesDownwardApiItemsOutput() PoolerSpecTemplateSpecVolumesDownwardApiItemsOutput
	ToPoolerSpecTemplateSpecVolumesDownwardApiItemsOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesDownwardApiItemsOutput
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type PoolerSpecTemplateSpecVolumesDownwardApiItemsArgs struct {
	// Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.
	FieldRef PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrInput `pulumi:"fieldRef"`
	// Optional: mode bits used to set permissions on this file, must be an octal value
	// between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
	Path pulumi.StringInput `pulumi:"path"`
	// Selects a resource of the container: only resources limits and requests
	// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
	ResourceFieldRef PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrInput `pulumi:"resourceFieldRef"`
}

func (PoolerSpecTemplateSpecVolumesDownwardApiItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardApiItems)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesDownwardApiItemsArgs) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsOutput() PoolerSpecTemplateSpecVolumesDownwardApiItemsOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardApiItemsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesDownwardApiItemsArgs) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardApiItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardApiItemsOutput)
}

// PoolerSpecTemplateSpecVolumesDownwardApiItemsArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesDownwardApiItemsArray and PoolerSpecTemplateSpecVolumesDownwardApiItemsArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesDownwardApiItemsArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesDownwardApiItemsArray{ PoolerSpecTemplateSpecVolumesDownwardApiItemsArgs{...} }
type PoolerSpecTemplateSpecVolumesDownwardApiItemsArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesDownwardApiItemsArrayOutput() PoolerSpecTemplateSpecVolumesDownwardApiItemsArrayOutput
	ToPoolerSpecTemplateSpecVolumesDownwardApiItemsArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesDownwardApiItemsArrayOutput
}

type PoolerSpecTemplateSpecVolumesDownwardApiItemsArray []PoolerSpecTemplateSpecVolumesDownwardApiItemsInput

func (PoolerSpecTemplateSpecVolumesDownwardApiItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesDownwardApiItems)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesDownwardApiItemsArray) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsArrayOutput() PoolerSpecTemplateSpecVolumesDownwardApiItemsArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardApiItemsArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesDownwardApiItemsArray) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardApiItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardApiItemsArrayOutput)
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type PoolerSpecTemplateSpecVolumesDownwardApiItemsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesDownwardApiItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardApiItems)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsOutput) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsOutput() PoolerSpecTemplateSpecVolumesDownwardApiItemsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsOutput) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardApiItemsOutput {
	return o
}

// Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.
func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsOutput) FieldRef() PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardApiItems) *PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRef {
		return v.FieldRef
	}).(PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput)
}

// Optional: mode bits used to set permissions on this file, must be an octal value
// between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// If not specified, the volume defaultMode will be used.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardApiItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardApiItems) string { return v.Path }).(pulumi.StringOutput)
}

// Selects a resource of the container: only resources limits and requests
// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsOutput) ResourceFieldRef() PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardApiItems) *PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRef {
		return v.ResourceFieldRef
	}).(PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput)
}

type PoolerSpecTemplateSpecVolumesDownwardApiItemsArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesDownwardApiItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesDownwardApiItems)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsArrayOutput) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsArrayOutput() PoolerSpecTemplateSpecVolumesDownwardApiItemsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsArrayOutput) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardApiItemsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesDownwardApiItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesDownwardApiItems {
		return vs[0].([]PoolerSpecTemplateSpecVolumesDownwardApiItems)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesDownwardApiItemsOutput)
}

// Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.
type PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRef struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion *string `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath string `pulumi:"fieldPath"`
}

// PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefInput is an input type that accepts PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefArgs and PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefInput` via:
//
//	PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefArgs{...}
type PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutput() PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutput
	ToPoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutput
}

// Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.
type PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefArgs struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath pulumi.StringInput `pulumi:"fieldPath"`
}

func (PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRef)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefArgs) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutput() PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefArgs) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutput)
}

func (i PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefArgs) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefArgs) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutput).ToPoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefArgs, PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtr and PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput
	ToPoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput
}

type poolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrType PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefArgs

func PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtr(v *PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefArgs) PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrInput {
	return (*poolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRef)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrType) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrType) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput)
}

// Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.
type PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutput) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutput() PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutput) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutput) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutput) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRef) *PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRef {
		return &v
	}).(PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRef) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutput) FieldPath() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRef) string { return v.FieldPath }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput) Elem() PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRef) PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRef {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRef
		return ret
	}).(PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRef) *string {
		if v == nil {
			return nil
		}
		return &v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Selects a resource of the container: only resources limits and requests
// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRef struct {
	// Container name: required for volumes, optional for env vars
	ContainerName *string `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor interface{} `pulumi:"divisor"`
	// Required: resource to select
	Resource string `pulumi:"resource"`
}

// PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefInput is an input type that accepts PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefArgs and PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefInput` via:
//
//	PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefArgs{...}
type PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutput() PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutput
	ToPoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutput
}

// Selects a resource of the container: only resources limits and requests
// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefArgs struct {
	// Container name: required for volumes, optional for env vars
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor pulumi.Input `pulumi:"divisor"`
	// Required: resource to select
	Resource pulumi.StringInput `pulumi:"resource"`
}

func (PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRef)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefArgs) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutput() PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefArgs) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutput)
}

func (i PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefArgs) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefArgs) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutput).ToPoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefArgs, PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtr and PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput
	ToPoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput
}

type poolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrType PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefArgs

func PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtr(v *PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefArgs) PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrInput {
	return (*poolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRef)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrType) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrType) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput)
}

// Selects a resource of the container: only resources limits and requests
// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutput) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutput() PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutput) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutput) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutput) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRef) *PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRef {
		return &v
	}).(PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput)
}

// Container name: required for volumes, optional for env vars
func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRef) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutput) Divisor() pulumi.AnyOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRef) interface{} { return v.Divisor }).(pulumi.AnyOutput)
}

// Required: resource to select
func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRef) string { return v.Resource }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput) ToPoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput) Elem() PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRef) PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRef {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRef
		return ret
	}).(PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutput)
}

// Container name: required for volumes, optional for env vars
func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput) Divisor() pulumi.AnyOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRef) interface{} {
		if v == nil {
			return nil
		}
		return v.Divisor
	}).(pulumi.AnyOutput)
}

// Required: resource to select
func (o PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// emptyDir represents a temporary directory that shares a pod's lifetime.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
type PoolerSpecTemplateSpecVolumesEmptyDir struct {
	// medium represents what type of storage medium should back this directory.
	// The default is "" which means to use the node's default medium.
	// Must be an empty string (default) or Memory.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
	Medium *string `pulumi:"medium"`
	// sizeLimit is the total amount of local storage required for this EmptyDir volume.
	// The size limit is also applicable for memory medium.
	// The maximum usage on memory medium EmptyDir would be the minimum value between
	// the SizeLimit specified here and the sum of memory limits of all containers in a pod.
	// The default is nil which means that the limit is undefined.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
	SizeLimit interface{} `pulumi:"sizeLimit"`
}

// PoolerSpecTemplateSpecVolumesEmptyDirInput is an input type that accepts PoolerSpecTemplateSpecVolumesEmptyDirArgs and PoolerSpecTemplateSpecVolumesEmptyDirOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEmptyDirInput` via:
//
//	PoolerSpecTemplateSpecVolumesEmptyDirArgs{...}
type PoolerSpecTemplateSpecVolumesEmptyDirInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEmptyDirOutput() PoolerSpecTemplateSpecVolumesEmptyDirOutput
	ToPoolerSpecTemplateSpecVolumesEmptyDirOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEmptyDirOutput
}

// emptyDir represents a temporary directory that shares a pod's lifetime.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
type PoolerSpecTemplateSpecVolumesEmptyDirArgs struct {
	// medium represents what type of storage medium should back this directory.
	// The default is "" which means to use the node's default medium.
	// Must be an empty string (default) or Memory.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
	Medium pulumi.StringPtrInput `pulumi:"medium"`
	// sizeLimit is the total amount of local storage required for this EmptyDir volume.
	// The size limit is also applicable for memory medium.
	// The maximum usage on memory medium EmptyDir would be the minimum value between
	// the SizeLimit specified here and the sum of memory limits of all containers in a pod.
	// The default is nil which means that the limit is undefined.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
	SizeLimit pulumi.Input `pulumi:"sizeLimit"`
}

func (PoolerSpecTemplateSpecVolumesEmptyDirArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEmptyDir)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEmptyDirArgs) ToPoolerSpecTemplateSpecVolumesEmptyDirOutput() PoolerSpecTemplateSpecVolumesEmptyDirOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEmptyDirOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEmptyDirArgs) ToPoolerSpecTemplateSpecVolumesEmptyDirOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEmptyDirOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEmptyDirOutput)
}

func (i PoolerSpecTemplateSpecVolumesEmptyDirArgs) ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutput() PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEmptyDirArgs) ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEmptyDirOutput).ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesEmptyDirPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesEmptyDirArgs, PoolerSpecTemplateSpecVolumesEmptyDirPtr and PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEmptyDirPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesEmptyDirArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesEmptyDirPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutput() PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput
	ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput
}

type poolerSpecTemplateSpecVolumesEmptyDirPtrType PoolerSpecTemplateSpecVolumesEmptyDirArgs

func PoolerSpecTemplateSpecVolumesEmptyDirPtr(v *PoolerSpecTemplateSpecVolumesEmptyDirArgs) PoolerSpecTemplateSpecVolumesEmptyDirPtrInput {
	return (*poolerSpecTemplateSpecVolumesEmptyDirPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesEmptyDirPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEmptyDir)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesEmptyDirPtrType) ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutput() PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesEmptyDirPtrType) ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput)
}

// emptyDir represents a temporary directory that shares a pod's lifetime.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
type PoolerSpecTemplateSpecVolumesEmptyDirOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEmptyDirOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEmptyDir)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEmptyDirOutput) ToPoolerSpecTemplateSpecVolumesEmptyDirOutput() PoolerSpecTemplateSpecVolumesEmptyDirOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEmptyDirOutput) ToPoolerSpecTemplateSpecVolumesEmptyDirOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEmptyDirOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEmptyDirOutput) ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutput() PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesEmptyDirOutput) ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesEmptyDir) *PoolerSpecTemplateSpecVolumesEmptyDir {
		return &v
	}).(PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput)
}

// medium represents what type of storage medium should back this directory.
// The default is "" which means to use the node's default medium.
// Must be an empty string (default) or Memory.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
func (o PoolerSpecTemplateSpecVolumesEmptyDirOutput) Medium() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEmptyDir) *string { return v.Medium }).(pulumi.StringPtrOutput)
}

// sizeLimit is the total amount of local storage required for this EmptyDir volume.
// The size limit is also applicable for memory medium.
// The maximum usage on memory medium EmptyDir would be the minimum value between
// the SizeLimit specified here and the sum of memory limits of all containers in a pod.
// The default is nil which means that the limit is undefined.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
func (o PoolerSpecTemplateSpecVolumesEmptyDirOutput) SizeLimit() pulumi.AnyOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEmptyDir) interface{} { return v.SizeLimit }).(pulumi.AnyOutput)
}

type PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEmptyDir)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput) ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutput() PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput) ToPoolerSpecTemplateSpecVolumesEmptyDirPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput) Elem() PoolerSpecTemplateSpecVolumesEmptyDirOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEmptyDir) PoolerSpecTemplateSpecVolumesEmptyDir {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesEmptyDir
		return ret
	}).(PoolerSpecTemplateSpecVolumesEmptyDirOutput)
}

// medium represents what type of storage medium should back this directory.
// The default is "" which means to use the node's default medium.
// Must be an empty string (default) or Memory.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
func (o PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput) Medium() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEmptyDir) *string {
		if v == nil {
			return nil
		}
		return v.Medium
	}).(pulumi.StringPtrOutput)
}

// sizeLimit is the total amount of local storage required for this EmptyDir volume.
// The size limit is also applicable for memory medium.
// The maximum usage on memory medium EmptyDir would be the minimum value between
// the SizeLimit specified here and the sum of memory limits of all containers in a pod.
// The default is nil which means that the limit is undefined.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
func (o PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput) SizeLimit() pulumi.AnyOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEmptyDir) interface{} {
		if v == nil {
			return nil
		}
		return v.SizeLimit
	}).(pulumi.AnyOutput)
}

// ephemeral represents a volume that is handled by a cluster storage driver.
// The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
// and deleted when the pod is removed.
//
// Use this if:
// a) the volume is only needed while the pod runs,
// b) features of normal volumes like restoring from snapshot or capacity
//
//	tracking are needed,
//
// c) the storage driver is specified through a storage class, and
// d) the storage driver supports dynamic volume provisioning through
//
//	a PersistentVolumeClaim (see EphemeralVolumeSource for more
//	information on the connection between this volume type
//	and PersistentVolumeClaim).
//
// Use PersistentVolumeClaim or one of the vendor-specific
// APIs for volumes that persist for longer than the lifecycle
// of an individual pod.
//
// Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
// be used that way - see the documentation of the driver for
// more information.
//
// A pod can use both types of ephemeral volumes and
// persistent volumes at the same time.
type PoolerSpecTemplateSpecVolumesEphemeral struct {
	// Will be used to create a stand-alone PVC to provision the volume.
	// The pod in which this EphemeralVolumeSource is embedded will be the
	// owner of the PVC, i.e. the PVC will be deleted together with the
	// pod.  The name of the PVC will be `<pod name>-<volume name>` where
	// `<volume name>` is the name from the `PodSpec.Volumes` array
	// entry. Pod validation will reject the pod if the concatenated name
	// is not valid for a PVC (for example, too long).
	//
	// An existing PVC with that name that is not owned by the pod
	// will *not* be used for the pod to avoid using an unrelated
	// volume by mistake. Starting the pod is then blocked until
	// the unrelated PVC is removed. If such a pre-created PVC is
	// meant to be used by the pod, the PVC has to updated with an
	// owner reference to the pod once the pod exists. Normally
	// this should not be necessary, but it may be useful when
	// manually reconstructing a broken cluster.
	//
	// This field is read-only and no changes will be made by Kubernetes
	// to the PVC after it has been created.
	//
	// Required, must not be nil.
	VolumeClaimTemplate *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate `pulumi:"volumeClaimTemplate"`
}

// PoolerSpecTemplateSpecVolumesEphemeralInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralArgs and PoolerSpecTemplateSpecVolumesEphemeralOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralArgs{...}
type PoolerSpecTemplateSpecVolumesEphemeralInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralOutput() PoolerSpecTemplateSpecVolumesEphemeralOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralOutput
}

// ephemeral represents a volume that is handled by a cluster storage driver.
// The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
// and deleted when the pod is removed.
//
// Use this if:
// a) the volume is only needed while the pod runs,
// b) features of normal volumes like restoring from snapshot or capacity
//
//	tracking are needed,
//
// c) the storage driver is specified through a storage class, and
// d) the storage driver supports dynamic volume provisioning through
//
//	a PersistentVolumeClaim (see EphemeralVolumeSource for more
//	information on the connection between this volume type
//	and PersistentVolumeClaim).
//
// Use PersistentVolumeClaim or one of the vendor-specific
// APIs for volumes that persist for longer than the lifecycle
// of an individual pod.
//
// Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
// be used that way - see the documentation of the driver for
// more information.
//
// A pod can use both types of ephemeral volumes and
// persistent volumes at the same time.
type PoolerSpecTemplateSpecVolumesEphemeralArgs struct {
	// Will be used to create a stand-alone PVC to provision the volume.
	// The pod in which this EphemeralVolumeSource is embedded will be the
	// owner of the PVC, i.e. the PVC will be deleted together with the
	// pod.  The name of the PVC will be `<pod name>-<volume name>` where
	// `<volume name>` is the name from the `PodSpec.Volumes` array
	// entry. Pod validation will reject the pod if the concatenated name
	// is not valid for a PVC (for example, too long).
	//
	// An existing PVC with that name that is not owned by the pod
	// will *not* be used for the pod to avoid using an unrelated
	// volume by mistake. Starting the pod is then blocked until
	// the unrelated PVC is removed. If such a pre-created PVC is
	// meant to be used by the pod, the PVC has to updated with an
	// owner reference to the pod once the pod exists. Normally
	// this should not be necessary, but it may be useful when
	// manually reconstructing a broken cluster.
	//
	// This field is read-only and no changes will be made by Kubernetes
	// to the PVC after it has been created.
	//
	// Required, must not be nil.
	VolumeClaimTemplate PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrInput `pulumi:"volumeClaimTemplate"`
}

func (PoolerSpecTemplateSpecVolumesEphemeralArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeral)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralArgs) ToPoolerSpecTemplateSpecVolumesEphemeralOutput() PoolerSpecTemplateSpecVolumesEphemeralOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralArgs) ToPoolerSpecTemplateSpecVolumesEphemeralOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralOutput)
}

func (i PoolerSpecTemplateSpecVolumesEphemeralArgs) ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralArgs) ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralOutput).ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesEphemeralPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralArgs, PoolerSpecTemplateSpecVolumesEphemeralPtr and PoolerSpecTemplateSpecVolumesEphemeralPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesEphemeralArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesEphemeralPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralPtrOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralPtrOutput
}

type poolerSpecTemplateSpecVolumesEphemeralPtrType PoolerSpecTemplateSpecVolumesEphemeralArgs

func PoolerSpecTemplateSpecVolumesEphemeralPtr(v *PoolerSpecTemplateSpecVolumesEphemeralArgs) PoolerSpecTemplateSpecVolumesEphemeralPtrInput {
	return (*poolerSpecTemplateSpecVolumesEphemeralPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesEphemeralPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeral)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesEphemeralPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesEphemeralPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralPtrOutput)
}

// ephemeral represents a volume that is handled by a cluster storage driver.
// The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,
// and deleted when the pod is removed.
//
// Use this if:
// a) the volume is only needed while the pod runs,
// b) features of normal volumes like restoring from snapshot or capacity
//
//	tracking are needed,
//
// c) the storage driver is specified through a storage class, and
// d) the storage driver supports dynamic volume provisioning through
//
//	a PersistentVolumeClaim (see EphemeralVolumeSource for more
//	information on the connection between this volume type
//	and PersistentVolumeClaim).
//
// Use PersistentVolumeClaim or one of the vendor-specific
// APIs for volumes that persist for longer than the lifecycle
// of an individual pod.
//
// Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to
// be used that way - see the documentation of the driver for
// more information.
//
// A pod can use both types of ephemeral volumes and
// persistent volumes at the same time.
type PoolerSpecTemplateSpecVolumesEphemeralOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeral)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralOutput) ToPoolerSpecTemplateSpecVolumesEphemeralOutput() PoolerSpecTemplateSpecVolumesEphemeralOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralOutput) ToPoolerSpecTemplateSpecVolumesEphemeralOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralOutput) ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesEphemeralOutput) ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesEphemeral) *PoolerSpecTemplateSpecVolumesEphemeral {
		return &v
	}).(PoolerSpecTemplateSpecVolumesEphemeralPtrOutput)
}

// Will be used to create a stand-alone PVC to provision the volume.
// The pod in which this EphemeralVolumeSource is embedded will be the
// owner of the PVC, i.e. the PVC will be deleted together with the
// pod.  The name of the PVC will be `<pod name>-<volume name>` where
// `<volume name>` is the name from the `PodSpec.Volumes` array
// entry. Pod validation will reject the pod if the concatenated name
// is not valid for a PVC (for example, too long).
//
// An existing PVC with that name that is not owned by the pod
// will *not* be used for the pod to avoid using an unrelated
// volume by mistake. Starting the pod is then blocked until
// the unrelated PVC is removed. If such a pre-created PVC is
// meant to be used by the pod, the PVC has to updated with an
// owner reference to the pod once the pod exists. Normally
// this should not be necessary, but it may be useful when
// manually reconstructing a broken cluster.
//
// This field is read-only and no changes will be made by Kubernetes
// to the PVC after it has been created.
//
// Required, must not be nil.
func (o PoolerSpecTemplateSpecVolumesEphemeralOutput) VolumeClaimTemplate() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeral) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate {
		return v.VolumeClaimTemplate
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput)
}

type PoolerSpecTemplateSpecVolumesEphemeralPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeral)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralPtrOutput) Elem() PoolerSpecTemplateSpecVolumesEphemeralOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeral) PoolerSpecTemplateSpecVolumesEphemeral {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesEphemeral
		return ret
	}).(PoolerSpecTemplateSpecVolumesEphemeralOutput)
}

// Will be used to create a stand-alone PVC to provision the volume.
// The pod in which this EphemeralVolumeSource is embedded will be the
// owner of the PVC, i.e. the PVC will be deleted together with the
// pod.  The name of the PVC will be `<pod name>-<volume name>` where
// `<volume name>` is the name from the `PodSpec.Volumes` array
// entry. Pod validation will reject the pod if the concatenated name
// is not valid for a PVC (for example, too long).
//
// An existing PVC with that name that is not owned by the pod
// will *not* be used for the pod to avoid using an unrelated
// volume by mistake. Starting the pod is then blocked until
// the unrelated PVC is removed. If such a pre-created PVC is
// meant to be used by the pod, the PVC has to updated with an
// owner reference to the pod once the pod exists. Normally
// this should not be necessary, but it may be useful when
// manually reconstructing a broken cluster.
//
// This field is read-only and no changes will be made by Kubernetes
// to the PVC after it has been created.
//
// Required, must not be nil.
func (o PoolerSpecTemplateSpecVolumesEphemeralPtrOutput) VolumeClaimTemplate() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeral) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate {
		if v == nil {
			return nil
		}
		return v.VolumeClaimTemplate
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput)
}

// Will be used to create a stand-alone PVC to provision the volume.
// The pod in which this EphemeralVolumeSource is embedded will be the
// owner of the PVC, i.e. the PVC will be deleted together with the
// pod.  The name of the PVC will be `<pod name>-<volume name>` where
// `<volume name>` is the name from the `PodSpec.Volumes` array
// entry. Pod validation will reject the pod if the concatenated name
// is not valid for a PVC (for example, too long).
//
// An existing PVC with that name that is not owned by the pod
// will *not* be used for the pod to avoid using an unrelated
// volume by mistake. Starting the pod is then blocked until
// the unrelated PVC is removed. If such a pre-created PVC is
// meant to be used by the pod, the PVC has to updated with an
// owner reference to the pod once the pod exists. Normally
// this should not be necessary, but it may be useful when
// manually reconstructing a broken cluster.
//
// This field is read-only and no changes will be made by Kubernetes
// to the PVC after it has been created.
//
// Required, must not be nil.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate struct {
	// May contain labels and annotations that will be copied into the PVC
	// when creating it. No other fields are allowed and will be rejected during
	// validation.
	Metadata map[string]interface{} `pulumi:"metadata"`
	// The specification for the PersistentVolumeClaim. The entire content is
	// copied unchanged into the PVC that gets created from this
	// template. The same fields as in a PersistentVolumeClaim
	// are also valid here.
	Spec PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec `pulumi:"spec"`
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs{...}
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput
}

// Will be used to create a stand-alone PVC to provision the volume.
// The pod in which this EphemeralVolumeSource is embedded will be the
// owner of the PVC, i.e. the PVC will be deleted together with the
// pod.  The name of the PVC will be `<pod name>-<volume name>` where
// `<volume name>` is the name from the `PodSpec.Volumes` array
// entry. Pod validation will reject the pod if the concatenated name
// is not valid for a PVC (for example, too long).
//
// An existing PVC with that name that is not owned by the pod
// will *not* be used for the pod to avoid using an unrelated
// volume by mistake. Starting the pod is then blocked until
// the unrelated PVC is removed. If such a pre-created PVC is
// meant to be used by the pod, the PVC has to updated with an
// owner reference to the pod once the pod exists. Normally
// this should not be necessary, but it may be useful when
// manually reconstructing a broken cluster.
//
// This field is read-only and no changes will be made by Kubernetes
// to the PVC after it has been created.
//
// Required, must not be nil.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs struct {
	// May contain labels and annotations that will be copied into the PVC
	// when creating it. No other fields are allowed and will be rejected during
	// validation.
	Metadata pulumi.MapInput `pulumi:"metadata"`
	// The specification for the PersistentVolumeClaim. The entire content is
	// copied unchanged into the PVC that gets created from this
	// template. The same fields as in a PersistentVolumeClaim
	// are also valid here.
	Spec PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecInput `pulumi:"spec"`
}

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput)
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput).ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs, PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtr and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput
}

type poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrType PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs

func PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtr(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrInput {
	return (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput)
}

// Will be used to create a stand-alone PVC to provision the volume.
// The pod in which this EphemeralVolumeSource is embedded will be the
// owner of the PVC, i.e. the PVC will be deleted together with the
// pod.  The name of the PVC will be `<pod name>-<volume name>` where
// `<volume name>` is the name from the `PodSpec.Volumes` array
// entry. Pod validation will reject the pod if the concatenated name
// is not valid for a PVC (for example, too long).
//
// An existing PVC with that name that is not owned by the pod
// will *not* be used for the pod to avoid using an unrelated
// volume by mistake. Starting the pod is then blocked until
// the unrelated PVC is removed. If such a pre-created PVC is
// meant to be used by the pod, the PVC has to updated with an
// owner reference to the pod once the pod exists. Normally
// this should not be necessary, but it may be useful when
// manually reconstructing a broken cluster.
//
// This field is read-only and no changes will be made by Kubernetes
// to the PVC after it has been created.
//
// Required, must not be nil.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate {
		return &v
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput)
}

// May contain labels and annotations that will be copied into the PVC
// when creating it. No other fields are allowed and will be rejected during
// validation.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate) map[string]interface{} {
		return v.Metadata
	}).(pulumi.MapOutput)
}

// The specification for the PersistentVolumeClaim. The entire content is
// copied unchanged into the PVC that gets created from this
// template. The same fields as in a PersistentVolumeClaim
// are also valid here.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput) Spec() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec {
		return v.Spec
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput)
}

type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput) Elem() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate
		return ret
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput)
}

// May contain labels and annotations that will be copied into the PVC
// when creating it. No other fields are allowed and will be rejected during
// validation.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput) Metadata() pulumi.MapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(pulumi.MapOutput)
}

// The specification for the PersistentVolumeClaim. The entire content is
// copied unchanged into the PVC that gets created from this
// template. The same fields as in a PersistentVolumeClaim
// are also valid here.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput) Spec() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplate) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec {
		if v == nil {
			return nil
		}
		return &v.Spec
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput)
}

// May contain labels and annotations that will be copied into the PVC
// when creating it. No other fields are allowed and will be rejected during
// validation.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateMetadata struct {
}

// The specification for the PersistentVolumeClaim. The entire content is
// copied unchanged into the PVC that gets created from this
// template. The same fields as in a PersistentVolumeClaim
// are also valid here.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec struct {
	// accessModes contains the desired access modes the volume should have.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
	AccessModes []string `pulumi:"accessModes"`
	// dataSource field can be used to specify either:
	// * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
	// * An existing PVC (PersistentVolumeClaim)
	//   If the provisioner or an external controller can support the specified data source,
	//   it will create a new volume based on the contents of the specified data source.
	//   When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
	//   and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
	//   If the namespace is specified, then dataSourceRef will not be copied to dataSource.
	DataSource *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource `pulumi:"dataSource"`
	// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
	// volume is desired. This may be any object from a non-empty API group (non
	// core object) or a PersistentVolumeClaim object.
	// When this field is specified, volume binding will only succeed if the type of
	// the specified object matches some installed volume populator or dynamic
	// provisioner.
	// This field will replace the functionality of the dataSource field and as such
	// if both fields are non-empty, they must have the same value. For backwards
	// compatibility, when namespace isn't specified in dataSourceRef,
	// both fields (dataSource and dataSourceRef) will be set to the same
	// value automatically if one of them is empty and the other is non-empty.
	// When namespace is specified in dataSourceRef,
	// dataSource isn't set to the same value and must be empty.
	// There are three important differences between dataSource and dataSourceRef:
	// * While dataSource only allows two specific types of objects, dataSourceRef
	//   allows any non-core object, as well as PersistentVolumeClaim objects.
	// * While dataSource ignores disallowed values (dropping them), dataSourceRef
	//   preserves all values, and generates an error if a disallowed value is
	//   specified.
	// * While dataSource only allows local objects, dataSourceRef allows objects
	//   in any namespaces.
	//   (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
	//   (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
	DataSourceRef *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef `pulumi:"dataSourceRef"`
	// resources represents the minimum resources the volume should have.
	// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
	// that are lower than previous value but must still be higher than capacity recorded in the
	// status field of the claim.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
	Resources *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources `pulumi:"resources"`
	// selector is a label query over volumes to consider for binding.
	Selector *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector `pulumi:"selector"`
	// storageClassName is the name of the StorageClass required by the claim.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
	StorageClassName *string `pulumi:"storageClassName"`
	// volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
	// If specified, the CSI driver will create or update the volume with the attributes defined
	// in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
	// it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
	// will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
	// If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
	// will be set by the persistentvolume controller if it exists.
	// If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
	// set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
	// exists.
	// More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
	// (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
	VolumeAttributesClassName *string `pulumi:"volumeAttributesClassName"`
	// volumeMode defines what type of volume is required by the claim.
	// Value of Filesystem is implied when not included in claim spec.
	VolumeMode *string `pulumi:"volumeMode"`
	// volumeName is the binding reference to the PersistentVolume backing this claim.
	VolumeName *string `pulumi:"volumeName"`
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs{...}
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput
}

// The specification for the PersistentVolumeClaim. The entire content is
// copied unchanged into the PVC that gets created from this
// template. The same fields as in a PersistentVolumeClaim
// are also valid here.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs struct {
	// accessModes contains the desired access modes the volume should have.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
	AccessModes pulumi.StringArrayInput `pulumi:"accessModes"`
	// dataSource field can be used to specify either:
	// * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
	// * An existing PVC (PersistentVolumeClaim)
	//   If the provisioner or an external controller can support the specified data source,
	//   it will create a new volume based on the contents of the specified data source.
	//   When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
	//   and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
	//   If the namespace is specified, then dataSourceRef will not be copied to dataSource.
	DataSource PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrInput `pulumi:"dataSource"`
	// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
	// volume is desired. This may be any object from a non-empty API group (non
	// core object) or a PersistentVolumeClaim object.
	// When this field is specified, volume binding will only succeed if the type of
	// the specified object matches some installed volume populator or dynamic
	// provisioner.
	// This field will replace the functionality of the dataSource field and as such
	// if both fields are non-empty, they must have the same value. For backwards
	// compatibility, when namespace isn't specified in dataSourceRef,
	// both fields (dataSource and dataSourceRef) will be set to the same
	// value automatically if one of them is empty and the other is non-empty.
	// When namespace is specified in dataSourceRef,
	// dataSource isn't set to the same value and must be empty.
	// There are three important differences between dataSource and dataSourceRef:
	// * While dataSource only allows two specific types of objects, dataSourceRef
	//   allows any non-core object, as well as PersistentVolumeClaim objects.
	// * While dataSource ignores disallowed values (dropping them), dataSourceRef
	//   preserves all values, and generates an error if a disallowed value is
	//   specified.
	// * While dataSource only allows local objects, dataSourceRef allows objects
	//   in any namespaces.
	//   (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
	//   (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
	DataSourceRef PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrInput `pulumi:"dataSourceRef"`
	// resources represents the minimum resources the volume should have.
	// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
	// that are lower than previous value but must still be higher than capacity recorded in the
	// status field of the claim.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
	Resources PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrInput `pulumi:"resources"`
	// selector is a label query over volumes to consider for binding.
	Selector PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrInput `pulumi:"selector"`
	// storageClassName is the name of the StorageClass required by the claim.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
	StorageClassName pulumi.StringPtrInput `pulumi:"storageClassName"`
	// volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
	// If specified, the CSI driver will create or update the volume with the attributes defined
	// in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
	// it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
	// will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
	// If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
	// will be set by the persistentvolume controller if it exists.
	// If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
	// set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
	// exists.
	// More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
	// (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
	VolumeAttributesClassName pulumi.StringPtrInput `pulumi:"volumeAttributesClassName"`
	// volumeMode defines what type of volume is required by the claim.
	// Value of Filesystem is implied when not included in claim spec.
	VolumeMode pulumi.StringPtrInput `pulumi:"volumeMode"`
	// volumeName is the binding reference to the PersistentVolume backing this claim.
	VolumeName pulumi.StringPtrInput `pulumi:"volumeName"`
}

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput)
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput).ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs, PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtr and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput
}

type poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrType PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs

func PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtr(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrInput {
	return (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput)
}

// The specification for the PersistentVolumeClaim. The entire content is
// copied unchanged into the PVC that gets created from this
// template. The same fields as in a PersistentVolumeClaim
// are also valid here.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec {
		return &v
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput)
}

// accessModes contains the desired access modes the volume should have.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) AccessModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) []string { return v.AccessModes }).(pulumi.StringArrayOutput)
}

// dataSource field can be used to specify either:
//   - An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
//   - An existing PVC (PersistentVolumeClaim)
//     If the provisioner or an external controller can support the specified data source,
//     it will create a new volume based on the contents of the specified data source.
//     When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
//     and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
//     If the namespace is specified, then dataSourceRef will not be copied to dataSource.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) DataSource() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource {
		return v.DataSource
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput)
}

// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
// volume is desired. This may be any object from a non-empty API group (non
// core object) or a PersistentVolumeClaim object.
// When this field is specified, volume binding will only succeed if the type of
// the specified object matches some installed volume populator or dynamic
// provisioner.
// This field will replace the functionality of the dataSource field and as such
// if both fields are non-empty, they must have the same value. For backwards
// compatibility, when namespace isn't specified in dataSourceRef,
// both fields (dataSource and dataSourceRef) will be set to the same
// value automatically if one of them is empty and the other is non-empty.
// When namespace is specified in dataSourceRef,
// dataSource isn't set to the same value and must be empty.
// There are three important differences between dataSource and dataSourceRef:
//   - While dataSource only allows two specific types of objects, dataSourceRef
//     allows any non-core object, as well as PersistentVolumeClaim objects.
//   - While dataSource ignores disallowed values (dropping them), dataSourceRef
//     preserves all values, and generates an error if a disallowed value is
//     specified.
//   - While dataSource only allows local objects, dataSourceRef allows objects
//     in any namespaces.
//     (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
//     (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) DataSourceRef() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef {
		return v.DataSourceRef
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput)
}

// resources represents the minimum resources the volume should have.
// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
// that are lower than previous value but must still be higher than capacity recorded in the
// status field of the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) Resources() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources {
		return v.Resources
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput)
}

// selector is a label query over volumes to consider for binding.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) Selector() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector {
		return v.Selector
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput)
}

// storageClassName is the name of the StorageClass required by the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) StorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *string {
		return v.StorageClassName
	}).(pulumi.StringPtrOutput)
}

// volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
// If specified, the CSI driver will create or update the volume with the attributes defined
// in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
// it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
// will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
// If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
// will be set by the persistentvolume controller if it exists.
// If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
// set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
// exists.
// More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
// (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) VolumeAttributesClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *string {
		return v.VolumeAttributesClassName
	}).(pulumi.StringPtrOutput)
}

// volumeMode defines what type of volume is required by the claim.
// Value of Filesystem is implied when not included in claim spec.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) VolumeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *string { return v.VolumeMode }).(pulumi.StringPtrOutput)
}

// volumeName is the binding reference to the PersistentVolume backing this claim.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *string { return v.VolumeName }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) Elem() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec
		return ret
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput)
}

// accessModes contains the desired access modes the volume should have.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) AccessModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) []string {
		if v == nil {
			return nil
		}
		return v.AccessModes
	}).(pulumi.StringArrayOutput)
}

// dataSource field can be used to specify either:
//   - An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
//   - An existing PVC (PersistentVolumeClaim)
//     If the provisioner or an external controller can support the specified data source,
//     it will create a new volume based on the contents of the specified data source.
//     When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
//     and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
//     If the namespace is specified, then dataSourceRef will not be copied to dataSource.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) DataSource() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource {
		if v == nil {
			return nil
		}
		return v.DataSource
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput)
}

// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
// volume is desired. This may be any object from a non-empty API group (non
// core object) or a PersistentVolumeClaim object.
// When this field is specified, volume binding will only succeed if the type of
// the specified object matches some installed volume populator or dynamic
// provisioner.
// This field will replace the functionality of the dataSource field and as such
// if both fields are non-empty, they must have the same value. For backwards
// compatibility, when namespace isn't specified in dataSourceRef,
// both fields (dataSource and dataSourceRef) will be set to the same
// value automatically if one of them is empty and the other is non-empty.
// When namespace is specified in dataSourceRef,
// dataSource isn't set to the same value and must be empty.
// There are three important differences between dataSource and dataSourceRef:
//   - While dataSource only allows two specific types of objects, dataSourceRef
//     allows any non-core object, as well as PersistentVolumeClaim objects.
//   - While dataSource ignores disallowed values (dropping them), dataSourceRef
//     preserves all values, and generates an error if a disallowed value is
//     specified.
//   - While dataSource only allows local objects, dataSourceRef allows objects
//     in any namespaces.
//     (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
//     (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) DataSourceRef() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef {
		if v == nil {
			return nil
		}
		return v.DataSourceRef
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput)
}

// resources represents the minimum resources the volume should have.
// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
// that are lower than previous value but must still be higher than capacity recorded in the
// status field of the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) Resources() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput)
}

// selector is a label query over volumes to consider for binding.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) Selector() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector {
		if v == nil {
			return nil
		}
		return v.Selector
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput)
}

// storageClassName is the name of the StorageClass required by the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) StorageClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.StorageClassName
	}).(pulumi.StringPtrOutput)
}

// volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
// If specified, the CSI driver will create or update the volume with the attributes defined
// in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
// it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
// will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
// If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
// will be set by the persistentvolume controller if it exists.
// If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
// set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
// exists.
// More info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/
// (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) VolumeAttributesClassName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.VolumeAttributesClassName
	}).(pulumi.StringPtrOutput)
}

// volumeMode defines what type of volume is required by the claim.
// Value of Filesystem is implied when not included in claim spec.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) VolumeMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.VolumeMode
	}).(pulumi.StringPtrOutput)
}

// volumeName is the binding reference to the PersistentVolume backing this claim.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpec) *string {
		if v == nil {
			return nil
		}
		return v.VolumeName
	}).(pulumi.StringPtrOutput)
}

// dataSource field can be used to specify either:
//   - An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
//   - An existing PVC (PersistentVolumeClaim)
//     If the provisioner or an external controller can support the specified data source,
//     it will create a new volume based on the contents of the specified data source.
//     When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
//     and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
//     If the namespace is specified, then dataSourceRef will not be copied to dataSource.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource struct {
	// APIGroup is the group for the resource being referenced.
	// If APIGroup is not specified, the specified Kind must be in the core API group.
	// For any other third-party types, APIGroup is required.
	ApiGroup *string `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind string `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name string `pulumi:"name"`
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs{...}
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput
}

// dataSource field can be used to specify either:
//   - An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
//   - An existing PVC (PersistentVolumeClaim)
//     If the provisioner or an external controller can support the specified data source,
//     it will create a new volume based on the contents of the specified data source.
//     When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
//     and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
//     If the namespace is specified, then dataSourceRef will not be copied to dataSource.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs struct {
	// APIGroup is the group for the resource being referenced.
	// If APIGroup is not specified, the specified Kind must be in the core API group.
	// For any other third-party types, APIGroup is required.
	ApiGroup pulumi.StringPtrInput `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind pulumi.StringInput `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name pulumi.StringInput `pulumi:"name"`
}

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput)
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput).ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs, PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtr and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput
}

type poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrType PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs

func PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtr(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrInput {
	return (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput)
}

// dataSource field can be used to specify either:
//   - An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
//   - An existing PVC (PersistentVolumeClaim)
//     If the provisioner or an external controller can support the specified data source,
//     it will create a new volume based on the contents of the specified data source.
//     When the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,
//     and dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.
//     If the namespace is specified, then dataSourceRef will not be copied to dataSource.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource {
		return &v
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput)
}

// APIGroup is the group for the resource being referenced.
// If APIGroup is not specified, the specified Kind must be in the core API group.
// For any other third-party types, APIGroup is required.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource) *string {
		return v.ApiGroup
	}).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource) string { return v.Kind }).(pulumi.StringOutput)
}

// Name is the name of resource being referenced
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource) string { return v.Name }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput) Elem() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource
		return ret
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput)
}

// APIGroup is the group for the resource being referenced.
// If APIGroup is not specified, the specified Kind must be in the core API group.
// For any other third-party types, APIGroup is required.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource) *string {
		if v == nil {
			return nil
		}
		return v.ApiGroup
	}).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
// volume is desired. This may be any object from a non-empty API group (non
// core object) or a PersistentVolumeClaim object.
// When this field is specified, volume binding will only succeed if the type of
// the specified object matches some installed volume populator or dynamic
// provisioner.
// This field will replace the functionality of the dataSource field and as such
// if both fields are non-empty, they must have the same value. For backwards
// compatibility, when namespace isn't specified in dataSourceRef,
// both fields (dataSource and dataSourceRef) will be set to the same
// value automatically if one of them is empty and the other is non-empty.
// When namespace is specified in dataSourceRef,
// dataSource isn't set to the same value and must be empty.
// There are three important differences between dataSource and dataSourceRef:
//   - While dataSource only allows two specific types of objects, dataSourceRef
//     allows any non-core object, as well as PersistentVolumeClaim objects.
//   - While dataSource ignores disallowed values (dropping them), dataSourceRef
//     preserves all values, and generates an error if a disallowed value is
//     specified.
//   - While dataSource only allows local objects, dataSourceRef allows objects
//     in any namespaces.
//     (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
//     (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef struct {
	// APIGroup is the group for the resource being referenced.
	// If APIGroup is not specified, the specified Kind must be in the core API group.
	// For any other third-party types, APIGroup is required.
	ApiGroup *string `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind string `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name string `pulumi:"name"`
	// Namespace is the namespace of resource being referenced
	// Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
	// (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
	Namespace *string `pulumi:"namespace"`
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs{...}
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput
}

// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
// volume is desired. This may be any object from a non-empty API group (non
// core object) or a PersistentVolumeClaim object.
// When this field is specified, volume binding will only succeed if the type of
// the specified object matches some installed volume populator or dynamic
// provisioner.
// This field will replace the functionality of the dataSource field and as such
// if both fields are non-empty, they must have the same value. For backwards
// compatibility, when namespace isn't specified in dataSourceRef,
// both fields (dataSource and dataSourceRef) will be set to the same
// value automatically if one of them is empty and the other is non-empty.
// When namespace is specified in dataSourceRef,
// dataSource isn't set to the same value and must be empty.
// There are three important differences between dataSource and dataSourceRef:
//   - While dataSource only allows two specific types of objects, dataSourceRef
//     allows any non-core object, as well as PersistentVolumeClaim objects.
//   - While dataSource ignores disallowed values (dropping them), dataSourceRef
//     preserves all values, and generates an error if a disallowed value is
//     specified.
//   - While dataSource only allows local objects, dataSourceRef allows objects
//     in any namespaces.
//     (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
//     (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs struct {
	// APIGroup is the group for the resource being referenced.
	// If APIGroup is not specified, the specified Kind must be in the core API group.
	// For any other third-party types, APIGroup is required.
	ApiGroup pulumi.StringPtrInput `pulumi:"apiGroup"`
	// Kind is the type of resource being referenced
	Kind pulumi.StringInput `pulumi:"kind"`
	// Name is the name of resource being referenced
	Name pulumi.StringInput `pulumi:"name"`
	// Namespace is the namespace of resource being referenced
	// Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
	// (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput)
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput).ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs, PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtr and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput
}

type poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrType PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs

func PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtr(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrInput {
	return (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput)
}

// dataSourceRef specifies the object from which to populate the volume with data, if a non-empty
// volume is desired. This may be any object from a non-empty API group (non
// core object) or a PersistentVolumeClaim object.
// When this field is specified, volume binding will only succeed if the type of
// the specified object matches some installed volume populator or dynamic
// provisioner.
// This field will replace the functionality of the dataSource field and as such
// if both fields are non-empty, they must have the same value. For backwards
// compatibility, when namespace isn't specified in dataSourceRef,
// both fields (dataSource and dataSourceRef) will be set to the same
// value automatically if one of them is empty and the other is non-empty.
// When namespace is specified in dataSourceRef,
// dataSource isn't set to the same value and must be empty.
// There are three important differences between dataSource and dataSourceRef:
//   - While dataSource only allows two specific types of objects, dataSourceRef
//     allows any non-core object, as well as PersistentVolumeClaim objects.
//   - While dataSource ignores disallowed values (dropping them), dataSourceRef
//     preserves all values, and generates an error if a disallowed value is
//     specified.
//   - While dataSource only allows local objects, dataSourceRef allows objects
//     in any namespaces.
//     (Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.
//     (Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef {
		return &v
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput)
}

// APIGroup is the group for the resource being referenced.
// If APIGroup is not specified, the specified Kind must be in the core API group.
// For any other third-party types, APIGroup is required.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef) *string {
		return v.ApiGroup
	}).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef) string {
		return v.Kind
	}).(pulumi.StringOutput)
}

// Name is the name of resource being referenced
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// Namespace is the namespace of resource being referenced
// Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
// (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef) *string {
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput) Elem() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef
		return ret
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput)
}

// APIGroup is the group for the resource being referenced.
// If APIGroup is not specified, the specified Kind must be in the core API group.
// For any other third-party types, APIGroup is required.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput) ApiGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiGroup
	}).(pulumi.StringPtrOutput)
}

// Kind is the type of resource being referenced
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name is the name of resource being referenced
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Namespace is the namespace of resource being referenced
// Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
// (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRef) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// resources represents the minimum resources the volume should have.
// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
// that are lower than previous value but must still be higher than capacity recorded in the
// status field of the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources struct {
	// Limits describes the maximum amount of compute resources allowed.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Limits map[string]interface{} `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required.
	// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
	// otherwise to an implementation-defined value. Requests cannot exceed Limits.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Requests map[string]interface{} `pulumi:"requests"`
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs{...}
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput
}

// resources represents the minimum resources the volume should have.
// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
// that are lower than previous value but must still be higher than capacity recorded in the
// status field of the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs struct {
	// Limits describes the maximum amount of compute resources allowed.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Limits pulumi.MapInput `pulumi:"limits"`
	// Requests describes the minimum amount of compute resources required.
	// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
	// otherwise to an implementation-defined value. Requests cannot exceed Limits.
	// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
	Requests pulumi.MapInput `pulumi:"requests"`
}

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput)
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput).ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs, PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtr and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput
}

type poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrType PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs

func PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtr(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrInput {
	return (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput)
}

// resources represents the minimum resources the volume should have.
// If RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements
// that are lower than previous value but must still be higher than capacity recorded in the
// status field of the claim.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources {
		return &v
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput)
}

// Limits describes the maximum amount of compute resources allowed.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput) Limits() pulumi.MapOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources) map[string]interface{} {
		return v.Limits
	}).(pulumi.MapOutput)
}

// Requests describes the minimum amount of compute resources required.
// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
// otherwise to an implementation-defined value. Requests cannot exceed Limits.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput) Requests() pulumi.MapOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources) map[string]interface{} {
		return v.Requests
	}).(pulumi.MapOutput)
}

type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput) Elem() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources
		return ret
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput)
}

// Limits describes the maximum amount of compute resources allowed.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput) Limits() pulumi.MapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Limits
	}).(pulumi.MapOutput)
}

// Requests describes the minimum amount of compute resources required.
// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
// otherwise to an implementation-defined value. Requests cannot exceed Limits.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput) Requests() pulumi.MapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResources) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Requests
	}).(pulumi.MapOutput)
}

// Limits describes the maximum amount of compute resources allowed.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits struct {
}

// Requests describes the minimum amount of compute resources required.
// If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
// otherwise to an implementation-defined value. Requests cannot exceed Limits.
// More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests struct {
}

// selector is a label query over volumes to consider for binding.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs{...}
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput
}

// selector is a label query over volumes to consider for binding.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput)
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput).ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs, PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtr and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput
}

type poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrType PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs

func PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtr(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrInput {
	return (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrType) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput)
}

// selector is a label query over volumes to consider for binding.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector) *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector {
		return &v
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput) MatchExpressions() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector) []PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions {
		return v.MatchExpressions
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput) Elem() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector
		return ret
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput) MatchExpressions() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector) []PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArgs and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArgs{...}
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArgs) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput)
}

// PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArray and PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArray{ PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArgs{...} }
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput
	ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput
}

type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArray []PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsInput

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArray) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArray) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput() PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput) ToPoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions {
		return vs[0].([]PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
type PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchLabels struct {
}

// fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
type PoolerSpecTemplateSpecVolumesFc struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	// TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType *string `pulumi:"fsType"`
	// lun is Optional: FC target lun number
	Lun *int `pulumi:"lun"`
	// readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`
	// targetWWNs is Optional: FC target worldwide names (WWNs)
	TargetWWNs []string `pulumi:"targetWWNs"`
	// wwids Optional: FC volume world wide identifiers (wwids)
	// Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
	Wwids []string `pulumi:"wwids"`
}

// PoolerSpecTemplateSpecVolumesFcInput is an input type that accepts PoolerSpecTemplateSpecVolumesFcArgs and PoolerSpecTemplateSpecVolumesFcOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesFcInput` via:
//
//	PoolerSpecTemplateSpecVolumesFcArgs{...}
type PoolerSpecTemplateSpecVolumesFcInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesFcOutput() PoolerSpecTemplateSpecVolumesFcOutput
	ToPoolerSpecTemplateSpecVolumesFcOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesFcOutput
}

// fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
type PoolerSpecTemplateSpecVolumesFcArgs struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	// TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// lun is Optional: FC target lun number
	Lun pulumi.IntPtrInput `pulumi:"lun"`
	// readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// targetWWNs is Optional: FC target worldwide names (WWNs)
	TargetWWNs pulumi.StringArrayInput `pulumi:"targetWWNs"`
	// wwids Optional: FC volume world wide identifiers (wwids)
	// Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
	Wwids pulumi.StringArrayInput `pulumi:"wwids"`
}

func (PoolerSpecTemplateSpecVolumesFcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFc)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesFcArgs) ToPoolerSpecTemplateSpecVolumesFcOutput() PoolerSpecTemplateSpecVolumesFcOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFcOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesFcArgs) ToPoolerSpecTemplateSpecVolumesFcOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFcOutput)
}

func (i PoolerSpecTemplateSpecVolumesFcArgs) ToPoolerSpecTemplateSpecVolumesFcPtrOutput() PoolerSpecTemplateSpecVolumesFcPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFcPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesFcArgs) ToPoolerSpecTemplateSpecVolumesFcPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFcOutput).ToPoolerSpecTemplateSpecVolumesFcPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesFcPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesFcArgs, PoolerSpecTemplateSpecVolumesFcPtr and PoolerSpecTemplateSpecVolumesFcPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesFcPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesFcArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesFcPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesFcPtrOutput() PoolerSpecTemplateSpecVolumesFcPtrOutput
	ToPoolerSpecTemplateSpecVolumesFcPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesFcPtrOutput
}

type poolerSpecTemplateSpecVolumesFcPtrType PoolerSpecTemplateSpecVolumesFcArgs

func PoolerSpecTemplateSpecVolumesFcPtr(v *PoolerSpecTemplateSpecVolumesFcArgs) PoolerSpecTemplateSpecVolumesFcPtrInput {
	return (*poolerSpecTemplateSpecVolumesFcPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesFcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesFc)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesFcPtrType) ToPoolerSpecTemplateSpecVolumesFcPtrOutput() PoolerSpecTemplateSpecVolumesFcPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFcPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesFcPtrType) ToPoolerSpecTemplateSpecVolumesFcPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFcPtrOutput)
}

// fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
type PoolerSpecTemplateSpecVolumesFcOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesFcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFc)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesFcOutput) ToPoolerSpecTemplateSpecVolumesFcOutput() PoolerSpecTemplateSpecVolumesFcOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFcOutput) ToPoolerSpecTemplateSpecVolumesFcOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFcOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFcOutput) ToPoolerSpecTemplateSpecVolumesFcPtrOutput() PoolerSpecTemplateSpecVolumesFcPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesFcPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesFcOutput) ToPoolerSpecTemplateSpecVolumesFcPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFcPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesFc) *PoolerSpecTemplateSpecVolumesFc {
		return &v
	}).(PoolerSpecTemplateSpecVolumesFcPtrOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
// TODO: how do we prevent errors in the filesystem from compromising the machine
func (o PoolerSpecTemplateSpecVolumesFcOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFc) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// lun is Optional: FC target lun number
func (o PoolerSpecTemplateSpecVolumesFcOutput) Lun() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFc) *int { return v.Lun }).(pulumi.IntPtrOutput)
}

// readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesFcOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFc) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// targetWWNs is Optional: FC target worldwide names (WWNs)
func (o PoolerSpecTemplateSpecVolumesFcOutput) TargetWWNs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFc) []string { return v.TargetWWNs }).(pulumi.StringArrayOutput)
}

// wwids Optional: FC volume world wide identifiers (wwids)
// Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
func (o PoolerSpecTemplateSpecVolumesFcOutput) Wwids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFc) []string { return v.Wwids }).(pulumi.StringArrayOutput)
}

type PoolerSpecTemplateSpecVolumesFcPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesFcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesFc)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesFcPtrOutput) ToPoolerSpecTemplateSpecVolumesFcPtrOutput() PoolerSpecTemplateSpecVolumesFcPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFcPtrOutput) ToPoolerSpecTemplateSpecVolumesFcPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFcPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFcPtrOutput) Elem() PoolerSpecTemplateSpecVolumesFcOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFc) PoolerSpecTemplateSpecVolumesFc {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesFc
		return ret
	}).(PoolerSpecTemplateSpecVolumesFcOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
// TODO: how do we prevent errors in the filesystem from compromising the machine
func (o PoolerSpecTemplateSpecVolumesFcPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFc) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// lun is Optional: FC target lun number
func (o PoolerSpecTemplateSpecVolumesFcPtrOutput) Lun() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFc) *int {
		if v == nil {
			return nil
		}
		return v.Lun
	}).(pulumi.IntPtrOutput)
}

// readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesFcPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFc) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// targetWWNs is Optional: FC target worldwide names (WWNs)
func (o PoolerSpecTemplateSpecVolumesFcPtrOutput) TargetWWNs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFc) []string {
		if v == nil {
			return nil
		}
		return v.TargetWWNs
	}).(pulumi.StringArrayOutput)
}

// wwids Optional: FC volume world wide identifiers (wwids)
// Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
func (o PoolerSpecTemplateSpecVolumesFcPtrOutput) Wwids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFc) []string {
		if v == nil {
			return nil
		}
		return v.Wwids
	}).(pulumi.StringArrayOutput)
}

// flexVolume represents a generic volume resource that is
// provisioned/attached using an exec based plugin.
type PoolerSpecTemplateSpecVolumesFlexVolume struct {
	// driver is the name of the driver to use for this volume.
	Driver string `pulumi:"driver"`
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
	FsType *string `pulumi:"fsType"`
	// options is Optional: this field holds extra command options if any.
	Options map[string]string `pulumi:"options"`
	// readOnly is Optional: defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`
	// secretRef is Optional: secretRef is reference to the secret object containing
	// sensitive information to pass to the plugin scripts. This may be
	// empty if no secret object is specified. If the secret object
	// contains more than one secret, all secrets are passed to the plugin
	// scripts.
	SecretRef *PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef `pulumi:"secretRef"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesFlexVolume
func (val *PoolerSpecTemplateSpecVolumesFlexVolume) Defaults() *PoolerSpecTemplateSpecVolumesFlexVolume {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.SecretRef = tmp.SecretRef.Defaults()

	return &tmp
}

// PoolerSpecTemplateSpecVolumesFlexVolumeInput is an input type that accepts PoolerSpecTemplateSpecVolumesFlexVolumeArgs and PoolerSpecTemplateSpecVolumesFlexVolumeOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesFlexVolumeInput` via:
//
//	PoolerSpecTemplateSpecVolumesFlexVolumeArgs{...}
type PoolerSpecTemplateSpecVolumesFlexVolumeInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesFlexVolumeOutput() PoolerSpecTemplateSpecVolumesFlexVolumeOutput
	ToPoolerSpecTemplateSpecVolumesFlexVolumeOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeOutput
}

// flexVolume represents a generic volume resource that is
// provisioned/attached using an exec based plugin.
type PoolerSpecTemplateSpecVolumesFlexVolumeArgs struct {
	// driver is the name of the driver to use for this volume.
	Driver pulumi.StringInput `pulumi:"driver"`
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// options is Optional: this field holds extra command options if any.
	Options pulumi.StringMapInput `pulumi:"options"`
	// readOnly is Optional: defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// secretRef is Optional: secretRef is reference to the secret object containing
	// sensitive information to pass to the plugin scripts. This may be
	// empty if no secret object is specified. If the secret object
	// contains more than one secret, all secrets are passed to the plugin
	// scripts.
	SecretRef PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrInput `pulumi:"secretRef"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesFlexVolumeArgs
func (val *PoolerSpecTemplateSpecVolumesFlexVolumeArgs) Defaults() *PoolerSpecTemplateSpecVolumesFlexVolumeArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (PoolerSpecTemplateSpecVolumesFlexVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlexVolume)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesFlexVolumeArgs) ToPoolerSpecTemplateSpecVolumesFlexVolumeOutput() PoolerSpecTemplateSpecVolumesFlexVolumeOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlexVolumeOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesFlexVolumeArgs) ToPoolerSpecTemplateSpecVolumesFlexVolumeOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlexVolumeOutput)
}

func (i PoolerSpecTemplateSpecVolumesFlexVolumeArgs) ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesFlexVolumeArgs) ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlexVolumeOutput).ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesFlexVolumePtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesFlexVolumeArgs, PoolerSpecTemplateSpecVolumesFlexVolumePtr and PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesFlexVolumePtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesFlexVolumeArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesFlexVolumePtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput
	ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput
}

type poolerSpecTemplateSpecVolumesFlexVolumePtrType PoolerSpecTemplateSpecVolumesFlexVolumeArgs

func PoolerSpecTemplateSpecVolumesFlexVolumePtr(v *PoolerSpecTemplateSpecVolumesFlexVolumeArgs) PoolerSpecTemplateSpecVolumesFlexVolumePtrInput {
	return (*poolerSpecTemplateSpecVolumesFlexVolumePtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesFlexVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesFlexVolume)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesFlexVolumePtrType) ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesFlexVolumePtrType) ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput)
}

// flexVolume represents a generic volume resource that is
// provisioned/attached using an exec based plugin.
type PoolerSpecTemplateSpecVolumesFlexVolumeOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesFlexVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlexVolume)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumeOutput() PoolerSpecTemplateSpecVolumesFlexVolumeOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumeOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesFlexVolume) *PoolerSpecTemplateSpecVolumesFlexVolume {
		return &v
	}).(PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput)
}

// driver is the name of the driver to use for this volume.
func (o PoolerSpecTemplateSpecVolumesFlexVolumeOutput) Driver() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFlexVolume) string { return v.Driver }).(pulumi.StringOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
func (o PoolerSpecTemplateSpecVolumesFlexVolumeOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFlexVolume) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// options is Optional: this field holds extra command options if any.
func (o PoolerSpecTemplateSpecVolumesFlexVolumeOutput) Options() pulumi.StringMapOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFlexVolume) map[string]string { return v.Options }).(pulumi.StringMapOutput)
}

// readOnly is Optional: defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesFlexVolumeOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFlexVolume) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// secretRef is Optional: secretRef is reference to the secret object containing
// sensitive information to pass to the plugin scripts. This may be
// empty if no secret object is specified. If the secret object
// contains more than one secret, all secrets are passed to the plugin
// scripts.
func (o PoolerSpecTemplateSpecVolumesFlexVolumeOutput) SecretRef() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFlexVolume) *PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef {
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput)
}

type PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesFlexVolume)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput) Elem() PoolerSpecTemplateSpecVolumesFlexVolumeOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlexVolume) PoolerSpecTemplateSpecVolumesFlexVolume {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesFlexVolume
		return ret
	}).(PoolerSpecTemplateSpecVolumesFlexVolumeOutput)
}

// driver is the name of the driver to use for this volume.
func (o PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlexVolume) *string {
		if v == nil {
			return nil
		}
		return &v.Driver
	}).(pulumi.StringPtrOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
func (o PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlexVolume) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// options is Optional: this field holds extra command options if any.
func (o PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput) Options() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlexVolume) map[string]string {
		if v == nil {
			return nil
		}
		return v.Options
	}).(pulumi.StringMapOutput)
}

// readOnly is Optional: defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlexVolume) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// secretRef is Optional: secretRef is reference to the secret object containing
// sensitive information to pass to the plugin scripts. This may be
// empty if no secret object is specified. If the secret object
// contains more than one secret, all secrets are passed to the plugin
// scripts.
func (o PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput) SecretRef() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlexVolume) *PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput)
}

// options is Optional: this field holds extra command options if any.
type PoolerSpecTemplateSpecVolumesFlexVolumeOptions struct {
}

// secretRef is Optional: secretRef is reference to the secret object containing
// sensitive information to pass to the plugin scripts. This may be
// empty if no secret object is specified. If the secret object
// contains more than one secret, all secrets are passed to the plugin
// scripts.
type PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name *string `pulumi:"name"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef
func (val *PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef) Defaults() *PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		name_ := ""
		tmp.Name = &name_
	}
	return &tmp
}

// PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefInput is an input type that accepts PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs and PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefInput` via:
//
//	PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs{...}
type PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput
	ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput
}

// secretRef is Optional: secretRef is reference to the secret object containing
// sensitive information to pass to the plugin scripts. This may be
// empty if no secret object is specified. If the secret object
// contains more than one secret, all secrets are passed to the plugin
// scripts.
type PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs
func (val *PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs) Defaults() *PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		tmp.Name = pulumi.StringPtr("")
	}
	return &tmp
}
func (PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput)
}

func (i PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput).ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs, PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtr and PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput
	ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput
}

type poolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrType PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs

func PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtr(v *PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrInput {
	return (*poolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput)
}

// secretRef is Optional: secretRef is reference to the secret object containing
// sensitive information to pass to the plugin scripts. This may be
// empty if no secret object is specified. If the secret object
// contains more than one secret, all secrets are passed to the plugin
// scripts.
type PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef) *PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef {
		return &v
	}).(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput) Elem() PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef) PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef
		return ret
	}).(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlexVolumeSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
type PoolerSpecTemplateSpecVolumesFlocker struct {
	// datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
	// should be considered as deprecated
	DatasetName *string `pulumi:"datasetName"`
	// datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
	DatasetUUID *string `pulumi:"datasetUUID"`
}

// PoolerSpecTemplateSpecVolumesFlockerInput is an input type that accepts PoolerSpecTemplateSpecVolumesFlockerArgs and PoolerSpecTemplateSpecVolumesFlockerOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesFlockerInput` via:
//
//	PoolerSpecTemplateSpecVolumesFlockerArgs{...}
type PoolerSpecTemplateSpecVolumesFlockerInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesFlockerOutput() PoolerSpecTemplateSpecVolumesFlockerOutput
	ToPoolerSpecTemplateSpecVolumesFlockerOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesFlockerOutput
}

// flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
type PoolerSpecTemplateSpecVolumesFlockerArgs struct {
	// datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
	// should be considered as deprecated
	DatasetName pulumi.StringPtrInput `pulumi:"datasetName"`
	// datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
	DatasetUUID pulumi.StringPtrInput `pulumi:"datasetUUID"`
}

func (PoolerSpecTemplateSpecVolumesFlockerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlocker)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesFlockerArgs) ToPoolerSpecTemplateSpecVolumesFlockerOutput() PoolerSpecTemplateSpecVolumesFlockerOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlockerOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesFlockerArgs) ToPoolerSpecTemplateSpecVolumesFlockerOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlockerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlockerOutput)
}

func (i PoolerSpecTemplateSpecVolumesFlockerArgs) ToPoolerSpecTemplateSpecVolumesFlockerPtrOutput() PoolerSpecTemplateSpecVolumesFlockerPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlockerPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesFlockerArgs) ToPoolerSpecTemplateSpecVolumesFlockerPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlockerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlockerOutput).ToPoolerSpecTemplateSpecVolumesFlockerPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesFlockerPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesFlockerArgs, PoolerSpecTemplateSpecVolumesFlockerPtr and PoolerSpecTemplateSpecVolumesFlockerPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesFlockerPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesFlockerArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesFlockerPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesFlockerPtrOutput() PoolerSpecTemplateSpecVolumesFlockerPtrOutput
	ToPoolerSpecTemplateSpecVolumesFlockerPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesFlockerPtrOutput
}

type poolerSpecTemplateSpecVolumesFlockerPtrType PoolerSpecTemplateSpecVolumesFlockerArgs

func PoolerSpecTemplateSpecVolumesFlockerPtr(v *PoolerSpecTemplateSpecVolumesFlockerArgs) PoolerSpecTemplateSpecVolumesFlockerPtrInput {
	return (*poolerSpecTemplateSpecVolumesFlockerPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesFlockerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesFlocker)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesFlockerPtrType) ToPoolerSpecTemplateSpecVolumesFlockerPtrOutput() PoolerSpecTemplateSpecVolumesFlockerPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesFlockerPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesFlockerPtrType) ToPoolerSpecTemplateSpecVolumesFlockerPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlockerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesFlockerPtrOutput)
}

// flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
type PoolerSpecTemplateSpecVolumesFlockerOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesFlockerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlocker)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesFlockerOutput) ToPoolerSpecTemplateSpecVolumesFlockerOutput() PoolerSpecTemplateSpecVolumesFlockerOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlockerOutput) ToPoolerSpecTemplateSpecVolumesFlockerOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlockerOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlockerOutput) ToPoolerSpecTemplateSpecVolumesFlockerPtrOutput() PoolerSpecTemplateSpecVolumesFlockerPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesFlockerPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesFlockerOutput) ToPoolerSpecTemplateSpecVolumesFlockerPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlockerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesFlocker) *PoolerSpecTemplateSpecVolumesFlocker {
		return &v
	}).(PoolerSpecTemplateSpecVolumesFlockerPtrOutput)
}

// datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
// should be considered as deprecated
func (o PoolerSpecTemplateSpecVolumesFlockerOutput) DatasetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFlocker) *string { return v.DatasetName }).(pulumi.StringPtrOutput)
}

// datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
func (o PoolerSpecTemplateSpecVolumesFlockerOutput) DatasetUUID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesFlocker) *string { return v.DatasetUUID }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesFlockerPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesFlockerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesFlocker)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesFlockerPtrOutput) ToPoolerSpecTemplateSpecVolumesFlockerPtrOutput() PoolerSpecTemplateSpecVolumesFlockerPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlockerPtrOutput) ToPoolerSpecTemplateSpecVolumesFlockerPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesFlockerPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesFlockerPtrOutput) Elem() PoolerSpecTemplateSpecVolumesFlockerOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlocker) PoolerSpecTemplateSpecVolumesFlocker {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesFlocker
		return ret
	}).(PoolerSpecTemplateSpecVolumesFlockerOutput)
}

// datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
// should be considered as deprecated
func (o PoolerSpecTemplateSpecVolumesFlockerPtrOutput) DatasetName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlocker) *string {
		if v == nil {
			return nil
		}
		return v.DatasetName
	}).(pulumi.StringPtrOutput)
}

// datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
func (o PoolerSpecTemplateSpecVolumesFlockerPtrOutput) DatasetUUID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesFlocker) *string {
		if v == nil {
			return nil
		}
		return v.DatasetUUID
	}).(pulumi.StringPtrOutput)
}

// gcePersistentDisk represents a GCE Disk resource that is attached to a
// kubelet's host machine and then exposed to the pod.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
type PoolerSpecTemplateSpecVolumesGcePersistentDisk struct {
	// fsType is filesystem type of the volume that you want to mount.
	// Tip: Ensure that the filesystem type is supported by the host operating system.
	// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	// TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType *string `pulumi:"fsType"`
	// partition is the partition in the volume that you want to mount.
	// If omitted, the default is to mount by volume name.
	// Examples: For volume /dev/sda1, you specify the partition as "1".
	// Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	Partition *int `pulumi:"partition"`
	// pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	PdName string `pulumi:"pdName"`
	// readOnly here will force the ReadOnly setting in VolumeMounts.
	// Defaults to false.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	ReadOnly *bool `pulumi:"readOnly"`
}

// PoolerSpecTemplateSpecVolumesGcePersistentDiskInput is an input type that accepts PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs and PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesGcePersistentDiskInput` via:
//
//	PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs{...}
type PoolerSpecTemplateSpecVolumesGcePersistentDiskInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesGcePersistentDiskOutput() PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput
	ToPoolerSpecTemplateSpecVolumesGcePersistentDiskOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput
}

// gcePersistentDisk represents a GCE Disk resource that is attached to a
// kubelet's host machine and then exposed to the pod.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
type PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs struct {
	// fsType is filesystem type of the volume that you want to mount.
	// Tip: Ensure that the filesystem type is supported by the host operating system.
	// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	// TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// partition is the partition in the volume that you want to mount.
	// If omitted, the default is to mount by volume name.
	// Examples: For volume /dev/sda1, you specify the partition as "1".
	// Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	Partition pulumi.IntPtrInput `pulumi:"partition"`
	// pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	PdName pulumi.StringInput `pulumi:"pdName"`
	// readOnly here will force the ReadOnly setting in VolumeMounts.
	// Defaults to false.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
}

func (PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGcePersistentDisk)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskOutput() PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGcePersistentDiskOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput)
}

func (i PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput() PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput).ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs, PoolerSpecTemplateSpecVolumesGcePersistentDiskPtr and PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput() PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput
	ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput
}

type poolerSpecTemplateSpecVolumesGcePersistentDiskPtrType PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs

func PoolerSpecTemplateSpecVolumesGcePersistentDiskPtr(v *PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs) PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrInput {
	return (*poolerSpecTemplateSpecVolumesGcePersistentDiskPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesGcePersistentDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesGcePersistentDisk)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesGcePersistentDiskPtrType) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput() PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesGcePersistentDiskPtrType) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput)
}

// gcePersistentDisk represents a GCE Disk resource that is attached to a
// kubelet's host machine and then exposed to the pod.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
type PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGcePersistentDisk)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskOutput() PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput() PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesGcePersistentDisk) *PoolerSpecTemplateSpecVolumesGcePersistentDisk {
		return &v
	}).(PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput)
}

// fsType is filesystem type of the volume that you want to mount.
// Tip: Ensure that the filesystem type is supported by the host operating system.
// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
// TODO: how do we prevent errors in the filesystem from compromising the machine
func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGcePersistentDisk) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// partition is the partition in the volume that you want to mount.
// If omitted, the default is to mount by volume name.
// Examples: For volume /dev/sda1, you specify the partition as "1".
// Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput) Partition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGcePersistentDisk) *int { return v.Partition }).(pulumi.IntPtrOutput)
}

// pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput) PdName() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGcePersistentDisk) string { return v.PdName }).(pulumi.StringOutput)
}

// readOnly here will force the ReadOnly setting in VolumeMounts.
// Defaults to false.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGcePersistentDisk) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

type PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesGcePersistentDisk)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput() PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput) ToPoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput) Elem() PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGcePersistentDisk) PoolerSpecTemplateSpecVolumesGcePersistentDisk {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesGcePersistentDisk
		return ret
	}).(PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput)
}

// fsType is filesystem type of the volume that you want to mount.
// Tip: Ensure that the filesystem type is supported by the host operating system.
// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
// TODO: how do we prevent errors in the filesystem from compromising the machine
func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGcePersistentDisk) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// partition is the partition in the volume that you want to mount.
// If omitted, the default is to mount by volume name.
// Examples: For volume /dev/sda1, you specify the partition as "1".
// Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput) Partition() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGcePersistentDisk) *int {
		if v == nil {
			return nil
		}
		return v.Partition
	}).(pulumi.IntPtrOutput)
}

// pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput) PdName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGcePersistentDisk) *string {
		if v == nil {
			return nil
		}
		return &v.PdName
	}).(pulumi.StringPtrOutput)
}

// readOnly here will force the ReadOnly setting in VolumeMounts.
// Defaults to false.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
func (o PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGcePersistentDisk) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// gitRepo represents a git repository at a particular revision.
// DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an
// EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
// into the Pod's container.
type PoolerSpecTemplateSpecVolumesGitRepo struct {
	// directory is the target directory name.
	// Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
	// git repository.  Otherwise, if specified, the volume will contain the git repository in
	// the subdirectory with the given name.
	Directory *string `pulumi:"directory"`
	// repository is the URL
	Repository string `pulumi:"repository"`
	// revision is the commit hash for the specified revision.
	Revision *string `pulumi:"revision"`
}

// PoolerSpecTemplateSpecVolumesGitRepoInput is an input type that accepts PoolerSpecTemplateSpecVolumesGitRepoArgs and PoolerSpecTemplateSpecVolumesGitRepoOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesGitRepoInput` via:
//
//	PoolerSpecTemplateSpecVolumesGitRepoArgs{...}
type PoolerSpecTemplateSpecVolumesGitRepoInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesGitRepoOutput() PoolerSpecTemplateSpecVolumesGitRepoOutput
	ToPoolerSpecTemplateSpecVolumesGitRepoOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesGitRepoOutput
}

// gitRepo represents a git repository at a particular revision.
// DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an
// EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
// into the Pod's container.
type PoolerSpecTemplateSpecVolumesGitRepoArgs struct {
	// directory is the target directory name.
	// Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
	// git repository.  Otherwise, if specified, the volume will contain the git repository in
	// the subdirectory with the given name.
	Directory pulumi.StringPtrInput `pulumi:"directory"`
	// repository is the URL
	Repository pulumi.StringInput `pulumi:"repository"`
	// revision is the commit hash for the specified revision.
	Revision pulumi.StringPtrInput `pulumi:"revision"`
}

func (PoolerSpecTemplateSpecVolumesGitRepoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGitRepo)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesGitRepoArgs) ToPoolerSpecTemplateSpecVolumesGitRepoOutput() PoolerSpecTemplateSpecVolumesGitRepoOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGitRepoOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesGitRepoArgs) ToPoolerSpecTemplateSpecVolumesGitRepoOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGitRepoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGitRepoOutput)
}

func (i PoolerSpecTemplateSpecVolumesGitRepoArgs) ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutput() PoolerSpecTemplateSpecVolumesGitRepoPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesGitRepoArgs) ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGitRepoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGitRepoOutput).ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesGitRepoPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesGitRepoArgs, PoolerSpecTemplateSpecVolumesGitRepoPtr and PoolerSpecTemplateSpecVolumesGitRepoPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesGitRepoPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesGitRepoArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesGitRepoPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutput() PoolerSpecTemplateSpecVolumesGitRepoPtrOutput
	ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesGitRepoPtrOutput
}

type poolerSpecTemplateSpecVolumesGitRepoPtrType PoolerSpecTemplateSpecVolumesGitRepoArgs

func PoolerSpecTemplateSpecVolumesGitRepoPtr(v *PoolerSpecTemplateSpecVolumesGitRepoArgs) PoolerSpecTemplateSpecVolumesGitRepoPtrInput {
	return (*poolerSpecTemplateSpecVolumesGitRepoPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesGitRepoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesGitRepo)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesGitRepoPtrType) ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutput() PoolerSpecTemplateSpecVolumesGitRepoPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesGitRepoPtrType) ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGitRepoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGitRepoPtrOutput)
}

// gitRepo represents a git repository at a particular revision.
// DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an
// EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
// into the Pod's container.
type PoolerSpecTemplateSpecVolumesGitRepoOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesGitRepoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGitRepo)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesGitRepoOutput) ToPoolerSpecTemplateSpecVolumesGitRepoOutput() PoolerSpecTemplateSpecVolumesGitRepoOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGitRepoOutput) ToPoolerSpecTemplateSpecVolumesGitRepoOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGitRepoOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGitRepoOutput) ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutput() PoolerSpecTemplateSpecVolumesGitRepoPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesGitRepoOutput) ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGitRepoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesGitRepo) *PoolerSpecTemplateSpecVolumesGitRepo {
		return &v
	}).(PoolerSpecTemplateSpecVolumesGitRepoPtrOutput)
}

// directory is the target directory name.
// Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
// git repository.  Otherwise, if specified, the volume will contain the git repository in
// the subdirectory with the given name.
func (o PoolerSpecTemplateSpecVolumesGitRepoOutput) Directory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGitRepo) *string { return v.Directory }).(pulumi.StringPtrOutput)
}

// repository is the URL
func (o PoolerSpecTemplateSpecVolumesGitRepoOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGitRepo) string { return v.Repository }).(pulumi.StringOutput)
}

// revision is the commit hash for the specified revision.
func (o PoolerSpecTemplateSpecVolumesGitRepoOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGitRepo) *string { return v.Revision }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesGitRepoPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesGitRepoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesGitRepo)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesGitRepoPtrOutput) ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutput() PoolerSpecTemplateSpecVolumesGitRepoPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGitRepoPtrOutput) ToPoolerSpecTemplateSpecVolumesGitRepoPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGitRepoPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGitRepoPtrOutput) Elem() PoolerSpecTemplateSpecVolumesGitRepoOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGitRepo) PoolerSpecTemplateSpecVolumesGitRepo {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesGitRepo
		return ret
	}).(PoolerSpecTemplateSpecVolumesGitRepoOutput)
}

// directory is the target directory name.
// Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
// git repository.  Otherwise, if specified, the volume will contain the git repository in
// the subdirectory with the given name.
func (o PoolerSpecTemplateSpecVolumesGitRepoPtrOutput) Directory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGitRepo) *string {
		if v == nil {
			return nil
		}
		return v.Directory
	}).(pulumi.StringPtrOutput)
}

// repository is the URL
func (o PoolerSpecTemplateSpecVolumesGitRepoPtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGitRepo) *string {
		if v == nil {
			return nil
		}
		return &v.Repository
	}).(pulumi.StringPtrOutput)
}

// revision is the commit hash for the specified revision.
func (o PoolerSpecTemplateSpecVolumesGitRepoPtrOutput) Revision() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGitRepo) *string {
		if v == nil {
			return nil
		}
		return v.Revision
	}).(pulumi.StringPtrOutput)
}

// glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md
type PoolerSpecTemplateSpecVolumesGlusterfs struct {
	// endpoints is the endpoint name that details Glusterfs topology.
	// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	Endpoints string `pulumi:"endpoints"`
	// path is the Glusterfs volume path.
	// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	Path string `pulumi:"path"`
	// readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
	// Defaults to false.
	// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	ReadOnly *bool `pulumi:"readOnly"`
}

// PoolerSpecTemplateSpecVolumesGlusterfsInput is an input type that accepts PoolerSpecTemplateSpecVolumesGlusterfsArgs and PoolerSpecTemplateSpecVolumesGlusterfsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesGlusterfsInput` via:
//
//	PoolerSpecTemplateSpecVolumesGlusterfsArgs{...}
type PoolerSpecTemplateSpecVolumesGlusterfsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesGlusterfsOutput() PoolerSpecTemplateSpecVolumesGlusterfsOutput
	ToPoolerSpecTemplateSpecVolumesGlusterfsOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesGlusterfsOutput
}

// glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md
type PoolerSpecTemplateSpecVolumesGlusterfsArgs struct {
	// endpoints is the endpoint name that details Glusterfs topology.
	// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	Endpoints pulumi.StringInput `pulumi:"endpoints"`
	// path is the Glusterfs volume path.
	// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	Path pulumi.StringInput `pulumi:"path"`
	// readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
	// Defaults to false.
	// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
}

func (PoolerSpecTemplateSpecVolumesGlusterfsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGlusterfs)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesGlusterfsArgs) ToPoolerSpecTemplateSpecVolumesGlusterfsOutput() PoolerSpecTemplateSpecVolumesGlusterfsOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGlusterfsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesGlusterfsArgs) ToPoolerSpecTemplateSpecVolumesGlusterfsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGlusterfsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGlusterfsOutput)
}

func (i PoolerSpecTemplateSpecVolumesGlusterfsArgs) ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutput() PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesGlusterfsArgs) ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGlusterfsOutput).ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesGlusterfsPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesGlusterfsArgs, PoolerSpecTemplateSpecVolumesGlusterfsPtr and PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesGlusterfsPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesGlusterfsArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesGlusterfsPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutput() PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput
	ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput
}

type poolerSpecTemplateSpecVolumesGlusterfsPtrType PoolerSpecTemplateSpecVolumesGlusterfsArgs

func PoolerSpecTemplateSpecVolumesGlusterfsPtr(v *PoolerSpecTemplateSpecVolumesGlusterfsArgs) PoolerSpecTemplateSpecVolumesGlusterfsPtrInput {
	return (*poolerSpecTemplateSpecVolumesGlusterfsPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesGlusterfsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesGlusterfs)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesGlusterfsPtrType) ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutput() PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesGlusterfsPtrType) ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput)
}

// glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md
type PoolerSpecTemplateSpecVolumesGlusterfsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesGlusterfsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGlusterfs)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesGlusterfsOutput) ToPoolerSpecTemplateSpecVolumesGlusterfsOutput() PoolerSpecTemplateSpecVolumesGlusterfsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGlusterfsOutput) ToPoolerSpecTemplateSpecVolumesGlusterfsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGlusterfsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGlusterfsOutput) ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutput() PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesGlusterfsOutput) ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesGlusterfs) *PoolerSpecTemplateSpecVolumesGlusterfs {
		return &v
	}).(PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput)
}

// endpoints is the endpoint name that details Glusterfs topology.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o PoolerSpecTemplateSpecVolumesGlusterfsOutput) Endpoints() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGlusterfs) string { return v.Endpoints }).(pulumi.StringOutput)
}

// path is the Glusterfs volume path.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o PoolerSpecTemplateSpecVolumesGlusterfsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGlusterfs) string { return v.Path }).(pulumi.StringOutput)
}

// readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
// Defaults to false.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o PoolerSpecTemplateSpecVolumesGlusterfsOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesGlusterfs) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

type PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesGlusterfs)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput) ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutput() PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput) ToPoolerSpecTemplateSpecVolumesGlusterfsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput) Elem() PoolerSpecTemplateSpecVolumesGlusterfsOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGlusterfs) PoolerSpecTemplateSpecVolumesGlusterfs {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesGlusterfs
		return ret
	}).(PoolerSpecTemplateSpecVolumesGlusterfsOutput)
}

// endpoints is the endpoint name that details Glusterfs topology.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput) Endpoints() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGlusterfs) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoints
	}).(pulumi.StringPtrOutput)
}

// path is the Glusterfs volume path.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGlusterfs) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
// Defaults to false.
// More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
func (o PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesGlusterfs) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// hostPath represents a pre-existing file or directory on the host
// machine that is directly exposed to the container. This is generally
// used for system agents or other privileged things that are allowed
// to see the host machine. Most containers will NOT need this.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
// ---
// TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not
// mount host directories as read/write.
type PoolerSpecTemplateSpecVolumesHostPath struct {
	// path of the directory on the host.
	// If the path is a symlink, it will follow the link to the real path.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	Path string `pulumi:"path"`
	// type for HostPath Volume
	// Defaults to ""
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	Type *string `pulumi:"type"`
}

// PoolerSpecTemplateSpecVolumesHostPathInput is an input type that accepts PoolerSpecTemplateSpecVolumesHostPathArgs and PoolerSpecTemplateSpecVolumesHostPathOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesHostPathInput` via:
//
//	PoolerSpecTemplateSpecVolumesHostPathArgs{...}
type PoolerSpecTemplateSpecVolumesHostPathInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesHostPathOutput() PoolerSpecTemplateSpecVolumesHostPathOutput
	ToPoolerSpecTemplateSpecVolumesHostPathOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesHostPathOutput
}

// hostPath represents a pre-existing file or directory on the host
// machine that is directly exposed to the container. This is generally
// used for system agents or other privileged things that are allowed
// to see the host machine. Most containers will NOT need this.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
// ---
// TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not
// mount host directories as read/write.
type PoolerSpecTemplateSpecVolumesHostPathArgs struct {
	// path of the directory on the host.
	// If the path is a symlink, it will follow the link to the real path.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	Path pulumi.StringInput `pulumi:"path"`
	// type for HostPath Volume
	// Defaults to ""
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (PoolerSpecTemplateSpecVolumesHostPathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesHostPath)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesHostPathArgs) ToPoolerSpecTemplateSpecVolumesHostPathOutput() PoolerSpecTemplateSpecVolumesHostPathOutput {
	return i.ToPoolerSpecTemplateSpecVolumesHostPathOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesHostPathArgs) ToPoolerSpecTemplateSpecVolumesHostPathOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesHostPathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesHostPathOutput)
}

func (i PoolerSpecTemplateSpecVolumesHostPathArgs) ToPoolerSpecTemplateSpecVolumesHostPathPtrOutput() PoolerSpecTemplateSpecVolumesHostPathPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesHostPathPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesHostPathArgs) ToPoolerSpecTemplateSpecVolumesHostPathPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesHostPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesHostPathOutput).ToPoolerSpecTemplateSpecVolumesHostPathPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesHostPathPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesHostPathArgs, PoolerSpecTemplateSpecVolumesHostPathPtr and PoolerSpecTemplateSpecVolumesHostPathPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesHostPathPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesHostPathArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesHostPathPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesHostPathPtrOutput() PoolerSpecTemplateSpecVolumesHostPathPtrOutput
	ToPoolerSpecTemplateSpecVolumesHostPathPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesHostPathPtrOutput
}

type poolerSpecTemplateSpecVolumesHostPathPtrType PoolerSpecTemplateSpecVolumesHostPathArgs

func PoolerSpecTemplateSpecVolumesHostPathPtr(v *PoolerSpecTemplateSpecVolumesHostPathArgs) PoolerSpecTemplateSpecVolumesHostPathPtrInput {
	return (*poolerSpecTemplateSpecVolumesHostPathPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesHostPathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesHostPath)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesHostPathPtrType) ToPoolerSpecTemplateSpecVolumesHostPathPtrOutput() PoolerSpecTemplateSpecVolumesHostPathPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesHostPathPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesHostPathPtrType) ToPoolerSpecTemplateSpecVolumesHostPathPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesHostPathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesHostPathPtrOutput)
}

// hostPath represents a pre-existing file or directory on the host
// machine that is directly exposed to the container. This is generally
// used for system agents or other privileged things that are allowed
// to see the host machine. Most containers will NOT need this.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
// ---
// TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not
// mount host directories as read/write.
type PoolerSpecTemplateSpecVolumesHostPathOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesHostPathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesHostPath)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesHostPathOutput) ToPoolerSpecTemplateSpecVolumesHostPathOutput() PoolerSpecTemplateSpecVolumesHostPathOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesHostPathOutput) ToPoolerSpecTemplateSpecVolumesHostPathOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesHostPathOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesHostPathOutput) ToPoolerSpecTemplateSpecVolumesHostPathPtrOutput() PoolerSpecTemplateSpecVolumesHostPathPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesHostPathPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesHostPathOutput) ToPoolerSpecTemplateSpecVolumesHostPathPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesHostPathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesHostPath) *PoolerSpecTemplateSpecVolumesHostPath {
		return &v
	}).(PoolerSpecTemplateSpecVolumesHostPathPtrOutput)
}

// path of the directory on the host.
// If the path is a symlink, it will follow the link to the real path.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
func (o PoolerSpecTemplateSpecVolumesHostPathOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesHostPath) string { return v.Path }).(pulumi.StringOutput)
}

// type for HostPath Volume
// Defaults to ""
// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
func (o PoolerSpecTemplateSpecVolumesHostPathOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesHostPath) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesHostPathPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesHostPathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesHostPath)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesHostPathPtrOutput) ToPoolerSpecTemplateSpecVolumesHostPathPtrOutput() PoolerSpecTemplateSpecVolumesHostPathPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesHostPathPtrOutput) ToPoolerSpecTemplateSpecVolumesHostPathPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesHostPathPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesHostPathPtrOutput) Elem() PoolerSpecTemplateSpecVolumesHostPathOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesHostPath) PoolerSpecTemplateSpecVolumesHostPath {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesHostPath
		return ret
	}).(PoolerSpecTemplateSpecVolumesHostPathOutput)
}

// path of the directory on the host.
// If the path is a symlink, it will follow the link to the real path.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
func (o PoolerSpecTemplateSpecVolumesHostPathPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesHostPath) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// type for HostPath Volume
// Defaults to ""
// More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
func (o PoolerSpecTemplateSpecVolumesHostPathPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesHostPath) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

// iscsi represents an ISCSI Disk resource that is attached to a
// kubelet's host machine and then exposed to the pod.
// More info: https://examples.k8s.io/volumes/iscsi/README.md
type PoolerSpecTemplateSpecVolumesIscsi struct {
	// chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
	ChapAuthDiscovery *bool `pulumi:"chapAuthDiscovery"`
	// chapAuthSession defines whether support iSCSI Session CHAP authentication
	ChapAuthSession *bool `pulumi:"chapAuthSession"`
	// fsType is the filesystem type of the volume that you want to mount.
	// Tip: Ensure that the filesystem type is supported by the host operating system.
	// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
	// TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType *string `pulumi:"fsType"`
	// initiatorName is the custom iSCSI Initiator Name.
	// If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
	// <target portal>:<volume name> will be created for the connection.
	InitiatorName *string `pulumi:"initiatorName"`
	// iqn is the target iSCSI Qualified Name.
	Iqn string `pulumi:"iqn"`
	// iscsiInterface is the interface Name that uses an iSCSI transport.
	// Defaults to 'default' (tcp).
	IscsiInterface *string `pulumi:"iscsiInterface"`
	// lun represents iSCSI Target Lun number.
	Lun int `pulumi:"lun"`
	// portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
	// is other than default (typically TCP ports 860 and 3260).
	Portals []string `pulumi:"portals"`
	// readOnly here will force the ReadOnly setting in VolumeMounts.
	// Defaults to false.
	ReadOnly *bool `pulumi:"readOnly"`
	// secretRef is the CHAP Secret for iSCSI target and initiator authentication
	SecretRef *PoolerSpecTemplateSpecVolumesIscsiSecretRef `pulumi:"secretRef"`
	// targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
	// is other than default (typically TCP ports 860 and 3260).
	TargetPortal string `pulumi:"targetPortal"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesIscsi
func (val *PoolerSpecTemplateSpecVolumesIscsi) Defaults() *PoolerSpecTemplateSpecVolumesIscsi {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.SecretRef = tmp.SecretRef.Defaults()

	return &tmp
}

// PoolerSpecTemplateSpecVolumesIscsiInput is an input type that accepts PoolerSpecTemplateSpecVolumesIscsiArgs and PoolerSpecTemplateSpecVolumesIscsiOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesIscsiInput` via:
//
//	PoolerSpecTemplateSpecVolumesIscsiArgs{...}
type PoolerSpecTemplateSpecVolumesIscsiInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesIscsiOutput() PoolerSpecTemplateSpecVolumesIscsiOutput
	ToPoolerSpecTemplateSpecVolumesIscsiOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesIscsiOutput
}

// iscsi represents an ISCSI Disk resource that is attached to a
// kubelet's host machine and then exposed to the pod.
// More info: https://examples.k8s.io/volumes/iscsi/README.md
type PoolerSpecTemplateSpecVolumesIscsiArgs struct {
	// chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
	ChapAuthDiscovery pulumi.BoolPtrInput `pulumi:"chapAuthDiscovery"`
	// chapAuthSession defines whether support iSCSI Session CHAP authentication
	ChapAuthSession pulumi.BoolPtrInput `pulumi:"chapAuthSession"`
	// fsType is the filesystem type of the volume that you want to mount.
	// Tip: Ensure that the filesystem type is supported by the host operating system.
	// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
	// TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// initiatorName is the custom iSCSI Initiator Name.
	// If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
	// <target portal>:<volume name> will be created for the connection.
	InitiatorName pulumi.StringPtrInput `pulumi:"initiatorName"`
	// iqn is the target iSCSI Qualified Name.
	Iqn pulumi.StringInput `pulumi:"iqn"`
	// iscsiInterface is the interface Name that uses an iSCSI transport.
	// Defaults to 'default' (tcp).
	IscsiInterface pulumi.StringPtrInput `pulumi:"iscsiInterface"`
	// lun represents iSCSI Target Lun number.
	Lun pulumi.IntInput `pulumi:"lun"`
	// portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
	// is other than default (typically TCP ports 860 and 3260).
	Portals pulumi.StringArrayInput `pulumi:"portals"`
	// readOnly here will force the ReadOnly setting in VolumeMounts.
	// Defaults to false.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// secretRef is the CHAP Secret for iSCSI target and initiator authentication
	SecretRef PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrInput `pulumi:"secretRef"`
	// targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
	// is other than default (typically TCP ports 860 and 3260).
	TargetPortal pulumi.StringInput `pulumi:"targetPortal"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesIscsiArgs
func (val *PoolerSpecTemplateSpecVolumesIscsiArgs) Defaults() *PoolerSpecTemplateSpecVolumesIscsiArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (PoolerSpecTemplateSpecVolumesIscsiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesIscsi)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesIscsiArgs) ToPoolerSpecTemplateSpecVolumesIscsiOutput() PoolerSpecTemplateSpecVolumesIscsiOutput {
	return i.ToPoolerSpecTemplateSpecVolumesIscsiOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesIscsiArgs) ToPoolerSpecTemplateSpecVolumesIscsiOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesIscsiOutput)
}

func (i PoolerSpecTemplateSpecVolumesIscsiArgs) ToPoolerSpecTemplateSpecVolumesIscsiPtrOutput() PoolerSpecTemplateSpecVolumesIscsiPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesIscsiPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesIscsiArgs) ToPoolerSpecTemplateSpecVolumesIscsiPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesIscsiOutput).ToPoolerSpecTemplateSpecVolumesIscsiPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesIscsiPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesIscsiArgs, PoolerSpecTemplateSpecVolumesIscsiPtr and PoolerSpecTemplateSpecVolumesIscsiPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesIscsiPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesIscsiArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesIscsiPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesIscsiPtrOutput() PoolerSpecTemplateSpecVolumesIscsiPtrOutput
	ToPoolerSpecTemplateSpecVolumesIscsiPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesIscsiPtrOutput
}

type poolerSpecTemplateSpecVolumesIscsiPtrType PoolerSpecTemplateSpecVolumesIscsiArgs

func PoolerSpecTemplateSpecVolumesIscsiPtr(v *PoolerSpecTemplateSpecVolumesIscsiArgs) PoolerSpecTemplateSpecVolumesIscsiPtrInput {
	return (*poolerSpecTemplateSpecVolumesIscsiPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesIscsiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesIscsi)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesIscsiPtrType) ToPoolerSpecTemplateSpecVolumesIscsiPtrOutput() PoolerSpecTemplateSpecVolumesIscsiPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesIscsiPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesIscsiPtrType) ToPoolerSpecTemplateSpecVolumesIscsiPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesIscsiPtrOutput)
}

// iscsi represents an ISCSI Disk resource that is attached to a
// kubelet's host machine and then exposed to the pod.
// More info: https://examples.k8s.io/volumes/iscsi/README.md
type PoolerSpecTemplateSpecVolumesIscsiOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesIscsiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesIscsi)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesIscsiOutput) ToPoolerSpecTemplateSpecVolumesIscsiOutput() PoolerSpecTemplateSpecVolumesIscsiOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesIscsiOutput) ToPoolerSpecTemplateSpecVolumesIscsiOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesIscsiOutput) ToPoolerSpecTemplateSpecVolumesIscsiPtrOutput() PoolerSpecTemplateSpecVolumesIscsiPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesIscsiPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesIscsiOutput) ToPoolerSpecTemplateSpecVolumesIscsiPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesIscsi) *PoolerSpecTemplateSpecVolumesIscsi {
		return &v
	}).(PoolerSpecTemplateSpecVolumesIscsiPtrOutput)
}

// chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
func (o PoolerSpecTemplateSpecVolumesIscsiOutput) ChapAuthDiscovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsi) *bool { return v.ChapAuthDiscovery }).(pulumi.BoolPtrOutput)
}

// chapAuthSession defines whether support iSCSI Session CHAP authentication
func (o PoolerSpecTemplateSpecVolumesIscsiOutput) ChapAuthSession() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsi) *bool { return v.ChapAuthSession }).(pulumi.BoolPtrOutput)
}

// fsType is the filesystem type of the volume that you want to mount.
// Tip: Ensure that the filesystem type is supported by the host operating system.
// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
// TODO: how do we prevent errors in the filesystem from compromising the machine
func (o PoolerSpecTemplateSpecVolumesIscsiOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsi) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// initiatorName is the custom iSCSI Initiator Name.
// If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
// <target portal>:<volume name> will be created for the connection.
func (o PoolerSpecTemplateSpecVolumesIscsiOutput) InitiatorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsi) *string { return v.InitiatorName }).(pulumi.StringPtrOutput)
}

// iqn is the target iSCSI Qualified Name.
func (o PoolerSpecTemplateSpecVolumesIscsiOutput) Iqn() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsi) string { return v.Iqn }).(pulumi.StringOutput)
}

// iscsiInterface is the interface Name that uses an iSCSI transport.
// Defaults to 'default' (tcp).
func (o PoolerSpecTemplateSpecVolumesIscsiOutput) IscsiInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsi) *string { return v.IscsiInterface }).(pulumi.StringPtrOutput)
}

// lun represents iSCSI Target Lun number.
func (o PoolerSpecTemplateSpecVolumesIscsiOutput) Lun() pulumi.IntOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsi) int { return v.Lun }).(pulumi.IntOutput)
}

// portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
// is other than default (typically TCP ports 860 and 3260).
func (o PoolerSpecTemplateSpecVolumesIscsiOutput) Portals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsi) []string { return v.Portals }).(pulumi.StringArrayOutput)
}

// readOnly here will force the ReadOnly setting in VolumeMounts.
// Defaults to false.
func (o PoolerSpecTemplateSpecVolumesIscsiOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsi) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// secretRef is the CHAP Secret for iSCSI target and initiator authentication
func (o PoolerSpecTemplateSpecVolumesIscsiOutput) SecretRef() PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsi) *PoolerSpecTemplateSpecVolumesIscsiSecretRef {
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput)
}

// targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
// is other than default (typically TCP ports 860 and 3260).
func (o PoolerSpecTemplateSpecVolumesIscsiOutput) TargetPortal() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsi) string { return v.TargetPortal }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecVolumesIscsiPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesIscsiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesIscsi)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) ToPoolerSpecTemplateSpecVolumesIscsiPtrOutput() PoolerSpecTemplateSpecVolumesIscsiPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) ToPoolerSpecTemplateSpecVolumesIscsiPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) Elem() PoolerSpecTemplateSpecVolumesIscsiOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsi) PoolerSpecTemplateSpecVolumesIscsi {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesIscsi
		return ret
	}).(PoolerSpecTemplateSpecVolumesIscsiOutput)
}

// chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) ChapAuthDiscovery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsi) *bool {
		if v == nil {
			return nil
		}
		return v.ChapAuthDiscovery
	}).(pulumi.BoolPtrOutput)
}

// chapAuthSession defines whether support iSCSI Session CHAP authentication
func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) ChapAuthSession() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsi) *bool {
		if v == nil {
			return nil
		}
		return v.ChapAuthSession
	}).(pulumi.BoolPtrOutput)
}

// fsType is the filesystem type of the volume that you want to mount.
// Tip: Ensure that the filesystem type is supported by the host operating system.
// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
// TODO: how do we prevent errors in the filesystem from compromising the machine
func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsi) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// initiatorName is the custom iSCSI Initiator Name.
// If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
// <target portal>:<volume name> will be created for the connection.
func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) InitiatorName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsi) *string {
		if v == nil {
			return nil
		}
		return v.InitiatorName
	}).(pulumi.StringPtrOutput)
}

// iqn is the target iSCSI Qualified Name.
func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) Iqn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsi) *string {
		if v == nil {
			return nil
		}
		return &v.Iqn
	}).(pulumi.StringPtrOutput)
}

// iscsiInterface is the interface Name that uses an iSCSI transport.
// Defaults to 'default' (tcp).
func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) IscsiInterface() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsi) *string {
		if v == nil {
			return nil
		}
		return v.IscsiInterface
	}).(pulumi.StringPtrOutput)
}

// lun represents iSCSI Target Lun number.
func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) Lun() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsi) *int {
		if v == nil {
			return nil
		}
		return &v.Lun
	}).(pulumi.IntPtrOutput)
}

// portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
// is other than default (typically TCP ports 860 and 3260).
func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) Portals() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsi) []string {
		if v == nil {
			return nil
		}
		return v.Portals
	}).(pulumi.StringArrayOutput)
}

// readOnly here will force the ReadOnly setting in VolumeMounts.
// Defaults to false.
func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsi) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// secretRef is the CHAP Secret for iSCSI target and initiator authentication
func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) SecretRef() PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsi) *PoolerSpecTemplateSpecVolumesIscsiSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput)
}

// targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
// is other than default (typically TCP ports 860 and 3260).
func (o PoolerSpecTemplateSpecVolumesIscsiPtrOutput) TargetPortal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsi) *string {
		if v == nil {
			return nil
		}
		return &v.TargetPortal
	}).(pulumi.StringPtrOutput)
}

// secretRef is the CHAP Secret for iSCSI target and initiator authentication
type PoolerSpecTemplateSpecVolumesIscsiSecretRef struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name *string `pulumi:"name"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesIscsiSecretRef
func (val *PoolerSpecTemplateSpecVolumesIscsiSecretRef) Defaults() *PoolerSpecTemplateSpecVolumesIscsiSecretRef {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		name_ := ""
		tmp.Name = &name_
	}
	return &tmp
}

// PoolerSpecTemplateSpecVolumesIscsiSecretRefInput is an input type that accepts PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs and PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesIscsiSecretRefInput` via:
//
//	PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs{...}
type PoolerSpecTemplateSpecVolumesIscsiSecretRefInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesIscsiSecretRefOutput() PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput
	ToPoolerSpecTemplateSpecVolumesIscsiSecretRefOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput
}

// secretRef is the CHAP Secret for iSCSI target and initiator authentication
type PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs
func (val *PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs) Defaults() *PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		tmp.Name = pulumi.StringPtr("")
	}
	return &tmp
}
func (PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesIscsiSecretRef)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefOutput() PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput {
	return i.ToPoolerSpecTemplateSpecVolumesIscsiSecretRefOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput)
}

func (i PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput).ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs, PoolerSpecTemplateSpecVolumesIscsiSecretRefPtr and PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput
	ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput
}

type poolerSpecTemplateSpecVolumesIscsiSecretRefPtrType PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs

func PoolerSpecTemplateSpecVolumesIscsiSecretRefPtr(v *PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs) PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrInput {
	return (*poolerSpecTemplateSpecVolumesIscsiSecretRefPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesIscsiSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesIscsiSecretRef)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesIscsiSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesIscsiSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput)
}

// secretRef is the CHAP Secret for iSCSI target and initiator authentication
type PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesIscsiSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefOutput() PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesIscsiSecretRef) *PoolerSpecTemplateSpecVolumesIscsiSecretRef {
		return &v
	}).(PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesIscsiSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesIscsiSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput) Elem() PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsiSecretRef) PoolerSpecTemplateSpecVolumesIscsiSecretRef {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesIscsiSecretRef
		return ret
	}).(PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesIscsiSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// nfs represents an NFS mount on the host that shares a pod's lifetime
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
type PoolerSpecTemplateSpecVolumesNfs struct {
	// path that is exported by the NFS server.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Path string `pulumi:"path"`
	// readOnly here will force the NFS export to be mounted with read-only permissions.
	// Defaults to false.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	ReadOnly *bool `pulumi:"readOnly"`
	// server is the hostname or IP address of the NFS server.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Server string `pulumi:"server"`
}

// PoolerSpecTemplateSpecVolumesNfsInput is an input type that accepts PoolerSpecTemplateSpecVolumesNfsArgs and PoolerSpecTemplateSpecVolumesNfsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesNfsInput` via:
//
//	PoolerSpecTemplateSpecVolumesNfsArgs{...}
type PoolerSpecTemplateSpecVolumesNfsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesNfsOutput() PoolerSpecTemplateSpecVolumesNfsOutput
	ToPoolerSpecTemplateSpecVolumesNfsOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesNfsOutput
}

// nfs represents an NFS mount on the host that shares a pod's lifetime
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
type PoolerSpecTemplateSpecVolumesNfsArgs struct {
	// path that is exported by the NFS server.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Path pulumi.StringInput `pulumi:"path"`
	// readOnly here will force the NFS export to be mounted with read-only permissions.
	// Defaults to false.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// server is the hostname or IP address of the NFS server.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
	Server pulumi.StringInput `pulumi:"server"`
}

func (PoolerSpecTemplateSpecVolumesNfsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesNfs)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesNfsArgs) ToPoolerSpecTemplateSpecVolumesNfsOutput() PoolerSpecTemplateSpecVolumesNfsOutput {
	return i.ToPoolerSpecTemplateSpecVolumesNfsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesNfsArgs) ToPoolerSpecTemplateSpecVolumesNfsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesNfsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesNfsOutput)
}

func (i PoolerSpecTemplateSpecVolumesNfsArgs) ToPoolerSpecTemplateSpecVolumesNfsPtrOutput() PoolerSpecTemplateSpecVolumesNfsPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesNfsPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesNfsArgs) ToPoolerSpecTemplateSpecVolumesNfsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesNfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesNfsOutput).ToPoolerSpecTemplateSpecVolumesNfsPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesNfsPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesNfsArgs, PoolerSpecTemplateSpecVolumesNfsPtr and PoolerSpecTemplateSpecVolumesNfsPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesNfsPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesNfsArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesNfsPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesNfsPtrOutput() PoolerSpecTemplateSpecVolumesNfsPtrOutput
	ToPoolerSpecTemplateSpecVolumesNfsPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesNfsPtrOutput
}

type poolerSpecTemplateSpecVolumesNfsPtrType PoolerSpecTemplateSpecVolumesNfsArgs

func PoolerSpecTemplateSpecVolumesNfsPtr(v *PoolerSpecTemplateSpecVolumesNfsArgs) PoolerSpecTemplateSpecVolumesNfsPtrInput {
	return (*poolerSpecTemplateSpecVolumesNfsPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesNfsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesNfs)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesNfsPtrType) ToPoolerSpecTemplateSpecVolumesNfsPtrOutput() PoolerSpecTemplateSpecVolumesNfsPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesNfsPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesNfsPtrType) ToPoolerSpecTemplateSpecVolumesNfsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesNfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesNfsPtrOutput)
}

// nfs represents an NFS mount on the host that shares a pod's lifetime
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
type PoolerSpecTemplateSpecVolumesNfsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesNfsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesNfs)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesNfsOutput) ToPoolerSpecTemplateSpecVolumesNfsOutput() PoolerSpecTemplateSpecVolumesNfsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesNfsOutput) ToPoolerSpecTemplateSpecVolumesNfsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesNfsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesNfsOutput) ToPoolerSpecTemplateSpecVolumesNfsPtrOutput() PoolerSpecTemplateSpecVolumesNfsPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesNfsPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesNfsOutput) ToPoolerSpecTemplateSpecVolumesNfsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesNfsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesNfs) *PoolerSpecTemplateSpecVolumesNfs {
		return &v
	}).(PoolerSpecTemplateSpecVolumesNfsPtrOutput)
}

// path that is exported by the NFS server.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o PoolerSpecTemplateSpecVolumesNfsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesNfs) string { return v.Path }).(pulumi.StringOutput)
}

// readOnly here will force the NFS export to be mounted with read-only permissions.
// Defaults to false.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o PoolerSpecTemplateSpecVolumesNfsOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesNfs) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// server is the hostname or IP address of the NFS server.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o PoolerSpecTemplateSpecVolumesNfsOutput) Server() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesNfs) string { return v.Server }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecVolumesNfsPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesNfsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesNfs)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesNfsPtrOutput) ToPoolerSpecTemplateSpecVolumesNfsPtrOutput() PoolerSpecTemplateSpecVolumesNfsPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesNfsPtrOutput) ToPoolerSpecTemplateSpecVolumesNfsPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesNfsPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesNfsPtrOutput) Elem() PoolerSpecTemplateSpecVolumesNfsOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesNfs) PoolerSpecTemplateSpecVolumesNfs {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesNfs
		return ret
	}).(PoolerSpecTemplateSpecVolumesNfsOutput)
}

// path that is exported by the NFS server.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o PoolerSpecTemplateSpecVolumesNfsPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesNfs) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// readOnly here will force the NFS export to be mounted with read-only permissions.
// Defaults to false.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o PoolerSpecTemplateSpecVolumesNfsPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesNfs) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// server is the hostname or IP address of the NFS server.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
func (o PoolerSpecTemplateSpecVolumesNfsPtrOutput) Server() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesNfs) *string {
		if v == nil {
			return nil
		}
		return &v.Server
	}).(pulumi.StringPtrOutput)
}

// persistentVolumeClaimVolumeSource represents a reference to a
// PersistentVolumeClaim in the same namespace.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type PoolerSpecTemplateSpecVolumesPersistentVolumeClaim struct {
	// claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
	ClaimName string `pulumi:"claimName"`
	// readOnly Will force the ReadOnly setting in VolumeMounts.
	// Default false.
	ReadOnly *bool `pulumi:"readOnly"`
}

// PoolerSpecTemplateSpecVolumesPersistentVolumeClaimInput is an input type that accepts PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs and PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesPersistentVolumeClaimInput` via:
//
//	PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs{...}
type PoolerSpecTemplateSpecVolumesPersistentVolumeClaimInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput
	ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput
}

// persistentVolumeClaimVolumeSource represents a reference to a
// PersistentVolumeClaim in the same namespace.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs struct {
	// claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
	// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
	ClaimName pulumi.StringInput `pulumi:"claimName"`
	// readOnly Will force the ReadOnly setting in VolumeMounts.
	// Default false.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
}

func (PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPersistentVolumeClaim)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput)
}

func (i PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput).ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs, PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtr and PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput
	ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput
}

type poolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrType PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs

func PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtr(v *PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrInput {
	return (*poolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesPersistentVolumeClaim)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrType) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrType) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput)
}

// persistentVolumeClaimVolumeSource represents a reference to a
// PersistentVolumeClaim in the same namespace.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
type PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPersistentVolumeClaim)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesPersistentVolumeClaim) *PoolerSpecTemplateSpecVolumesPersistentVolumeClaim {
		return &v
	}).(PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput)
}

// claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput) ClaimName() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPersistentVolumeClaim) string { return v.ClaimName }).(pulumi.StringOutput)
}

// readOnly Will force the ReadOnly setting in VolumeMounts.
// Default false.
func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPersistentVolumeClaim) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

type PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesPersistentVolumeClaim)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput) ToPoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput) Elem() PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPersistentVolumeClaim) PoolerSpecTemplateSpecVolumesPersistentVolumeClaim {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesPersistentVolumeClaim
		return ret
	}).(PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput)
}

// claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
// More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput) ClaimName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPersistentVolumeClaim) *string {
		if v == nil {
			return nil
		}
		return &v.ClaimName
	}).(pulumi.StringPtrOutput)
}

// readOnly Will force the ReadOnly setting in VolumeMounts.
// Default false.
func (o PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPersistentVolumeClaim) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
type PoolerSpecTemplateSpecVolumesPhotonPersistentDisk struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`
	// pdID is the ID that identifies Photon Controller persistent disk
	PdID string `pulumi:"pdID"`
}

// PoolerSpecTemplateSpecVolumesPhotonPersistentDiskInput is an input type that accepts PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs and PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesPhotonPersistentDiskInput` via:
//
//	PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs{...}
type PoolerSpecTemplateSpecVolumesPhotonPersistentDiskInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput
	ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput
}

// photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
type PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// pdID is the ID that identifies Photon Controller persistent disk
	PdID pulumi.StringInput `pulumi:"pdID"`
}

func (PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPhotonPersistentDisk)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput)
}

func (i PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput).ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs, PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtr and PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput
	ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput
}

type poolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrType PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs

func PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtr(v *PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrInput {
	return (*poolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesPhotonPersistentDisk)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrType) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrType) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput)
}

// photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
type PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPhotonPersistentDisk)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesPhotonPersistentDisk) *PoolerSpecTemplateSpecVolumesPhotonPersistentDisk {
		return &v
	}).(PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPhotonPersistentDisk) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// pdID is the ID that identifies Photon Controller persistent disk
func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput) PdID() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPhotonPersistentDisk) string { return v.PdID }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesPhotonPersistentDisk)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput) ToPoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput) Elem() PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPhotonPersistentDisk) PoolerSpecTemplateSpecVolumesPhotonPersistentDisk {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesPhotonPersistentDisk
		return ret
	}).(PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPhotonPersistentDisk) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// pdID is the ID that identifies Photon Controller persistent disk
func (o PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput) PdID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPhotonPersistentDisk) *string {
		if v == nil {
			return nil
		}
		return &v.PdID
	}).(pulumi.StringPtrOutput)
}

// portworxVolume represents a portworx volume attached and mounted on kubelets host machine
type PoolerSpecTemplateSpecVolumesPortworxVolume struct {
	// fSType represents the filesystem type to mount
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`
	// readOnly defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`
	// volumeID uniquely identifies a Portworx volume
	VolumeID string `pulumi:"volumeID"`
}

// PoolerSpecTemplateSpecVolumesPortworxVolumeInput is an input type that accepts PoolerSpecTemplateSpecVolumesPortworxVolumeArgs and PoolerSpecTemplateSpecVolumesPortworxVolumeOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesPortworxVolumeInput` via:
//
//	PoolerSpecTemplateSpecVolumesPortworxVolumeArgs{...}
type PoolerSpecTemplateSpecVolumesPortworxVolumeInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesPortworxVolumeOutput() PoolerSpecTemplateSpecVolumesPortworxVolumeOutput
	ToPoolerSpecTemplateSpecVolumesPortworxVolumeOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesPortworxVolumeOutput
}

// portworxVolume represents a portworx volume attached and mounted on kubelets host machine
type PoolerSpecTemplateSpecVolumesPortworxVolumeArgs struct {
	// fSType represents the filesystem type to mount
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// readOnly defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// volumeID uniquely identifies a Portworx volume
	VolumeID pulumi.StringInput `pulumi:"volumeID"`
}

func (PoolerSpecTemplateSpecVolumesPortworxVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPortworxVolume)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesPortworxVolumeArgs) ToPoolerSpecTemplateSpecVolumesPortworxVolumeOutput() PoolerSpecTemplateSpecVolumesPortworxVolumeOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPortworxVolumeOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesPortworxVolumeArgs) ToPoolerSpecTemplateSpecVolumesPortworxVolumeOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPortworxVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPortworxVolumeOutput)
}

func (i PoolerSpecTemplateSpecVolumesPortworxVolumeArgs) ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput() PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesPortworxVolumeArgs) ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPortworxVolumeOutput).ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesPortworxVolumePtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesPortworxVolumeArgs, PoolerSpecTemplateSpecVolumesPortworxVolumePtr and PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesPortworxVolumePtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesPortworxVolumeArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesPortworxVolumePtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput() PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput
	ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput
}

type poolerSpecTemplateSpecVolumesPortworxVolumePtrType PoolerSpecTemplateSpecVolumesPortworxVolumeArgs

func PoolerSpecTemplateSpecVolumesPortworxVolumePtr(v *PoolerSpecTemplateSpecVolumesPortworxVolumeArgs) PoolerSpecTemplateSpecVolumesPortworxVolumePtrInput {
	return (*poolerSpecTemplateSpecVolumesPortworxVolumePtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesPortworxVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesPortworxVolume)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesPortworxVolumePtrType) ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput() PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesPortworxVolumePtrType) ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput)
}

// portworxVolume represents a portworx volume attached and mounted on kubelets host machine
type PoolerSpecTemplateSpecVolumesPortworxVolumeOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesPortworxVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPortworxVolume)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesPortworxVolumeOutput) ToPoolerSpecTemplateSpecVolumesPortworxVolumeOutput() PoolerSpecTemplateSpecVolumesPortworxVolumeOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPortworxVolumeOutput) ToPoolerSpecTemplateSpecVolumesPortworxVolumeOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPortworxVolumeOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPortworxVolumeOutput) ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput() PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesPortworxVolumeOutput) ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesPortworxVolume) *PoolerSpecTemplateSpecVolumesPortworxVolume {
		return &v
	}).(PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput)
}

// fSType represents the filesystem type to mount
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesPortworxVolumeOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPortworxVolume) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// readOnly defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesPortworxVolumeOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPortworxVolume) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// volumeID uniquely identifies a Portworx volume
func (o PoolerSpecTemplateSpecVolumesPortworxVolumeOutput) VolumeID() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesPortworxVolume) string { return v.VolumeID }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesPortworxVolume)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput) ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput() PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput) ToPoolerSpecTemplateSpecVolumesPortworxVolumePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput) Elem() PoolerSpecTemplateSpecVolumesPortworxVolumeOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPortworxVolume) PoolerSpecTemplateSpecVolumesPortworxVolume {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesPortworxVolume
		return ret
	}).(PoolerSpecTemplateSpecVolumesPortworxVolumeOutput)
}

// fSType represents the filesystem type to mount
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPortworxVolume) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// readOnly defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPortworxVolume) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// volumeID uniquely identifies a Portworx volume
func (o PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput) VolumeID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesPortworxVolume) *string {
		if v == nil {
			return nil
		}
		return &v.VolumeID
	}).(pulumi.StringPtrOutput)
}

// projected items for all in one resources secrets, configmaps, and downward API
type PoolerSpecTemplateSpecVolumesProjected struct {
	// defaultMode are the mode bits used to set permissions on created files by default.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// Directories within the path are not affected by this setting.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode *int `pulumi:"defaultMode"`
	// sources is the list of volume projections
	Sources []PoolerSpecTemplateSpecVolumesProjectedSources `pulumi:"sources"`
}

// PoolerSpecTemplateSpecVolumesProjectedInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedArgs and PoolerSpecTemplateSpecVolumesProjectedOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedOutput() PoolerSpecTemplateSpecVolumesProjectedOutput
	ToPoolerSpecTemplateSpecVolumesProjectedOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedOutput
}

// projected items for all in one resources secrets, configmaps, and downward API
type PoolerSpecTemplateSpecVolumesProjectedArgs struct {
	// defaultMode are the mode bits used to set permissions on created files by default.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// Directories within the path are not affected by this setting.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode pulumi.IntPtrInput `pulumi:"defaultMode"`
	// sources is the list of volume projections
	Sources PoolerSpecTemplateSpecVolumesProjectedSourcesArrayInput `pulumi:"sources"`
}

func (PoolerSpecTemplateSpecVolumesProjectedArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjected)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedArgs) ToPoolerSpecTemplateSpecVolumesProjectedOutput() PoolerSpecTemplateSpecVolumesProjectedOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedArgs) ToPoolerSpecTemplateSpecVolumesProjectedOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedArgs) ToPoolerSpecTemplateSpecVolumesProjectedPtrOutput() PoolerSpecTemplateSpecVolumesProjectedPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedArgs) ToPoolerSpecTemplateSpecVolumesProjectedPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedOutput).ToPoolerSpecTemplateSpecVolumesProjectedPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedArgs, PoolerSpecTemplateSpecVolumesProjectedPtr and PoolerSpecTemplateSpecVolumesProjectedPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedPtrOutput() PoolerSpecTemplateSpecVolumesProjectedPtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedPtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedPtrType PoolerSpecTemplateSpecVolumesProjectedArgs

func PoolerSpecTemplateSpecVolumesProjectedPtr(v *PoolerSpecTemplateSpecVolumesProjectedArgs) PoolerSpecTemplateSpecVolumesProjectedPtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjected)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedPtrType) ToPoolerSpecTemplateSpecVolumesProjectedPtrOutput() PoolerSpecTemplateSpecVolumesProjectedPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedPtrType) ToPoolerSpecTemplateSpecVolumesProjectedPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedPtrOutput)
}

// projected items for all in one resources secrets, configmaps, and downward API
type PoolerSpecTemplateSpecVolumesProjectedOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjected)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedOutput) ToPoolerSpecTemplateSpecVolumesProjectedOutput() PoolerSpecTemplateSpecVolumesProjectedOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedOutput) ToPoolerSpecTemplateSpecVolumesProjectedOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedOutput) ToPoolerSpecTemplateSpecVolumesProjectedPtrOutput() PoolerSpecTemplateSpecVolumesProjectedPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedOutput) ToPoolerSpecTemplateSpecVolumesProjectedPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjected) *PoolerSpecTemplateSpecVolumesProjected {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedPtrOutput)
}

// defaultMode are the mode bits used to set permissions on created files by default.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// Directories within the path are not affected by this setting.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesProjectedOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjected) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

// sources is the list of volume projections
func (o PoolerSpecTemplateSpecVolumesProjectedOutput) Sources() PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjected) []PoolerSpecTemplateSpecVolumesProjectedSources {
		return v.Sources
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjected)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedPtrOutput() PoolerSpecTemplateSpecVolumesProjectedPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedPtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjected) PoolerSpecTemplateSpecVolumesProjected {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjected
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedOutput)
}

// defaultMode are the mode bits used to set permissions on created files by default.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// Directories within the path are not affected by this setting.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesProjectedPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjected) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

// sources is the list of volume projections
func (o PoolerSpecTemplateSpecVolumesProjectedPtrOutput) Sources() PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjected) []PoolerSpecTemplateSpecVolumesProjectedSources {
		if v == nil {
			return nil
		}
		return v.Sources
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput)
}

// Projection that may be projected along with other supported volume types
type PoolerSpecTemplateSpecVolumesProjectedSources struct {
	// ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
	// of ClusterTrustBundle objects in an auto-updating file.
	//
	// Alpha, gated by the ClusterTrustBundleProjection feature gate.
	//
	// ClusterTrustBundle objects can either be selected by name, or by the
	// combination of signer name and a label selector.
	//
	// Kubelet performs aggressive normalization of the PEM contents written
	// into the pod filesystem.  Esoteric PEM features such as inter-block
	// comments and block headers are stripped.  Certificates are deduplicated.
	// The ordering of certificates within the file is arbitrary, and Kubelet
	// may change the order over time.
	ClusterTrustBundle *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle `pulumi:"clusterTrustBundle"`
	// configMap information about the configMap data to project
	ConfigMap *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap `pulumi:"configMap"`
	// downwardAPI information about the downwardAPI data to project
	DownwardAPI *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApi `pulumi:"downwardAPI"`
	// secret information about the secret data to project
	Secret *PoolerSpecTemplateSpecVolumesProjectedSourcesSecret `pulumi:"secret"`
	// serviceAccountToken is information about the serviceAccountToken data to project
	ServiceAccountToken *PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken `pulumi:"serviceAccountToken"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesProjectedSources
func (val *PoolerSpecTemplateSpecVolumesProjectedSources) Defaults() *PoolerSpecTemplateSpecVolumesProjectedSources {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.ConfigMap = tmp.ConfigMap.Defaults()

	tmp.Secret = tmp.Secret.Defaults()

	return &tmp
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesOutput
}

// Projection that may be projected along with other supported volume types
type PoolerSpecTemplateSpecVolumesProjectedSourcesArgs struct {
	// ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
	// of ClusterTrustBundle objects in an auto-updating file.
	//
	// Alpha, gated by the ClusterTrustBundleProjection feature gate.
	//
	// ClusterTrustBundle objects can either be selected by name, or by the
	// combination of signer name and a label selector.
	//
	// Kubelet performs aggressive normalization of the PEM contents written
	// into the pod filesystem.  Esoteric PEM features such as inter-block
	// comments and block headers are stripped.  Certificates are deduplicated.
	// The ordering of certificates within the file is arbitrary, and Kubelet
	// may change the order over time.
	ClusterTrustBundle PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrInput `pulumi:"clusterTrustBundle"`
	// configMap information about the configMap data to project
	ConfigMap PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrInput `pulumi:"configMap"`
	// downwardAPI information about the downwardAPI data to project
	DownwardAPI PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrInput `pulumi:"downwardAPI"`
	// secret information about the secret data to project
	Secret PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrInput `pulumi:"secret"`
	// serviceAccountToken is information about the serviceAccountToken data to project
	ServiceAccountToken PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrInput `pulumi:"serviceAccountToken"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesProjectedSourcesArgs
func (val *PoolerSpecTemplateSpecVolumesProjectedSourcesArgs) Defaults() *PoolerSpecTemplateSpecVolumesProjectedSourcesArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (PoolerSpecTemplateSpecVolumesProjectedSourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSources)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesOutput)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesArray and PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesArray{ PoolerSpecTemplateSpecVolumesProjectedSourcesArgs{...} }
type PoolerSpecTemplateSpecVolumesProjectedSourcesArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesArray []PoolerSpecTemplateSpecVolumesProjectedSourcesInput

func (PoolerSpecTemplateSpecVolumesProjectedSourcesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSources)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput)
}

// Projection that may be projected along with other supported volume types
type PoolerSpecTemplateSpecVolumesProjectedSourcesOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSources)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesOutput {
	return o
}

// ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
// of ClusterTrustBundle objects in an auto-updating file.
//
// Alpha, gated by the ClusterTrustBundleProjection feature gate.
//
// ClusterTrustBundle objects can either be selected by name, or by the
// combination of signer name and a label selector.
//
// Kubelet performs aggressive normalization of the PEM contents written
// into the pod filesystem.  Esoteric PEM features such as inter-block
// comments and block headers are stripped.  Certificates are deduplicated.
// The ordering of certificates within the file is arbitrary, and Kubelet
// may change the order over time.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesOutput) ClusterTrustBundle() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSources) *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle {
		return v.ClusterTrustBundle
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput)
}

// configMap information about the configMap data to project
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesOutput) ConfigMap() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSources) *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap {
		return v.ConfigMap
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput)
}

// downwardAPI information about the downwardAPI data to project
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesOutput) DownwardAPI() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSources) *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApi {
		return v.DownwardAPI
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput)
}

// secret information about the secret data to project
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesOutput) Secret() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSources) *PoolerSpecTemplateSpecVolumesProjectedSourcesSecret {
		return v.Secret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput)
}

// serviceAccountToken is information about the serviceAccountToken data to project
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesOutput) ServiceAccountToken() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSources) *PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken {
		return v.ServiceAccountToken
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSources)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesProjectedSourcesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesProjectedSources {
		return vs[0].([]PoolerSpecTemplateSpecVolumesProjectedSources)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesOutput)
}

// ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
// of ClusterTrustBundle objects in an auto-updating file.
//
// Alpha, gated by the ClusterTrustBundleProjection feature gate.
//
// ClusterTrustBundle objects can either be selected by name, or by the
// combination of signer name and a label selector.
//
// Kubelet performs aggressive normalization of the PEM contents written
// into the pod filesystem.  Esoteric PEM features such as inter-block
// comments and block headers are stripped.  Certificates are deduplicated.
// The ordering of certificates within the file is arbitrary, and Kubelet
// may change the order over time.
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle struct {
	// Select all ClusterTrustBundles that match this label selector.  Only has
	// effect if signerName is set.  Mutually-exclusive with name.  If unset,
	// interpreted as "match nothing".  If set but empty, interpreted as "match
	// everything".
	LabelSelector *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector `pulumi:"labelSelector"`
	// Select a single ClusterTrustBundle by object name.  Mutually-exclusive
	// with signerName and labelSelector.
	Name *string `pulumi:"name"`
	// If true, don't block pod startup if the referenced ClusterTrustBundle(s)
	// aren't available.  If using name, then the named ClusterTrustBundle is
	// allowed not to exist.  If using signerName, then the combination of
	// signerName and labelSelector is allowed to match zero
	// ClusterTrustBundles.
	Optional *bool `pulumi:"optional"`
	// Relative path from the volume root to write the bundle.
	Path string `pulumi:"path"`
	// Select all ClusterTrustBundles that match this signer name.
	// Mutually-exclusive with name.  The contents of all selected
	// ClusterTrustBundles will be unified and deduplicated.
	SignerName *string `pulumi:"signerName"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput
}

// ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
// of ClusterTrustBundle objects in an auto-updating file.
//
// Alpha, gated by the ClusterTrustBundleProjection feature gate.
//
// ClusterTrustBundle objects can either be selected by name, or by the
// combination of signer name and a label selector.
//
// Kubelet performs aggressive normalization of the PEM contents written
// into the pod filesystem.  Esoteric PEM features such as inter-block
// comments and block headers are stripped.  Certificates are deduplicated.
// The ordering of certificates within the file is arbitrary, and Kubelet
// may change the order over time.
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs struct {
	// Select all ClusterTrustBundles that match this label selector.  Only has
	// effect if signerName is set.  Mutually-exclusive with name.  If unset,
	// interpreted as "match nothing".  If set but empty, interpreted as "match
	// everything".
	LabelSelector PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrInput `pulumi:"labelSelector"`
	// Select a single ClusterTrustBundle by object name.  Mutually-exclusive
	// with signerName and labelSelector.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// If true, don't block pod startup if the referenced ClusterTrustBundle(s)
	// aren't available.  If using name, then the named ClusterTrustBundle is
	// allowed not to exist.  If using signerName, then the combination of
	// signerName and labelSelector is allowed to match zero
	// ClusterTrustBundles.
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
	// Relative path from the volume root to write the bundle.
	Path pulumi.StringInput `pulumi:"path"`
	// Select all ClusterTrustBundles that match this signer name.
	// Mutually-exclusive with name.  The contents of all selected
	// ClusterTrustBundles will be unified and deduplicated.
	SignerName pulumi.StringPtrInput `pulumi:"signerName"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput).ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs, PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtr and PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrType PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs

func PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtr(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput)
}

// ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field
// of ClusterTrustBundle objects in an auto-updating file.
//
// Alpha, gated by the ClusterTrustBundleProjection feature gate.
//
// ClusterTrustBundle objects can either be selected by name, or by the
// combination of signer name and a label selector.
//
// Kubelet performs aggressive normalization of the PEM contents written
// into the pod filesystem.  Esoteric PEM features such as inter-block
// comments and block headers are stripped.  Certificates are deduplicated.
// The ordering of certificates within the file is arbitrary, and Kubelet
// may change the order over time.
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle) *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput)
}

// Select all ClusterTrustBundles that match this label selector.  Only has
// effect if signerName is set.  Mutually-exclusive with name.  If unset,
// interpreted as "match nothing".  If set but empty, interpreted as "match
// everything".
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput) LabelSelector() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle) *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector {
		return v.LabelSelector
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput)
}

// Select a single ClusterTrustBundle by object name.  Mutually-exclusive
// with signerName and labelSelector.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// If true, don't block pod startup if the referenced ClusterTrustBundle(s)
// aren't available.  If using name, then the named ClusterTrustBundle is
// allowed not to exist.  If using signerName, then the combination of
// signerName and labelSelector is allowed to match zero
// ClusterTrustBundles.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

// Relative path from the volume root to write the bundle.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle) string { return v.Path }).(pulumi.StringOutput)
}

// Select all ClusterTrustBundles that match this signer name.
// Mutually-exclusive with name.  The contents of all selected
// ClusterTrustBundles will be unified and deduplicated.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput) SignerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle) *string { return v.SignerName }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput)
}

// Select all ClusterTrustBundles that match this label selector.  Only has
// effect if signerName is set.  Mutually-exclusive with name.  If unset,
// interpreted as "match nothing".  If set but empty, interpreted as "match
// everything".
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput) LabelSelector() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle) *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector {
		if v == nil {
			return nil
		}
		return v.LabelSelector
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput)
}

// Select a single ClusterTrustBundle by object name.  Mutually-exclusive
// with signerName and labelSelector.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// If true, don't block pod startup if the referenced ClusterTrustBundle(s)
// aren't available.  If using name, then the named ClusterTrustBundle is
// allowed not to exist.  If using signerName, then the combination of
// signerName and labelSelector is allowed to match zero
// ClusterTrustBundles.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Relative path from the volume root to write the bundle.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// Select all ClusterTrustBundles that match this signer name.
// Mutually-exclusive with name.  The contents of all selected
// ClusterTrustBundles will be unified and deduplicated.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput) SignerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundle) *string {
		if v == nil {
			return nil
		}
		return v.SignerName
	}).(pulumi.StringPtrOutput)
}

// Select all ClusterTrustBundles that match this label selector.  Only has
// effect if signerName is set.  Mutually-exclusive with name.  If unset,
// interpreted as "match nothing".  If set but empty, interpreted as "match
// everything".
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions []PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `pulumi:"matchLabels"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput
}

// Select all ClusterTrustBundles that match this label selector.  Only has
// effect if signerName is set.  Mutually-exclusive with name.  If unset,
// interpreted as "match nothing".  If set but empty, interpreted as "match
// everything".
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs struct {
	// matchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayInput `pulumi:"matchExpressions"`
	// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels pulumi.StringMapInput `pulumi:"matchLabels"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput).ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs, PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtr and PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrType PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs

func PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtr(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput)
}

// Select all ClusterTrustBundles that match this label selector.  Only has
// effect if signerName is set.  Mutually-exclusive with name.  If unset,
// interpreted as "match nothing".  If set but empty, interpreted as "match
// everything".
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector) *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput) MatchExpressions() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector) []PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions {
		return v.MatchExpressions
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector) map[string]string {
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput)
}

// matchExpressions is a list of label selector requirements. The requirements are ANDed.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput) MatchExpressions() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector) []PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions {
		if v == nil {
			return nil
		}
		return v.MatchExpressions
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput) MatchLabels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.MatchLabels
	}).(pulumi.StringMapOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions struct {
	// key is the label key that the selector applies to.
	Key string `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values []string `pulumi:"values"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArgs struct {
	// key is the label key that the selector applies to.
	Key pulumi.StringInput `pulumi:"key"`
	// operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator pulumi.StringInput `pulumi:"operator"`
	// values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty. This array is replaced during a strategic
	// merge patch.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArray and PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArray{ PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArgs{...} }
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArray []PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsInput

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput)
}

// A label selector requirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput {
	return o
}

// key is the label key that the selector applies to.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions) string {
		return v.Key
	}).(pulumi.StringOutput)
}

// operator represents a key's relationship to a set of values.
// Valid operators are In, NotIn, Exists and DoesNotExist.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions) string {
		return v.Operator
	}).(pulumi.StringOutput)
}

// values is an array of string values. If the operator is In or NotIn,
// the values array must be non-empty. If the operator is Exists or DoesNotExist,
// the values array must be empty. This array is replaced during a strategic
// merge patch.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions) []string {
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions {
		return vs[0].([]PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressions)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput)
}

// matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
// map is equivalent to an element of matchExpressions, whose key field is "key", the
// operator is "In", and the values array contains only "value". The requirements are ANDed.
type PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchLabels struct {
}

// configMap information about the configMap data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap struct {
	// items if unspecified, each key-value pair in the Data field of the referenced
	// ConfigMap will be projected into the volume as a file whose name is the
	// key and content is the value. If specified, the listed keys will be
	// projected into the specified paths, and unlisted keys will not be
	// present. If a key is specified which is not present in the ConfigMap,
	// the volume setup will error unless it is marked optional. Paths must be
	// relative and may not contain the '..' path or start with '..'.
	Items []PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems `pulumi:"items"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name *string `pulumi:"name"`
	// optional specify whether the ConfigMap or its keys must be defined
	Optional *bool `pulumi:"optional"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap
func (val *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap) Defaults() *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		name_ := ""
		tmp.Name = &name_
	}
	return &tmp
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap and PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap{ "key": PoolerSpecTemplateSpecVolumesProjectedSourcesConfigArgs{...} }
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput
}

// configMap information about the configMap data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs struct {
	// items if unspecified, each key-value pair in the Data field of the referenced
	// ConfigMap will be projected into the volume as a file whose name is the
	// key and content is the value. If specified, the listed keys will be
	// projected into the specified paths, and unlisted keys will not be
	// present. If a key is specified which is not present in the ConfigMap,
	// the volume setup will error unless it is marked optional. Paths must be
	// relative and may not contain the '..' path or start with '..'.
	Items PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayInput `pulumi:"items"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// optional specify whether the ConfigMap or its keys must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs
func (val *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs) Defaults() *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		tmp.Name = pulumi.StringPtr("")
	}
	return &tmp
}
func (PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput).ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs, PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtr and PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrType PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs

func PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtr(v *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput)
}

// configMap information about the configMap data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap) *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput)
}

// items if unspecified, each key-value pair in the Data field of the referenced
// ConfigMap will be projected into the volume as a file whose name is the
// key and content is the value. If specified, the listed keys will be
// projected into the specified paths, and unlisted keys will not be
// present. If a key is specified which is not present in the ConfigMap,
// the volume setup will error unless it is marked optional. Paths must be
// relative and may not contain the '..' path or start with '..'.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput) Items() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap) []PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems {
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// optional specify whether the ConfigMap or its keys must be defined
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput)
}

// items if unspecified, each key-value pair in the Data field of the referenced
// ConfigMap will be projected into the volume as a file whose name is the
// key and content is the value. If specified, the listed keys will be
// projected into the specified paths, and unlisted keys will not be
// present. If a key is specified which is not present in the ConfigMap,
// the volume setup will error unless it is marked optional. Paths must be
// relative and may not contain the '..' path or start with '..'.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput) Items() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap) []PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// optional specify whether the ConfigMap or its keys must be defined
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMap) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems struct {
	// key is the key to project.
	Key string `pulumi:"key"`
	// mode is Optional: mode bits used to set permissions on this file.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// path is the relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path string `pulumi:"path"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArgs struct {
	// key is the key to project.
	Key pulumi.StringInput `pulumi:"key"`
	// mode is Optional: mode bits used to set permissions on this file.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// path is the relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path pulumi.StringInput `pulumi:"path"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArray and PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArray{ PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArgs{...} }
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArray []PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsInput

func (PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput)
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput {
	return o
}

// key is the key to project.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems) string { return v.Key }).(pulumi.StringOutput)
}

// mode is Optional: mode bits used to set permissions on this file.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// If not specified, the volume defaultMode will be used.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// path is the relative path of the file to map the key to.
// May not be an absolute path.
// May not contain the path element '..'.
// May not start with the string '..'.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems) string { return v.Path }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems {
		return vs[0].([]PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItems)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput)
}

// downwardAPI information about the downwardAPI data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApi struct {
	// Items is a list of DownwardAPIVolume file
	Items []PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItems `pulumi:"items"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutput
}

// downwardAPI information about the downwardAPI data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiArgs struct {
	// Items is a list of DownwardAPIVolume file
	Items PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayInput `pulumi:"items"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApi)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutput).ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiArgs, PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtr and PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrType PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiArgs

func PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtr(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiArgs) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApi)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput)
}

// downwardAPI information about the downwardAPI data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApi)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApi) *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApi {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput)
}

// Items is a list of DownwardAPIVolume file
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutput) Items() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApi) []PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItems {
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApi)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApi) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApi {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApi
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutput)
}

// Items is a list of DownwardAPIVolume file
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput) Items() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApi) []PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayOutput)
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItems struct {
	// Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.
	FieldRef *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef `pulumi:"fieldRef"`
	// Optional: mode bits used to set permissions on this file, must be an octal value
	// between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
	Path string `pulumi:"path"`
	// Selects a resource of the container: only resources limits and requests
	// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
	ResourceFieldRef *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef `pulumi:"resourceFieldRef"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutput
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArgs struct {
	// Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.
	FieldRef PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrInput `pulumi:"fieldRef"`
	// Optional: mode bits used to set permissions on this file, must be an octal value
	// between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
	Path pulumi.StringInput `pulumi:"path"`
	// Selects a resource of the container: only resources limits and requests
	// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
	ResourceFieldRef PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrInput `pulumi:"resourceFieldRef"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItems)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutput)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArray and PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArray{ PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArgs{...} }
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayOutput
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArray []PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsInput

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItems)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayOutput)
}

// DownwardAPIVolumeFile represents information to create the file containing the pod field
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItems)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutput {
	return o
}

// Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutput) FieldRef() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItems) *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef {
		return v.FieldRef
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput)
}

// Optional: mode bits used to set permissions on this file, must be an octal value
// between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// If not specified, the volume defaultMode will be used.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItems) string { return v.Path }).(pulumi.StringOutput)
}

// Selects a resource of the container: only resources limits and requests
// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutput) ResourceFieldRef() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItems) *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef {
		return v.ResourceFieldRef
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItems)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItems {
		return vs[0].([]PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItems)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutput)
}

// Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion *string `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath string `pulumi:"fieldPath"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutput
}

// Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefArgs struct {
	// Version of the schema the FieldPath is written in terms of, defaults to "v1".
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Path of the field to select in the specified API version.
	FieldPath pulumi.StringInput `pulumi:"fieldPath"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutput).ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefArgs, PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtr and PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrType PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefArgs

func PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtr(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefArgs) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput)
}

// Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef) *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef) *string {
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutput) FieldPath() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef) string {
		return v.FieldPath
	}).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutput)
}

// Version of the schema the FieldPath is written in terms of, defaults to "v1".
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ApiVersion
	}).(pulumi.StringPtrOutput)
}

// Path of the field to select in the specified API version.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput) FieldPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRef) *string {
		if v == nil {
			return nil
		}
		return &v.FieldPath
	}).(pulumi.StringPtrOutput)
}

// Selects a resource of the container: only resources limits and requests
// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef struct {
	// Container name: required for volumes, optional for env vars
	ContainerName *string `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor interface{} `pulumi:"divisor"`
	// Required: resource to select
	Resource string `pulumi:"resource"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutput
}

// Selects a resource of the container: only resources limits and requests
// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefArgs struct {
	// Container name: required for volumes, optional for env vars
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	// Specifies the output format of the exposed resources, defaults to "1"
	Divisor pulumi.Input `pulumi:"divisor"`
	// Required: resource to select
	Resource pulumi.StringInput `pulumi:"resource"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutput).ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefArgs, PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtr and PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrType PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefArgs

func PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtr(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefArgs) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput)
}

// Selects a resource of the container: only resources limits and requests
// (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef) *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput)
}

// Container name: required for volumes, optional for env vars
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef) *string {
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutput) Divisor() pulumi.AnyOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef) interface{} {
		return v.Divisor
	}).(pulumi.AnyOutput)
}

// Required: resource to select
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutput) Resource() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef) string {
		return v.Resource
	}).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef) PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutput)
}

// Container name: required for volumes, optional for env vars
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// Specifies the output format of the exposed resources, defaults to "1"
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput) Divisor() pulumi.AnyOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef) interface{} {
		if v == nil {
			return nil
		}
		return v.Divisor
	}).(pulumi.AnyOutput)
}

// Required: resource to select
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef) *string {
		if v == nil {
			return nil
		}
		return &v.Resource
	}).(pulumi.StringPtrOutput)
}

// secret information about the secret data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecret struct {
	// items if unspecified, each key-value pair in the Data field of the referenced
	// Secret will be projected into the volume as a file whose name is the
	// key and content is the value. If specified, the listed keys will be
	// projected into the specified paths, and unlisted keys will not be
	// present. If a key is specified which is not present in the Secret,
	// the volume setup will error unless it is marked optional. Paths must be
	// relative and may not contain the '..' path or start with '..'.
	Items []PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems `pulumi:"items"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name *string `pulumi:"name"`
	// optional field specify whether the Secret or its key must be defined
	Optional *bool `pulumi:"optional"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesProjectedSourcesSecret
func (val *PoolerSpecTemplateSpecVolumesProjectedSourcesSecret) Defaults() *PoolerSpecTemplateSpecVolumesProjectedSourcesSecret {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		name_ := ""
		tmp.Name = &name_
	}
	return &tmp
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesSecretInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesSecretInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput
}

// secret information about the secret data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs struct {
	// items if unspecified, each key-value pair in the Data field of the referenced
	// Secret will be projected into the volume as a file whose name is the
	// key and content is the value. If specified, the listed keys will be
	// projected into the specified paths, and unlisted keys will not be
	// present. If a key is specified which is not present in the Secret,
	// the volume setup will error unless it is marked optional. Paths must be
	// relative and may not contain the '..' path or start with '..'.
	Items PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayInput `pulumi:"items"`
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// optional field specify whether the Secret or its key must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs
func (val *PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs) Defaults() *PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		tmp.Name = pulumi.StringPtr("")
	}
	return &tmp
}
func (PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesSecret)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput).ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs, PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtr and PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrType PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs

func PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtr(v *PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesSecret)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput)
}

// secret information about the secret data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesSecret)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjectedSourcesSecret) *PoolerSpecTemplateSpecVolumesProjectedSourcesSecret {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput)
}

// items if unspecified, each key-value pair in the Data field of the referenced
// Secret will be projected into the volume as a file whose name is the
// key and content is the value. If specified, the listed keys will be
// projected into the specified paths, and unlisted keys will not be
// present. If a key is specified which is not present in the Secret,
// the volume setup will error unless it is marked optional. Paths must be
// relative and may not contain the '..' path or start with '..'.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput) Items() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesSecret) []PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems {
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesSecret) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// optional field specify whether the Secret or its key must be defined
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesSecret) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesSecret)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesSecret) PoolerSpecTemplateSpecVolumesProjectedSourcesSecret {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjectedSourcesSecret
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput)
}

// items if unspecified, each key-value pair in the Data field of the referenced
// Secret will be projected into the volume as a file whose name is the
// key and content is the value. If specified, the listed keys will be
// projected into the specified paths, and unlisted keys will not be
// present. If a key is specified which is not present in the Secret,
// the volume setup will error unless it is marked optional. Paths must be
// relative and may not contain the '..' path or start with '..'.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput) Items() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesSecret) []PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesSecret) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// optional field specify whether the Secret or its key must be defined
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesSecret) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems struct {
	// key is the key to project.
	Key string `pulumi:"key"`
	// mode is Optional: mode bits used to set permissions on this file.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// path is the relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path string `pulumi:"path"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArgs struct {
	// key is the key to project.
	Key pulumi.StringInput `pulumi:"key"`
	// mode is Optional: mode bits used to set permissions on this file.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// path is the relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path pulumi.StringInput `pulumi:"path"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArray and PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArray{ PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArgs{...} }
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArray []PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsInput

func (PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArray) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput)
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput {
	return o
}

// key is the key to project.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems) string { return v.Key }).(pulumi.StringOutput)
}

// mode is Optional: mode bits used to set permissions on this file.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// If not specified, the volume defaultMode will be used.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// path is the relative path of the file to map the key to.
// May not be an absolute path.
// May not contain the path element '..'.
// May not start with the string '..'.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems) string { return v.Path }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems {
		return vs[0].([]PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItems)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput)
}

// serviceAccountToken is information about the serviceAccountToken data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken struct {
	// audience is the intended audience of the token. A recipient of a token
	// must identify itself with an identifier specified in the audience of the
	// token, and otherwise should reject the token. The audience defaults to the
	// identifier of the apiserver.
	Audience *string `pulumi:"audience"`
	// expirationSeconds is the requested duration of validity of the service
	// account token. As the token approaches expiration, the kubelet volume
	// plugin will proactively rotate the service account token. The kubelet will
	// start trying to rotate the token if the token is older than 80 percent of
	// its time to live or if the token is older than 24 hours.Defaults to 1 hour
	// and must be at least 10 minutes.
	ExpirationSeconds *int `pulumi:"expirationSeconds"`
	// path is the path relative to the mount point of the file to project the
	// token into.
	Path string `pulumi:"path"`
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs and PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenInput` via:
//
//	PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs{...}
type PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput
}

// serviceAccountToken is information about the serviceAccountToken data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs struct {
	// audience is the intended audience of the token. A recipient of a token
	// must identify itself with an identifier specified in the audience of the
	// token, and otherwise should reject the token. The audience defaults to the
	// identifier of the apiserver.
	Audience pulumi.StringPtrInput `pulumi:"audience"`
	// expirationSeconds is the requested duration of validity of the service
	// account token. As the token approaches expiration, the kubelet volume
	// plugin will proactively rotate the service account token. The kubelet will
	// start trying to rotate the token if the token is older than 80 percent of
	// its time to live or if the token is older than 24 hours.Defaults to 1 hour
	// and must be at least 10 minutes.
	ExpirationSeconds pulumi.IntPtrInput `pulumi:"expirationSeconds"`
	// path is the path relative to the mount point of the file to project the
	// token into.
	Path pulumi.StringInput `pulumi:"path"`
}

func (PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput)
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput).ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs, PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtr and PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput
	ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput
}

type poolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrType PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs

func PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtr(v *PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrInput {
	return (*poolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrType) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput)
}

// serviceAccountToken is information about the serviceAccountToken data to project
type PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken) *PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken {
		return &v
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput)
}

// audience is the intended audience of the token. A recipient of a token
// must identify itself with an identifier specified in the audience of the
// token, and otherwise should reject the token. The audience defaults to the
// identifier of the apiserver.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken) *string { return v.Audience }).(pulumi.StringPtrOutput)
}

// expirationSeconds is the requested duration of validity of the service
// account token. As the token approaches expiration, the kubelet volume
// plugin will proactively rotate the service account token. The kubelet will
// start trying to rotate the token if the token is older than 80 percent of
// its time to live or if the token is older than 24 hours.Defaults to 1 hour
// and must be at least 10 minutes.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput) ExpirationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken) *int {
		return v.ExpirationSeconds
	}).(pulumi.IntPtrOutput)
}

// path is the path relative to the mount point of the file to project the
// token into.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken) string { return v.Path }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput) ToPoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput) Elem() PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken) PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken
		return ret
	}).(PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput)
}

// audience is the intended audience of the token. A recipient of a token
// must identify itself with an identifier specified in the audience of the
// token, and otherwise should reject the token. The audience defaults to the
// identifier of the apiserver.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput) Audience() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken) *string {
		if v == nil {
			return nil
		}
		return v.Audience
	}).(pulumi.StringPtrOutput)
}

// expirationSeconds is the requested duration of validity of the service
// account token. As the token approaches expiration, the kubelet volume
// plugin will proactively rotate the service account token. The kubelet will
// start trying to rotate the token if the token is older than 80 percent of
// its time to live or if the token is older than 24 hours.Defaults to 1 hour
// and must be at least 10 minutes.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput) ExpirationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken) *int {
		if v == nil {
			return nil
		}
		return v.ExpirationSeconds
	}).(pulumi.IntPtrOutput)
}

// path is the path relative to the mount point of the file to project the
// token into.
func (o PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountToken) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// quobyte represents a Quobyte mount on the host that shares a pod's lifetime
type PoolerSpecTemplateSpecVolumesQuobyte struct {
	// group to map volume access to
	// Default is no group
	Group *string `pulumi:"group"`
	// readOnly here will force the Quobyte volume to be mounted with read-only permissions.
	// Defaults to false.
	ReadOnly *bool `pulumi:"readOnly"`
	// registry represents a single or multiple Quobyte Registry services
	// specified as a string as host:port pair (multiple entries are separated with commas)
	// which acts as the central registry for volumes
	Registry string `pulumi:"registry"`
	// tenant owning the given Quobyte volume in the Backend
	// Used with dynamically provisioned Quobyte volumes, value is set by the plugin
	Tenant *string `pulumi:"tenant"`
	// user to map volume access to
	// Defaults to serivceaccount user
	User *string `pulumi:"user"`
	// volume is a string that references an already created Quobyte volume by name.
	Volume string `pulumi:"volume"`
}

// PoolerSpecTemplateSpecVolumesQuobyteInput is an input type that accepts PoolerSpecTemplateSpecVolumesQuobyteArgs and PoolerSpecTemplateSpecVolumesQuobyteOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesQuobyteInput` via:
//
//	PoolerSpecTemplateSpecVolumesQuobyteArgs{...}
type PoolerSpecTemplateSpecVolumesQuobyteInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesQuobyteOutput() PoolerSpecTemplateSpecVolumesQuobyteOutput
	ToPoolerSpecTemplateSpecVolumesQuobyteOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesQuobyteOutput
}

// quobyte represents a Quobyte mount on the host that shares a pod's lifetime
type PoolerSpecTemplateSpecVolumesQuobyteArgs struct {
	// group to map volume access to
	// Default is no group
	Group pulumi.StringPtrInput `pulumi:"group"`
	// readOnly here will force the Quobyte volume to be mounted with read-only permissions.
	// Defaults to false.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// registry represents a single or multiple Quobyte Registry services
	// specified as a string as host:port pair (multiple entries are separated with commas)
	// which acts as the central registry for volumes
	Registry pulumi.StringInput `pulumi:"registry"`
	// tenant owning the given Quobyte volume in the Backend
	// Used with dynamically provisioned Quobyte volumes, value is set by the plugin
	Tenant pulumi.StringPtrInput `pulumi:"tenant"`
	// user to map volume access to
	// Defaults to serivceaccount user
	User pulumi.StringPtrInput `pulumi:"user"`
	// volume is a string that references an already created Quobyte volume by name.
	Volume pulumi.StringInput `pulumi:"volume"`
}

func (PoolerSpecTemplateSpecVolumesQuobyteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesQuobyte)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesQuobyteArgs) ToPoolerSpecTemplateSpecVolumesQuobyteOutput() PoolerSpecTemplateSpecVolumesQuobyteOutput {
	return i.ToPoolerSpecTemplateSpecVolumesQuobyteOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesQuobyteArgs) ToPoolerSpecTemplateSpecVolumesQuobyteOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesQuobyteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesQuobyteOutput)
}

func (i PoolerSpecTemplateSpecVolumesQuobyteArgs) ToPoolerSpecTemplateSpecVolumesQuobytePtrOutput() PoolerSpecTemplateSpecVolumesQuobytePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesQuobytePtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesQuobyteArgs) ToPoolerSpecTemplateSpecVolumesQuobytePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesQuobytePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesQuobyteOutput).ToPoolerSpecTemplateSpecVolumesQuobytePtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesQuobytePtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesQuobyteArgs, PoolerSpecTemplateSpecVolumesQuobytePtr and PoolerSpecTemplateSpecVolumesQuobytePtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesQuobytePtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesQuobyteArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesQuobytePtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesQuobytePtrOutput() PoolerSpecTemplateSpecVolumesQuobytePtrOutput
	ToPoolerSpecTemplateSpecVolumesQuobytePtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesQuobytePtrOutput
}

type poolerSpecTemplateSpecVolumesQuobytePtrType PoolerSpecTemplateSpecVolumesQuobyteArgs

func PoolerSpecTemplateSpecVolumesQuobytePtr(v *PoolerSpecTemplateSpecVolumesQuobyteArgs) PoolerSpecTemplateSpecVolumesQuobytePtrInput {
	return (*poolerSpecTemplateSpecVolumesQuobytePtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesQuobytePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesQuobyte)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesQuobytePtrType) ToPoolerSpecTemplateSpecVolumesQuobytePtrOutput() PoolerSpecTemplateSpecVolumesQuobytePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesQuobytePtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesQuobytePtrType) ToPoolerSpecTemplateSpecVolumesQuobytePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesQuobytePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesQuobytePtrOutput)
}

// quobyte represents a Quobyte mount on the host that shares a pod's lifetime
type PoolerSpecTemplateSpecVolumesQuobyteOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesQuobyteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesQuobyte)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesQuobyteOutput) ToPoolerSpecTemplateSpecVolumesQuobyteOutput() PoolerSpecTemplateSpecVolumesQuobyteOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesQuobyteOutput) ToPoolerSpecTemplateSpecVolumesQuobyteOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesQuobyteOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesQuobyteOutput) ToPoolerSpecTemplateSpecVolumesQuobytePtrOutput() PoolerSpecTemplateSpecVolumesQuobytePtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesQuobytePtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesQuobyteOutput) ToPoolerSpecTemplateSpecVolumesQuobytePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesQuobytePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesQuobyte) *PoolerSpecTemplateSpecVolumesQuobyte {
		return &v
	}).(PoolerSpecTemplateSpecVolumesQuobytePtrOutput)
}

// group to map volume access to
// Default is no group
func (o PoolerSpecTemplateSpecVolumesQuobyteOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesQuobyte) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// readOnly here will force the Quobyte volume to be mounted with read-only permissions.
// Defaults to false.
func (o PoolerSpecTemplateSpecVolumesQuobyteOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesQuobyte) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// registry represents a single or multiple Quobyte Registry services
// specified as a string as host:port pair (multiple entries are separated with commas)
// which acts as the central registry for volumes
func (o PoolerSpecTemplateSpecVolumesQuobyteOutput) Registry() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesQuobyte) string { return v.Registry }).(pulumi.StringOutput)
}

// tenant owning the given Quobyte volume in the Backend
// Used with dynamically provisioned Quobyte volumes, value is set by the plugin
func (o PoolerSpecTemplateSpecVolumesQuobyteOutput) Tenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesQuobyte) *string { return v.Tenant }).(pulumi.StringPtrOutput)
}

// user to map volume access to
// Defaults to serivceaccount user
func (o PoolerSpecTemplateSpecVolumesQuobyteOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesQuobyte) *string { return v.User }).(pulumi.StringPtrOutput)
}

// volume is a string that references an already created Quobyte volume by name.
func (o PoolerSpecTemplateSpecVolumesQuobyteOutput) Volume() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesQuobyte) string { return v.Volume }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecVolumesQuobytePtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesQuobytePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesQuobyte)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesQuobytePtrOutput) ToPoolerSpecTemplateSpecVolumesQuobytePtrOutput() PoolerSpecTemplateSpecVolumesQuobytePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesQuobytePtrOutput) ToPoolerSpecTemplateSpecVolumesQuobytePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesQuobytePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesQuobytePtrOutput) Elem() PoolerSpecTemplateSpecVolumesQuobyteOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesQuobyte) PoolerSpecTemplateSpecVolumesQuobyte {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesQuobyte
		return ret
	}).(PoolerSpecTemplateSpecVolumesQuobyteOutput)
}

// group to map volume access to
// Default is no group
func (o PoolerSpecTemplateSpecVolumesQuobytePtrOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesQuobyte) *string {
		if v == nil {
			return nil
		}
		return v.Group
	}).(pulumi.StringPtrOutput)
}

// readOnly here will force the Quobyte volume to be mounted with read-only permissions.
// Defaults to false.
func (o PoolerSpecTemplateSpecVolumesQuobytePtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesQuobyte) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// registry represents a single or multiple Quobyte Registry services
// specified as a string as host:port pair (multiple entries are separated with commas)
// which acts as the central registry for volumes
func (o PoolerSpecTemplateSpecVolumesQuobytePtrOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesQuobyte) *string {
		if v == nil {
			return nil
		}
		return &v.Registry
	}).(pulumi.StringPtrOutput)
}

// tenant owning the given Quobyte volume in the Backend
// Used with dynamically provisioned Quobyte volumes, value is set by the plugin
func (o PoolerSpecTemplateSpecVolumesQuobytePtrOutput) Tenant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesQuobyte) *string {
		if v == nil {
			return nil
		}
		return v.Tenant
	}).(pulumi.StringPtrOutput)
}

// user to map volume access to
// Defaults to serivceaccount user
func (o PoolerSpecTemplateSpecVolumesQuobytePtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesQuobyte) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// volume is a string that references an already created Quobyte volume by name.
func (o PoolerSpecTemplateSpecVolumesQuobytePtrOutput) Volume() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesQuobyte) *string {
		if v == nil {
			return nil
		}
		return &v.Volume
	}).(pulumi.StringPtrOutput)
}

// rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
// More info: https://examples.k8s.io/volumes/rbd/README.md
type PoolerSpecTemplateSpecVolumesRbd struct {
	// fsType is the filesystem type of the volume that you want to mount.
	// Tip: Ensure that the filesystem type is supported by the host operating system.
	// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
	// TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType *string `pulumi:"fsType"`
	// image is the rados image name.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Image string `pulumi:"image"`
	// keyring is the path to key ring for RBDUser.
	// Default is /etc/ceph/keyring.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Keyring *string `pulumi:"keyring"`
	// monitors is a collection of Ceph monitors.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Monitors []string `pulumi:"monitors"`
	// pool is the rados pool name.
	// Default is rbd.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Pool *string `pulumi:"pool"`
	// readOnly here will force the ReadOnly setting in VolumeMounts.
	// Defaults to false.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	ReadOnly *bool `pulumi:"readOnly"`
	// secretRef is name of the authentication secret for RBDUser. If provided
	// overrides keyring.
	// Default is nil.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	SecretRef *PoolerSpecTemplateSpecVolumesRbdSecretRef `pulumi:"secretRef"`
	// user is the rados user name.
	// Default is admin.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	User *string `pulumi:"user"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesRbd
func (val *PoolerSpecTemplateSpecVolumesRbd) Defaults() *PoolerSpecTemplateSpecVolumesRbd {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.SecretRef = tmp.SecretRef.Defaults()

	return &tmp
}

// PoolerSpecTemplateSpecVolumesRbdInput is an input type that accepts PoolerSpecTemplateSpecVolumesRbdArgs and PoolerSpecTemplateSpecVolumesRbdOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesRbdInput` via:
//
//	PoolerSpecTemplateSpecVolumesRbdArgs{...}
type PoolerSpecTemplateSpecVolumesRbdInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesRbdOutput() PoolerSpecTemplateSpecVolumesRbdOutput
	ToPoolerSpecTemplateSpecVolumesRbdOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesRbdOutput
}

// rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
// More info: https://examples.k8s.io/volumes/rbd/README.md
type PoolerSpecTemplateSpecVolumesRbdArgs struct {
	// fsType is the filesystem type of the volume that you want to mount.
	// Tip: Ensure that the filesystem type is supported by the host operating system.
	// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
	// TODO: how do we prevent errors in the filesystem from compromising the machine
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// image is the rados image name.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Image pulumi.StringInput `pulumi:"image"`
	// keyring is the path to key ring for RBDUser.
	// Default is /etc/ceph/keyring.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Keyring pulumi.StringPtrInput `pulumi:"keyring"`
	// monitors is a collection of Ceph monitors.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Monitors pulumi.StringArrayInput `pulumi:"monitors"`
	// pool is the rados pool name.
	// Default is rbd.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	Pool pulumi.StringPtrInput `pulumi:"pool"`
	// readOnly here will force the ReadOnly setting in VolumeMounts.
	// Defaults to false.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// secretRef is name of the authentication secret for RBDUser. If provided
	// overrides keyring.
	// Default is nil.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	SecretRef PoolerSpecTemplateSpecVolumesRbdSecretRefPtrInput `pulumi:"secretRef"`
	// user is the rados user name.
	// Default is admin.
	// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
	User pulumi.StringPtrInput `pulumi:"user"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesRbdArgs
func (val *PoolerSpecTemplateSpecVolumesRbdArgs) Defaults() *PoolerSpecTemplateSpecVolumesRbdArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (PoolerSpecTemplateSpecVolumesRbdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesRbd)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesRbdArgs) ToPoolerSpecTemplateSpecVolumesRbdOutput() PoolerSpecTemplateSpecVolumesRbdOutput {
	return i.ToPoolerSpecTemplateSpecVolumesRbdOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesRbdArgs) ToPoolerSpecTemplateSpecVolumesRbdOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesRbdOutput)
}

func (i PoolerSpecTemplateSpecVolumesRbdArgs) ToPoolerSpecTemplateSpecVolumesRbdPtrOutput() PoolerSpecTemplateSpecVolumesRbdPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesRbdPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesRbdArgs) ToPoolerSpecTemplateSpecVolumesRbdPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesRbdOutput).ToPoolerSpecTemplateSpecVolumesRbdPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesRbdPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesRbdArgs, PoolerSpecTemplateSpecVolumesRbdPtr and PoolerSpecTemplateSpecVolumesRbdPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesRbdPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesRbdArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesRbdPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesRbdPtrOutput() PoolerSpecTemplateSpecVolumesRbdPtrOutput
	ToPoolerSpecTemplateSpecVolumesRbdPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesRbdPtrOutput
}

type poolerSpecTemplateSpecVolumesRbdPtrType PoolerSpecTemplateSpecVolumesRbdArgs

func PoolerSpecTemplateSpecVolumesRbdPtr(v *PoolerSpecTemplateSpecVolumesRbdArgs) PoolerSpecTemplateSpecVolumesRbdPtrInput {
	return (*poolerSpecTemplateSpecVolumesRbdPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesRbdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesRbd)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesRbdPtrType) ToPoolerSpecTemplateSpecVolumesRbdPtrOutput() PoolerSpecTemplateSpecVolumesRbdPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesRbdPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesRbdPtrType) ToPoolerSpecTemplateSpecVolumesRbdPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesRbdPtrOutput)
}

// rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.
// More info: https://examples.k8s.io/volumes/rbd/README.md
type PoolerSpecTemplateSpecVolumesRbdOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesRbdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesRbd)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesRbdOutput) ToPoolerSpecTemplateSpecVolumesRbdOutput() PoolerSpecTemplateSpecVolumesRbdOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesRbdOutput) ToPoolerSpecTemplateSpecVolumesRbdOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesRbdOutput) ToPoolerSpecTemplateSpecVolumesRbdPtrOutput() PoolerSpecTemplateSpecVolumesRbdPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesRbdPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesRbdOutput) ToPoolerSpecTemplateSpecVolumesRbdPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesRbd) *PoolerSpecTemplateSpecVolumesRbd {
		return &v
	}).(PoolerSpecTemplateSpecVolumesRbdPtrOutput)
}

// fsType is the filesystem type of the volume that you want to mount.
// Tip: Ensure that the filesystem type is supported by the host operating system.
// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
// TODO: how do we prevent errors in the filesystem from compromising the machine
func (o PoolerSpecTemplateSpecVolumesRbdOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbd) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// image is the rados image name.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbd) string { return v.Image }).(pulumi.StringOutput)
}

// keyring is the path to key ring for RBDUser.
// Default is /etc/ceph/keyring.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdOutput) Keyring() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbd) *string { return v.Keyring }).(pulumi.StringPtrOutput)
}

// monitors is a collection of Ceph monitors.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdOutput) Monitors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbd) []string { return v.Monitors }).(pulumi.StringArrayOutput)
}

// pool is the rados pool name.
// Default is rbd.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdOutput) Pool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbd) *string { return v.Pool }).(pulumi.StringPtrOutput)
}

// readOnly here will force the ReadOnly setting in VolumeMounts.
// Defaults to false.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbd) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// secretRef is name of the authentication secret for RBDUser. If provided
// overrides keyring.
// Default is nil.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdOutput) SecretRef() PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbd) *PoolerSpecTemplateSpecVolumesRbdSecretRef {
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput)
}

// user is the rados user name.
// Default is admin.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbd) *string { return v.User }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesRbdPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesRbdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesRbd)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesRbdPtrOutput) ToPoolerSpecTemplateSpecVolumesRbdPtrOutput() PoolerSpecTemplateSpecVolumesRbdPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesRbdPtrOutput) ToPoolerSpecTemplateSpecVolumesRbdPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesRbdPtrOutput) Elem() PoolerSpecTemplateSpecVolumesRbdOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbd) PoolerSpecTemplateSpecVolumesRbd {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesRbd
		return ret
	}).(PoolerSpecTemplateSpecVolumesRbdOutput)
}

// fsType is the filesystem type of the volume that you want to mount.
// Tip: Ensure that the filesystem type is supported by the host operating system.
// Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
// TODO: how do we prevent errors in the filesystem from compromising the machine
func (o PoolerSpecTemplateSpecVolumesRbdPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbd) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// image is the rados image name.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbd) *string {
		if v == nil {
			return nil
		}
		return &v.Image
	}).(pulumi.StringPtrOutput)
}

// keyring is the path to key ring for RBDUser.
// Default is /etc/ceph/keyring.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdPtrOutput) Keyring() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbd) *string {
		if v == nil {
			return nil
		}
		return v.Keyring
	}).(pulumi.StringPtrOutput)
}

// monitors is a collection of Ceph monitors.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdPtrOutput) Monitors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbd) []string {
		if v == nil {
			return nil
		}
		return v.Monitors
	}).(pulumi.StringArrayOutput)
}

// pool is the rados pool name.
// Default is rbd.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdPtrOutput) Pool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbd) *string {
		if v == nil {
			return nil
		}
		return v.Pool
	}).(pulumi.StringPtrOutput)
}

// readOnly here will force the ReadOnly setting in VolumeMounts.
// Defaults to false.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbd) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// secretRef is name of the authentication secret for RBDUser. If provided
// overrides keyring.
// Default is nil.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdPtrOutput) SecretRef() PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbd) *PoolerSpecTemplateSpecVolumesRbdSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput)
}

// user is the rados user name.
// Default is admin.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
func (o PoolerSpecTemplateSpecVolumesRbdPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbd) *string {
		if v == nil {
			return nil
		}
		return v.User
	}).(pulumi.StringPtrOutput)
}

// secretRef is name of the authentication secret for RBDUser. If provided
// overrides keyring.
// Default is nil.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
type PoolerSpecTemplateSpecVolumesRbdSecretRef struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name *string `pulumi:"name"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesRbdSecretRef
func (val *PoolerSpecTemplateSpecVolumesRbdSecretRef) Defaults() *PoolerSpecTemplateSpecVolumesRbdSecretRef {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		name_ := ""
		tmp.Name = &name_
	}
	return &tmp
}

// PoolerSpecTemplateSpecVolumesRbdSecretRefInput is an input type that accepts PoolerSpecTemplateSpecVolumesRbdSecretRefArgs and PoolerSpecTemplateSpecVolumesRbdSecretRefOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesRbdSecretRefInput` via:
//
//	PoolerSpecTemplateSpecVolumesRbdSecretRefArgs{...}
type PoolerSpecTemplateSpecVolumesRbdSecretRefInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesRbdSecretRefOutput() PoolerSpecTemplateSpecVolumesRbdSecretRefOutput
	ToPoolerSpecTemplateSpecVolumesRbdSecretRefOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesRbdSecretRefOutput
}

// secretRef is name of the authentication secret for RBDUser. If provided
// overrides keyring.
// Default is nil.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
type PoolerSpecTemplateSpecVolumesRbdSecretRefArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesRbdSecretRefArgs
func (val *PoolerSpecTemplateSpecVolumesRbdSecretRefArgs) Defaults() *PoolerSpecTemplateSpecVolumesRbdSecretRefArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		tmp.Name = pulumi.StringPtr("")
	}
	return &tmp
}
func (PoolerSpecTemplateSpecVolumesRbdSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesRbdSecretRef)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesRbdSecretRefArgs) ToPoolerSpecTemplateSpecVolumesRbdSecretRefOutput() PoolerSpecTemplateSpecVolumesRbdSecretRefOutput {
	return i.ToPoolerSpecTemplateSpecVolumesRbdSecretRefOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesRbdSecretRefArgs) ToPoolerSpecTemplateSpecVolumesRbdSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesRbdSecretRefOutput)
}

func (i PoolerSpecTemplateSpecVolumesRbdSecretRefArgs) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesRbdSecretRefArgs) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesRbdSecretRefOutput).ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesRbdSecretRefPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesRbdSecretRefArgs, PoolerSpecTemplateSpecVolumesRbdSecretRefPtr and PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesRbdSecretRefPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesRbdSecretRefArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesRbdSecretRefPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput
	ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput
}

type poolerSpecTemplateSpecVolumesRbdSecretRefPtrType PoolerSpecTemplateSpecVolumesRbdSecretRefArgs

func PoolerSpecTemplateSpecVolumesRbdSecretRefPtr(v *PoolerSpecTemplateSpecVolumesRbdSecretRefArgs) PoolerSpecTemplateSpecVolumesRbdSecretRefPtrInput {
	return (*poolerSpecTemplateSpecVolumesRbdSecretRefPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesRbdSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesRbdSecretRef)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesRbdSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesRbdSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput)
}

// secretRef is name of the authentication secret for RBDUser. If provided
// overrides keyring.
// Default is nil.
// More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
type PoolerSpecTemplateSpecVolumesRbdSecretRefOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesRbdSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesRbdSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesRbdSecretRefOutput) ToPoolerSpecTemplateSpecVolumesRbdSecretRefOutput() PoolerSpecTemplateSpecVolumesRbdSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesRbdSecretRefOutput) ToPoolerSpecTemplateSpecVolumesRbdSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesRbdSecretRefOutput) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesRbdSecretRefOutput) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesRbdSecretRef) *PoolerSpecTemplateSpecVolumesRbdSecretRef {
		return &v
	}).(PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o PoolerSpecTemplateSpecVolumesRbdSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesRbdSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesRbdSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput) Elem() PoolerSpecTemplateSpecVolumesRbdSecretRefOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbdSecretRef) PoolerSpecTemplateSpecVolumesRbdSecretRef {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesRbdSecretRef
		return ret
	}).(PoolerSpecTemplateSpecVolumesRbdSecretRefOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesRbdSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
type PoolerSpecTemplateSpecVolumesScaleIo struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs".
	// Default is "xfs".
	FsType *string `pulumi:"fsType"`
	// gateway is the host address of the ScaleIO API Gateway.
	Gateway string `pulumi:"gateway"`
	// protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
	ProtectionDomain *string `pulumi:"protectionDomain"`
	// readOnly Defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`
	// secretRef references to the secret for ScaleIO user and other
	// sensitive information. If this is not provided, Login operation will fail.
	SecretRef PoolerSpecTemplateSpecVolumesScaleIoSecretRef `pulumi:"secretRef"`
	// sslEnabled Flag enable/disable SSL communication with Gateway, default false
	SslEnabled *bool `pulumi:"sslEnabled"`
	// storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
	// Default is ThinProvisioned.
	StorageMode *string `pulumi:"storageMode"`
	// storagePool is the ScaleIO Storage Pool associated with the protection domain.
	StoragePool *string `pulumi:"storagePool"`
	// system is the name of the storage system as configured in ScaleIO.
	System string `pulumi:"system"`
	// volumeName is the name of a volume already created in the ScaleIO system
	// that is associated with this volume source.
	VolumeName *string `pulumi:"volumeName"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesScaleIo
func (val *PoolerSpecTemplateSpecVolumesScaleIo) Defaults() *PoolerSpecTemplateSpecVolumesScaleIo {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.SecretRef = *tmp.SecretRef.Defaults()

	return &tmp
}

// PoolerSpecTemplateSpecVolumesScaleIoInput is an input type that accepts PoolerSpecTemplateSpecVolumesScaleIoArgs and PoolerSpecTemplateSpecVolumesScaleIoOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesScaleIoInput` via:
//
//	PoolerSpecTemplateSpecVolumesScaleIoArgs{...}
type PoolerSpecTemplateSpecVolumesScaleIoInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesScaleIoOutput() PoolerSpecTemplateSpecVolumesScaleIoOutput
	ToPoolerSpecTemplateSpecVolumesScaleIoOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesScaleIoOutput
}

// scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
type PoolerSpecTemplateSpecVolumesScaleIoArgs struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs".
	// Default is "xfs".
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// gateway is the host address of the ScaleIO API Gateway.
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
	ProtectionDomain pulumi.StringPtrInput `pulumi:"protectionDomain"`
	// readOnly Defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// secretRef references to the secret for ScaleIO user and other
	// sensitive information. If this is not provided, Login operation will fail.
	SecretRef PoolerSpecTemplateSpecVolumesScaleIoSecretRefInput `pulumi:"secretRef"`
	// sslEnabled Flag enable/disable SSL communication with Gateway, default false
	SslEnabled pulumi.BoolPtrInput `pulumi:"sslEnabled"`
	// storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
	// Default is ThinProvisioned.
	StorageMode pulumi.StringPtrInput `pulumi:"storageMode"`
	// storagePool is the ScaleIO Storage Pool associated with the protection domain.
	StoragePool pulumi.StringPtrInput `pulumi:"storagePool"`
	// system is the name of the storage system as configured in ScaleIO.
	System pulumi.StringInput `pulumi:"system"`
	// volumeName is the name of a volume already created in the ScaleIO system
	// that is associated with this volume source.
	VolumeName pulumi.StringPtrInput `pulumi:"volumeName"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesScaleIoArgs
func (val *PoolerSpecTemplateSpecVolumesScaleIoArgs) Defaults() *PoolerSpecTemplateSpecVolumesScaleIoArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (PoolerSpecTemplateSpecVolumesScaleIoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesScaleIo)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesScaleIoArgs) ToPoolerSpecTemplateSpecVolumesScaleIoOutput() PoolerSpecTemplateSpecVolumesScaleIoOutput {
	return i.ToPoolerSpecTemplateSpecVolumesScaleIoOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesScaleIoArgs) ToPoolerSpecTemplateSpecVolumesScaleIoOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesScaleIoOutput)
}

func (i PoolerSpecTemplateSpecVolumesScaleIoArgs) ToPoolerSpecTemplateSpecVolumesScaleIoPtrOutput() PoolerSpecTemplateSpecVolumesScaleIoPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesScaleIoPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesScaleIoArgs) ToPoolerSpecTemplateSpecVolumesScaleIoPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesScaleIoOutput).ToPoolerSpecTemplateSpecVolumesScaleIoPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesScaleIoPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesScaleIoArgs, PoolerSpecTemplateSpecVolumesScaleIoPtr and PoolerSpecTemplateSpecVolumesScaleIoPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesScaleIoPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesScaleIoArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesScaleIoPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesScaleIoPtrOutput() PoolerSpecTemplateSpecVolumesScaleIoPtrOutput
	ToPoolerSpecTemplateSpecVolumesScaleIoPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesScaleIoPtrOutput
}

type poolerSpecTemplateSpecVolumesScaleIoPtrType PoolerSpecTemplateSpecVolumesScaleIoArgs

func PoolerSpecTemplateSpecVolumesScaleIoPtr(v *PoolerSpecTemplateSpecVolumesScaleIoArgs) PoolerSpecTemplateSpecVolumesScaleIoPtrInput {
	return (*poolerSpecTemplateSpecVolumesScaleIoPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesScaleIoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesScaleIo)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesScaleIoPtrType) ToPoolerSpecTemplateSpecVolumesScaleIoPtrOutput() PoolerSpecTemplateSpecVolumesScaleIoPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesScaleIoPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesScaleIoPtrType) ToPoolerSpecTemplateSpecVolumesScaleIoPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesScaleIoPtrOutput)
}

// scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
type PoolerSpecTemplateSpecVolumesScaleIoOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesScaleIoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesScaleIo)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesScaleIoOutput) ToPoolerSpecTemplateSpecVolumesScaleIoOutput() PoolerSpecTemplateSpecVolumesScaleIoOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesScaleIoOutput) ToPoolerSpecTemplateSpecVolumesScaleIoOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIoOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesScaleIoOutput) ToPoolerSpecTemplateSpecVolumesScaleIoPtrOutput() PoolerSpecTemplateSpecVolumesScaleIoPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesScaleIoPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesScaleIoOutput) ToPoolerSpecTemplateSpecVolumesScaleIoPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesScaleIo) *PoolerSpecTemplateSpecVolumesScaleIo {
		return &v
	}).(PoolerSpecTemplateSpecVolumesScaleIoPtrOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs".
// Default is "xfs".
func (o PoolerSpecTemplateSpecVolumesScaleIoOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIo) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// gateway is the host address of the ScaleIO API Gateway.
func (o PoolerSpecTemplateSpecVolumesScaleIoOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIo) string { return v.Gateway }).(pulumi.StringOutput)
}

// protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
func (o PoolerSpecTemplateSpecVolumesScaleIoOutput) ProtectionDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIo) *string { return v.ProtectionDomain }).(pulumi.StringPtrOutput)
}

// readOnly Defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesScaleIoOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIo) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// secretRef references to the secret for ScaleIO user and other
// sensitive information. If this is not provided, Login operation will fail.
func (o PoolerSpecTemplateSpecVolumesScaleIoOutput) SecretRef() PoolerSpecTemplateSpecVolumesScaleIoSecretRefOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIo) PoolerSpecTemplateSpecVolumesScaleIoSecretRef {
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesScaleIoSecretRefOutput)
}

// sslEnabled Flag enable/disable SSL communication with Gateway, default false
func (o PoolerSpecTemplateSpecVolumesScaleIoOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIo) *bool { return v.SslEnabled }).(pulumi.BoolPtrOutput)
}

// storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
// Default is ThinProvisioned.
func (o PoolerSpecTemplateSpecVolumesScaleIoOutput) StorageMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIo) *string { return v.StorageMode }).(pulumi.StringPtrOutput)
}

// storagePool is the ScaleIO Storage Pool associated with the protection domain.
func (o PoolerSpecTemplateSpecVolumesScaleIoOutput) StoragePool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIo) *string { return v.StoragePool }).(pulumi.StringPtrOutput)
}

// system is the name of the storage system as configured in ScaleIO.
func (o PoolerSpecTemplateSpecVolumesScaleIoOutput) System() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIo) string { return v.System }).(pulumi.StringOutput)
}

// volumeName is the name of a volume already created in the ScaleIO system
// that is associated with this volume source.
func (o PoolerSpecTemplateSpecVolumesScaleIoOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIo) *string { return v.VolumeName }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesScaleIoPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesScaleIoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesScaleIo)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesScaleIoPtrOutput) ToPoolerSpecTemplateSpecVolumesScaleIoPtrOutput() PoolerSpecTemplateSpecVolumesScaleIoPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesScaleIoPtrOutput) ToPoolerSpecTemplateSpecVolumesScaleIoPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIoPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesScaleIoPtrOutput) Elem() PoolerSpecTemplateSpecVolumesScaleIoOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIo) PoolerSpecTemplateSpecVolumesScaleIo {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesScaleIo
		return ret
	}).(PoolerSpecTemplateSpecVolumesScaleIoOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs".
// Default is "xfs".
func (o PoolerSpecTemplateSpecVolumesScaleIoPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIo) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// gateway is the host address of the ScaleIO API Gateway.
func (o PoolerSpecTemplateSpecVolumesScaleIoPtrOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIo) *string {
		if v == nil {
			return nil
		}
		return &v.Gateway
	}).(pulumi.StringPtrOutput)
}

// protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
func (o PoolerSpecTemplateSpecVolumesScaleIoPtrOutput) ProtectionDomain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIo) *string {
		if v == nil {
			return nil
		}
		return v.ProtectionDomain
	}).(pulumi.StringPtrOutput)
}

// readOnly Defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesScaleIoPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIo) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// secretRef references to the secret for ScaleIO user and other
// sensitive information. If this is not provided, Login operation will fail.
func (o PoolerSpecTemplateSpecVolumesScaleIoPtrOutput) SecretRef() PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIo) *PoolerSpecTemplateSpecVolumesScaleIoSecretRef {
		if v == nil {
			return nil
		}
		return &v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput)
}

// sslEnabled Flag enable/disable SSL communication with Gateway, default false
func (o PoolerSpecTemplateSpecVolumesScaleIoPtrOutput) SslEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIo) *bool {
		if v == nil {
			return nil
		}
		return v.SslEnabled
	}).(pulumi.BoolPtrOutput)
}

// storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
// Default is ThinProvisioned.
func (o PoolerSpecTemplateSpecVolumesScaleIoPtrOutput) StorageMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIo) *string {
		if v == nil {
			return nil
		}
		return v.StorageMode
	}).(pulumi.StringPtrOutput)
}

// storagePool is the ScaleIO Storage Pool associated with the protection domain.
func (o PoolerSpecTemplateSpecVolumesScaleIoPtrOutput) StoragePool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIo) *string {
		if v == nil {
			return nil
		}
		return v.StoragePool
	}).(pulumi.StringPtrOutput)
}

// system is the name of the storage system as configured in ScaleIO.
func (o PoolerSpecTemplateSpecVolumesScaleIoPtrOutput) System() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIo) *string {
		if v == nil {
			return nil
		}
		return &v.System
	}).(pulumi.StringPtrOutput)
}

// volumeName is the name of a volume already created in the ScaleIO system
// that is associated with this volume source.
func (o PoolerSpecTemplateSpecVolumesScaleIoPtrOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIo) *string {
		if v == nil {
			return nil
		}
		return v.VolumeName
	}).(pulumi.StringPtrOutput)
}

// secretRef references to the secret for ScaleIO user and other
// sensitive information. If this is not provided, Login operation will fail.
type PoolerSpecTemplateSpecVolumesScaleIoSecretRef struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name *string `pulumi:"name"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesScaleIoSecretRef
func (val *PoolerSpecTemplateSpecVolumesScaleIoSecretRef) Defaults() *PoolerSpecTemplateSpecVolumesScaleIoSecretRef {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		name_ := ""
		tmp.Name = &name_
	}
	return &tmp
}

// PoolerSpecTemplateSpecVolumesScaleIoSecretRefInput is an input type that accepts PoolerSpecTemplateSpecVolumesScaleIoSecretRefArgs and PoolerSpecTemplateSpecVolumesScaleIoSecretRefOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesScaleIoSecretRefInput` via:
//
//	PoolerSpecTemplateSpecVolumesScaleIoSecretRefArgs{...}
type PoolerSpecTemplateSpecVolumesScaleIoSecretRefInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesScaleIoSecretRefOutput() PoolerSpecTemplateSpecVolumesScaleIoSecretRefOutput
	ToPoolerSpecTemplateSpecVolumesScaleIoSecretRefOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesScaleIoSecretRefOutput
}

// secretRef references to the secret for ScaleIO user and other
// sensitive information. If this is not provided, Login operation will fail.
type PoolerSpecTemplateSpecVolumesScaleIoSecretRefArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesScaleIoSecretRefArgs
func (val *PoolerSpecTemplateSpecVolumesScaleIoSecretRefArgs) Defaults() *PoolerSpecTemplateSpecVolumesScaleIoSecretRefArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		tmp.Name = pulumi.StringPtr("")
	}
	return &tmp
}
func (PoolerSpecTemplateSpecVolumesScaleIoSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesScaleIoSecretRef)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesScaleIoSecretRefArgs) ToPoolerSpecTemplateSpecVolumesScaleIoSecretRefOutput() PoolerSpecTemplateSpecVolumesScaleIoSecretRefOutput {
	return i.ToPoolerSpecTemplateSpecVolumesScaleIoSecretRefOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesScaleIoSecretRefArgs) ToPoolerSpecTemplateSpecVolumesScaleIoSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIoSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesScaleIoSecretRefOutput)
}

func (i PoolerSpecTemplateSpecVolumesScaleIoSecretRefArgs) ToPoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesScaleIoSecretRefArgs) ToPoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesScaleIoSecretRefOutput).ToPoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesScaleIoSecretRefArgs, PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtr and PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesScaleIoSecretRefArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput
	ToPoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput
}

type poolerSpecTemplateSpecVolumesScaleIoSecretRefPtrType PoolerSpecTemplateSpecVolumesScaleIoSecretRefArgs

func PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtr(v *PoolerSpecTemplateSpecVolumesScaleIoSecretRefArgs) PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrInput {
	return (*poolerSpecTemplateSpecVolumesScaleIoSecretRefPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesScaleIoSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesScaleIoSecretRef)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesScaleIoSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesScaleIoSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput)
}

// secretRef references to the secret for ScaleIO user and other
// sensitive information. If this is not provided, Login operation will fail.
type PoolerSpecTemplateSpecVolumesScaleIoSecretRefOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesScaleIoSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesScaleIoSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesScaleIoSecretRefOutput) ToPoolerSpecTemplateSpecVolumesScaleIoSecretRefOutput() PoolerSpecTemplateSpecVolumesScaleIoSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesScaleIoSecretRefOutput) ToPoolerSpecTemplateSpecVolumesScaleIoSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIoSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesScaleIoSecretRefOutput) ToPoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesScaleIoSecretRefOutput) ToPoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesScaleIoSecretRef) *PoolerSpecTemplateSpecVolumesScaleIoSecretRef {
		return &v
	}).(PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o PoolerSpecTemplateSpecVolumesScaleIoSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesScaleIoSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesScaleIoSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput) Elem() PoolerSpecTemplateSpecVolumesScaleIoSecretRefOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIoSecretRef) PoolerSpecTemplateSpecVolumesScaleIoSecretRef {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesScaleIoSecretRef
		return ret
	}).(PoolerSpecTemplateSpecVolumesScaleIoSecretRefOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesScaleIoSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// secret represents a secret that should populate this volume.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
type PoolerSpecTemplateSpecVolumesSecret struct {
	// defaultMode is Optional: mode bits used to set permissions on created files by default.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values
	// for mode bits. Defaults to 0644.
	// Directories within the path are not affected by this setting.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode *int `pulumi:"defaultMode"`
	// items If unspecified, each key-value pair in the Data field of the referenced
	// Secret will be projected into the volume as a file whose name is the
	// key and content is the value. If specified, the listed keys will be
	// projected into the specified paths, and unlisted keys will not be
	// present. If a key is specified which is not present in the Secret,
	// the volume setup will error unless it is marked optional. Paths must be
	// relative and may not contain the '..' path or start with '..'.
	Items []PoolerSpecTemplateSpecVolumesSecretItems `pulumi:"items"`
	// optional field specify whether the Secret or its keys must be defined
	Optional *bool `pulumi:"optional"`
	// secretName is the name of the secret in the pod's namespace to use.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
	SecretName *string `pulumi:"secretName"`
}

// PoolerSpecTemplateSpecVolumesSecretInput is an input type that accepts PoolerSpecTemplateSpecVolumesSecretArgs and PoolerSpecTemplateSpecVolumesSecretOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesSecretInput` via:
//
//	PoolerSpecTemplateSpecVolumesSecretArgs{...}
type PoolerSpecTemplateSpecVolumesSecretInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesSecretOutput() PoolerSpecTemplateSpecVolumesSecretOutput
	ToPoolerSpecTemplateSpecVolumesSecretOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesSecretOutput
}

// secret represents a secret that should populate this volume.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
type PoolerSpecTemplateSpecVolumesSecretArgs struct {
	// defaultMode is Optional: mode bits used to set permissions on created files by default.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values
	// for mode bits. Defaults to 0644.
	// Directories within the path are not affected by this setting.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	DefaultMode pulumi.IntPtrInput `pulumi:"defaultMode"`
	// items If unspecified, each key-value pair in the Data field of the referenced
	// Secret will be projected into the volume as a file whose name is the
	// key and content is the value. If specified, the listed keys will be
	// projected into the specified paths, and unlisted keys will not be
	// present. If a key is specified which is not present in the Secret,
	// the volume setup will error unless it is marked optional. Paths must be
	// relative and may not contain the '..' path or start with '..'.
	Items PoolerSpecTemplateSpecVolumesSecretItemsArrayInput `pulumi:"items"`
	// optional field specify whether the Secret or its keys must be defined
	Optional pulumi.BoolPtrInput `pulumi:"optional"`
	// secretName is the name of the secret in the pod's namespace to use.
	// More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
	SecretName pulumi.StringPtrInput `pulumi:"secretName"`
}

func (PoolerSpecTemplateSpecVolumesSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesSecret)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesSecretArgs) ToPoolerSpecTemplateSpecVolumesSecretOutput() PoolerSpecTemplateSpecVolumesSecretOutput {
	return i.ToPoolerSpecTemplateSpecVolumesSecretOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesSecretArgs) ToPoolerSpecTemplateSpecVolumesSecretOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesSecretOutput)
}

func (i PoolerSpecTemplateSpecVolumesSecretArgs) ToPoolerSpecTemplateSpecVolumesSecretPtrOutput() PoolerSpecTemplateSpecVolumesSecretPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesSecretPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesSecretArgs) ToPoolerSpecTemplateSpecVolumesSecretPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesSecretOutput).ToPoolerSpecTemplateSpecVolumesSecretPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesSecretPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesSecretArgs, PoolerSpecTemplateSpecVolumesSecretPtr and PoolerSpecTemplateSpecVolumesSecretPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesSecretPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesSecretArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesSecretPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesSecretPtrOutput() PoolerSpecTemplateSpecVolumesSecretPtrOutput
	ToPoolerSpecTemplateSpecVolumesSecretPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesSecretPtrOutput
}

type poolerSpecTemplateSpecVolumesSecretPtrType PoolerSpecTemplateSpecVolumesSecretArgs

func PoolerSpecTemplateSpecVolumesSecretPtr(v *PoolerSpecTemplateSpecVolumesSecretArgs) PoolerSpecTemplateSpecVolumesSecretPtrInput {
	return (*poolerSpecTemplateSpecVolumesSecretPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesSecretPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesSecret)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesSecretPtrType) ToPoolerSpecTemplateSpecVolumesSecretPtrOutput() PoolerSpecTemplateSpecVolumesSecretPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesSecretPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesSecretPtrType) ToPoolerSpecTemplateSpecVolumesSecretPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesSecretPtrOutput)
}

// secret represents a secret that should populate this volume.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
type PoolerSpecTemplateSpecVolumesSecretOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesSecret)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesSecretOutput) ToPoolerSpecTemplateSpecVolumesSecretOutput() PoolerSpecTemplateSpecVolumesSecretOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesSecretOutput) ToPoolerSpecTemplateSpecVolumesSecretOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesSecretOutput) ToPoolerSpecTemplateSpecVolumesSecretPtrOutput() PoolerSpecTemplateSpecVolumesSecretPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesSecretPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesSecretOutput) ToPoolerSpecTemplateSpecVolumesSecretPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesSecret) *PoolerSpecTemplateSpecVolumesSecret {
		return &v
	}).(PoolerSpecTemplateSpecVolumesSecretPtrOutput)
}

// defaultMode is Optional: mode bits used to set permissions on created files by default.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values
// for mode bits. Defaults to 0644.
// Directories within the path are not affected by this setting.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesSecretOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesSecret) *int { return v.DefaultMode }).(pulumi.IntPtrOutput)
}

// items If unspecified, each key-value pair in the Data field of the referenced
// Secret will be projected into the volume as a file whose name is the
// key and content is the value. If specified, the listed keys will be
// projected into the specified paths, and unlisted keys will not be
// present. If a key is specified which is not present in the Secret,
// the volume setup will error unless it is marked optional. Paths must be
// relative and may not contain the '..' path or start with '..'.
func (o PoolerSpecTemplateSpecVolumesSecretOutput) Items() PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesSecret) []PoolerSpecTemplateSpecVolumesSecretItems { return v.Items }).(PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput)
}

// optional field specify whether the Secret or its keys must be defined
func (o PoolerSpecTemplateSpecVolumesSecretOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesSecret) *bool { return v.Optional }).(pulumi.BoolPtrOutput)
}

// secretName is the name of the secret in the pod's namespace to use.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
func (o PoolerSpecTemplateSpecVolumesSecretOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesSecret) *string { return v.SecretName }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesSecretPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesSecretPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesSecret)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesSecretPtrOutput) ToPoolerSpecTemplateSpecVolumesSecretPtrOutput() PoolerSpecTemplateSpecVolumesSecretPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesSecretPtrOutput) ToPoolerSpecTemplateSpecVolumesSecretPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesSecretPtrOutput) Elem() PoolerSpecTemplateSpecVolumesSecretOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesSecret) PoolerSpecTemplateSpecVolumesSecret {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesSecret
		return ret
	}).(PoolerSpecTemplateSpecVolumesSecretOutput)
}

// defaultMode is Optional: mode bits used to set permissions on created files by default.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values
// for mode bits. Defaults to 0644.
// Directories within the path are not affected by this setting.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesSecretPtrOutput) DefaultMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesSecret) *int {
		if v == nil {
			return nil
		}
		return v.DefaultMode
	}).(pulumi.IntPtrOutput)
}

// items If unspecified, each key-value pair in the Data field of the referenced
// Secret will be projected into the volume as a file whose name is the
// key and content is the value. If specified, the listed keys will be
// projected into the specified paths, and unlisted keys will not be
// present. If a key is specified which is not present in the Secret,
// the volume setup will error unless it is marked optional. Paths must be
// relative and may not contain the '..' path or start with '..'.
func (o PoolerSpecTemplateSpecVolumesSecretPtrOutput) Items() PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesSecret) []PoolerSpecTemplateSpecVolumesSecretItems {
		if v == nil {
			return nil
		}
		return v.Items
	}).(PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput)
}

// optional field specify whether the Secret or its keys must be defined
func (o PoolerSpecTemplateSpecVolumesSecretPtrOutput) Optional() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesSecret) *bool {
		if v == nil {
			return nil
		}
		return v.Optional
	}).(pulumi.BoolPtrOutput)
}

// secretName is the name of the secret in the pod's namespace to use.
// More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
func (o PoolerSpecTemplateSpecVolumesSecretPtrOutput) SecretName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesSecret) *string {
		if v == nil {
			return nil
		}
		return v.SecretName
	}).(pulumi.StringPtrOutput)
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesSecretItems struct {
	// key is the key to project.
	Key string `pulumi:"key"`
	// mode is Optional: mode bits used to set permissions on this file.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode *int `pulumi:"mode"`
	// path is the relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path string `pulumi:"path"`
}

// PoolerSpecTemplateSpecVolumesSecretItemsInput is an input type that accepts PoolerSpecTemplateSpecVolumesSecretItemsArgs and PoolerSpecTemplateSpecVolumesSecretItemsOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesSecretItemsInput` via:
//
//	PoolerSpecTemplateSpecVolumesSecretItemsArgs{...}
type PoolerSpecTemplateSpecVolumesSecretItemsInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesSecretItemsOutput() PoolerSpecTemplateSpecVolumesSecretItemsOutput
	ToPoolerSpecTemplateSpecVolumesSecretItemsOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesSecretItemsOutput
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesSecretItemsArgs struct {
	// key is the key to project.
	Key pulumi.StringInput `pulumi:"key"`
	// mode is Optional: mode bits used to set permissions on this file.
	// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
	// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
	// If not specified, the volume defaultMode will be used.
	// This might be in conflict with other options that affect the file
	// mode, like fsGroup, and the result can be other mode bits set.
	Mode pulumi.IntPtrInput `pulumi:"mode"`
	// path is the relative path of the file to map the key to.
	// May not be an absolute path.
	// May not contain the path element '..'.
	// May not start with the string '..'.
	Path pulumi.StringInput `pulumi:"path"`
}

func (PoolerSpecTemplateSpecVolumesSecretItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesSecretItems)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesSecretItemsArgs) ToPoolerSpecTemplateSpecVolumesSecretItemsOutput() PoolerSpecTemplateSpecVolumesSecretItemsOutput {
	return i.ToPoolerSpecTemplateSpecVolumesSecretItemsOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesSecretItemsArgs) ToPoolerSpecTemplateSpecVolumesSecretItemsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesSecretItemsOutput)
}

// PoolerSpecTemplateSpecVolumesSecretItemsArrayInput is an input type that accepts PoolerSpecTemplateSpecVolumesSecretItemsArray and PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesSecretItemsArrayInput` via:
//
//	PoolerSpecTemplateSpecVolumesSecretItemsArray{ PoolerSpecTemplateSpecVolumesSecretItemsArgs{...} }
type PoolerSpecTemplateSpecVolumesSecretItemsArrayInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesSecretItemsArrayOutput() PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput
	ToPoolerSpecTemplateSpecVolumesSecretItemsArrayOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput
}

type PoolerSpecTemplateSpecVolumesSecretItemsArray []PoolerSpecTemplateSpecVolumesSecretItemsInput

func (PoolerSpecTemplateSpecVolumesSecretItemsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesSecretItems)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesSecretItemsArray) ToPoolerSpecTemplateSpecVolumesSecretItemsArrayOutput() PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput {
	return i.ToPoolerSpecTemplateSpecVolumesSecretItemsArrayOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesSecretItemsArray) ToPoolerSpecTemplateSpecVolumesSecretItemsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput)
}

// Maps a string key to a path within a volume.
type PoolerSpecTemplateSpecVolumesSecretItemsOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesSecretItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesSecretItems)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesSecretItemsOutput) ToPoolerSpecTemplateSpecVolumesSecretItemsOutput() PoolerSpecTemplateSpecVolumesSecretItemsOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesSecretItemsOutput) ToPoolerSpecTemplateSpecVolumesSecretItemsOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretItemsOutput {
	return o
}

// key is the key to project.
func (o PoolerSpecTemplateSpecVolumesSecretItemsOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesSecretItems) string { return v.Key }).(pulumi.StringOutput)
}

// mode is Optional: mode bits used to set permissions on this file.
// Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
// YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
// If not specified, the volume defaultMode will be used.
// This might be in conflict with other options that affect the file
// mode, like fsGroup, and the result can be other mode bits set.
func (o PoolerSpecTemplateSpecVolumesSecretItemsOutput) Mode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesSecretItems) *int { return v.Mode }).(pulumi.IntPtrOutput)
}

// path is the relative path of the file to map the key to.
// May not be an absolute path.
// May not contain the path element '..'.
// May not start with the string '..'.
func (o PoolerSpecTemplateSpecVolumesSecretItemsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesSecretItems) string { return v.Path }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PoolerSpecTemplateSpecVolumesSecretItems)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput) ToPoolerSpecTemplateSpecVolumesSecretItemsArrayOutput() PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput) ToPoolerSpecTemplateSpecVolumesSecretItemsArrayOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput) Index(i pulumi.IntInput) PoolerSpecTemplateSpecVolumesSecretItemsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PoolerSpecTemplateSpecVolumesSecretItems {
		return vs[0].([]PoolerSpecTemplateSpecVolumesSecretItems)[vs[1].(int)]
	}).(PoolerSpecTemplateSpecVolumesSecretItemsOutput)
}

// storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
type PoolerSpecTemplateSpecVolumesStorageos struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`
	// readOnly defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly *bool `pulumi:"readOnly"`
	// secretRef specifies the secret to use for obtaining the StorageOS API
	// credentials.  If not specified, default values will be attempted.
	SecretRef *PoolerSpecTemplateSpecVolumesStorageosSecretRef `pulumi:"secretRef"`
	// volumeName is the human-readable name of the StorageOS volume.  Volume
	// names are only unique within a namespace.
	VolumeName *string `pulumi:"volumeName"`
	// volumeNamespace specifies the scope of the volume within StorageOS.  If no
	// namespace is specified then the Pod's namespace will be used.  This allows the
	// Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
	// Set VolumeName to any name to override the default behaviour.
	// Set to "default" if you are not using namespaces within StorageOS.
	// Namespaces that do not pre-exist within StorageOS will be created.
	VolumeNamespace *string `pulumi:"volumeNamespace"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesStorageos
func (val *PoolerSpecTemplateSpecVolumesStorageos) Defaults() *PoolerSpecTemplateSpecVolumesStorageos {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.SecretRef = tmp.SecretRef.Defaults()

	return &tmp
}

// PoolerSpecTemplateSpecVolumesStorageosInput is an input type that accepts PoolerSpecTemplateSpecVolumesStorageosArgs and PoolerSpecTemplateSpecVolumesStorageosOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesStorageosInput` via:
//
//	PoolerSpecTemplateSpecVolumesStorageosArgs{...}
type PoolerSpecTemplateSpecVolumesStorageosInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesStorageosOutput() PoolerSpecTemplateSpecVolumesStorageosOutput
	ToPoolerSpecTemplateSpecVolumesStorageosOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesStorageosOutput
}

// storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
type PoolerSpecTemplateSpecVolumesStorageosArgs struct {
	// fsType is the filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// readOnly defaults to false (read/write). ReadOnly here will force
	// the ReadOnly setting in VolumeMounts.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// secretRef specifies the secret to use for obtaining the StorageOS API
	// credentials.  If not specified, default values will be attempted.
	SecretRef PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrInput `pulumi:"secretRef"`
	// volumeName is the human-readable name of the StorageOS volume.  Volume
	// names are only unique within a namespace.
	VolumeName pulumi.StringPtrInput `pulumi:"volumeName"`
	// volumeNamespace specifies the scope of the volume within StorageOS.  If no
	// namespace is specified then the Pod's namespace will be used.  This allows the
	// Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
	// Set VolumeName to any name to override the default behaviour.
	// Set to "default" if you are not using namespaces within StorageOS.
	// Namespaces that do not pre-exist within StorageOS will be created.
	VolumeNamespace pulumi.StringPtrInput `pulumi:"volumeNamespace"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesStorageosArgs
func (val *PoolerSpecTemplateSpecVolumesStorageosArgs) Defaults() *PoolerSpecTemplateSpecVolumesStorageosArgs {
	if val == nil {
		return nil
	}
	tmp := *val

	return &tmp
}
func (PoolerSpecTemplateSpecVolumesStorageosArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesStorageos)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesStorageosArgs) ToPoolerSpecTemplateSpecVolumesStorageosOutput() PoolerSpecTemplateSpecVolumesStorageosOutput {
	return i.ToPoolerSpecTemplateSpecVolumesStorageosOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesStorageosArgs) ToPoolerSpecTemplateSpecVolumesStorageosOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesStorageosOutput)
}

func (i PoolerSpecTemplateSpecVolumesStorageosArgs) ToPoolerSpecTemplateSpecVolumesStorageosPtrOutput() PoolerSpecTemplateSpecVolumesStorageosPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesStorageosPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesStorageosArgs) ToPoolerSpecTemplateSpecVolumesStorageosPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesStorageosOutput).ToPoolerSpecTemplateSpecVolumesStorageosPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesStorageosPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesStorageosArgs, PoolerSpecTemplateSpecVolumesStorageosPtr and PoolerSpecTemplateSpecVolumesStorageosPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesStorageosPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesStorageosArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesStorageosPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesStorageosPtrOutput() PoolerSpecTemplateSpecVolumesStorageosPtrOutput
	ToPoolerSpecTemplateSpecVolumesStorageosPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesStorageosPtrOutput
}

type poolerSpecTemplateSpecVolumesStorageosPtrType PoolerSpecTemplateSpecVolumesStorageosArgs

func PoolerSpecTemplateSpecVolumesStorageosPtr(v *PoolerSpecTemplateSpecVolumesStorageosArgs) PoolerSpecTemplateSpecVolumesStorageosPtrInput {
	return (*poolerSpecTemplateSpecVolumesStorageosPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesStorageosPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesStorageos)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesStorageosPtrType) ToPoolerSpecTemplateSpecVolumesStorageosPtrOutput() PoolerSpecTemplateSpecVolumesStorageosPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesStorageosPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesStorageosPtrType) ToPoolerSpecTemplateSpecVolumesStorageosPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesStorageosPtrOutput)
}

// storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
type PoolerSpecTemplateSpecVolumesStorageosOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesStorageosOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesStorageos)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesStorageosOutput) ToPoolerSpecTemplateSpecVolumesStorageosOutput() PoolerSpecTemplateSpecVolumesStorageosOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesStorageosOutput) ToPoolerSpecTemplateSpecVolumesStorageosOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesStorageosOutput) ToPoolerSpecTemplateSpecVolumesStorageosPtrOutput() PoolerSpecTemplateSpecVolumesStorageosPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesStorageosPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesStorageosOutput) ToPoolerSpecTemplateSpecVolumesStorageosPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesStorageos) *PoolerSpecTemplateSpecVolumesStorageos {
		return &v
	}).(PoolerSpecTemplateSpecVolumesStorageosPtrOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesStorageosOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesStorageos) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// readOnly defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesStorageosOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesStorageos) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// secretRef specifies the secret to use for obtaining the StorageOS API
// credentials.  If not specified, default values will be attempted.
func (o PoolerSpecTemplateSpecVolumesStorageosOutput) SecretRef() PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesStorageos) *PoolerSpecTemplateSpecVolumesStorageosSecretRef {
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput)
}

// volumeName is the human-readable name of the StorageOS volume.  Volume
// names are only unique within a namespace.
func (o PoolerSpecTemplateSpecVolumesStorageosOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesStorageos) *string { return v.VolumeName }).(pulumi.StringPtrOutput)
}

// volumeNamespace specifies the scope of the volume within StorageOS.  If no
// namespace is specified then the Pod's namespace will be used.  This allows the
// Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
// Set VolumeName to any name to override the default behaviour.
// Set to "default" if you are not using namespaces within StorageOS.
// Namespaces that do not pre-exist within StorageOS will be created.
func (o PoolerSpecTemplateSpecVolumesStorageosOutput) VolumeNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesStorageos) *string { return v.VolumeNamespace }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesStorageosPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesStorageosPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesStorageos)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesStorageosPtrOutput) ToPoolerSpecTemplateSpecVolumesStorageosPtrOutput() PoolerSpecTemplateSpecVolumesStorageosPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesStorageosPtrOutput) ToPoolerSpecTemplateSpecVolumesStorageosPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesStorageosPtrOutput) Elem() PoolerSpecTemplateSpecVolumesStorageosOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesStorageos) PoolerSpecTemplateSpecVolumesStorageos {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesStorageos
		return ret
	}).(PoolerSpecTemplateSpecVolumesStorageosOutput)
}

// fsType is the filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesStorageosPtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesStorageos) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// readOnly defaults to false (read/write). ReadOnly here will force
// the ReadOnly setting in VolumeMounts.
func (o PoolerSpecTemplateSpecVolumesStorageosPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesStorageos) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// secretRef specifies the secret to use for obtaining the StorageOS API
// credentials.  If not specified, default values will be attempted.
func (o PoolerSpecTemplateSpecVolumesStorageosPtrOutput) SecretRef() PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesStorageos) *PoolerSpecTemplateSpecVolumesStorageosSecretRef {
		if v == nil {
			return nil
		}
		return v.SecretRef
	}).(PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput)
}

// volumeName is the human-readable name of the StorageOS volume.  Volume
// names are only unique within a namespace.
func (o PoolerSpecTemplateSpecVolumesStorageosPtrOutput) VolumeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesStorageos) *string {
		if v == nil {
			return nil
		}
		return v.VolumeName
	}).(pulumi.StringPtrOutput)
}

// volumeNamespace specifies the scope of the volume within StorageOS.  If no
// namespace is specified then the Pod's namespace will be used.  This allows the
// Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
// Set VolumeName to any name to override the default behaviour.
// Set to "default" if you are not using namespaces within StorageOS.
// Namespaces that do not pre-exist within StorageOS will be created.
func (o PoolerSpecTemplateSpecVolumesStorageosPtrOutput) VolumeNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesStorageos) *string {
		if v == nil {
			return nil
		}
		return v.VolumeNamespace
	}).(pulumi.StringPtrOutput)
}

// secretRef specifies the secret to use for obtaining the StorageOS API
// credentials.  If not specified, default values will be attempted.
type PoolerSpecTemplateSpecVolumesStorageosSecretRef struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name *string `pulumi:"name"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesStorageosSecretRef
func (val *PoolerSpecTemplateSpecVolumesStorageosSecretRef) Defaults() *PoolerSpecTemplateSpecVolumesStorageosSecretRef {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		name_ := ""
		tmp.Name = &name_
	}
	return &tmp
}

// PoolerSpecTemplateSpecVolumesStorageosSecretRefInput is an input type that accepts PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs and PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesStorageosSecretRefInput` via:
//
//	PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs{...}
type PoolerSpecTemplateSpecVolumesStorageosSecretRefInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesStorageosSecretRefOutput() PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput
	ToPoolerSpecTemplateSpecVolumesStorageosSecretRefOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput
}

// secretRef specifies the secret to use for obtaining the StorageOS API
// credentials.  If not specified, default values will be attempted.
type PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs struct {
	// Name of the referent.
	// This field is effectively required, but due to backwards compatibility is
	// allowed to be empty. Instances of this type with an empty value here are
	// almost certainly wrong.
	// TODO: Add other useful fields. apiVersion, kind, uid?
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

// Defaults sets the appropriate defaults for PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs
func (val *PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs) Defaults() *PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.Name == nil {
		tmp.Name = pulumi.StringPtr("")
	}
	return &tmp
}
func (PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesStorageosSecretRef)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefOutput() PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput {
	return i.ToPoolerSpecTemplateSpecVolumesStorageosSecretRefOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput)
}

func (i PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput).ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs, PoolerSpecTemplateSpecVolumesStorageosSecretRefPtr and PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput
	ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput
}

type poolerSpecTemplateSpecVolumesStorageosSecretRefPtrType PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs

func PoolerSpecTemplateSpecVolumesStorageosSecretRefPtr(v *PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs) PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrInput {
	return (*poolerSpecTemplateSpecVolumesStorageosSecretRefPtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesStorageosSecretRefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesStorageosSecretRef)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesStorageosSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesStorageosSecretRefPtrType) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput)
}

// secretRef specifies the secret to use for obtaining the StorageOS API
// credentials.  If not specified, default values will be attempted.
type PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesStorageosSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefOutput() PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesStorageosSecretRef) *PoolerSpecTemplateSpecVolumesStorageosSecretRef {
		return &v
	}).(PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesStorageosSecretRef) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesStorageosSecretRef)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput() PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput) ToPoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput) Elem() PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesStorageosSecretRef) PoolerSpecTemplateSpecVolumesStorageosSecretRef {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesStorageosSecretRef
		return ret
	}).(PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput)
}

// Name of the referent.
// This field is effectively required, but due to backwards compatibility is
// allowed to be empty. Instances of this type with an empty value here are
// almost certainly wrong.
// TODO: Add other useful fields. apiVersion, kind, uid?
// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
// TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
func (o PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesStorageosSecretRef) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
type PoolerSpecTemplateSpecVolumesVsphereVolume struct {
	// fsType is filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType *string `pulumi:"fsType"`
	// storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
	StoragePolicyID *string `pulumi:"storagePolicyID"`
	// storagePolicyName is the storage Policy Based Management (SPBM) profile name.
	StoragePolicyName *string `pulumi:"storagePolicyName"`
	// volumePath is the path that identifies vSphere volume vmdk
	VolumePath string `pulumi:"volumePath"`
}

// PoolerSpecTemplateSpecVolumesVsphereVolumeInput is an input type that accepts PoolerSpecTemplateSpecVolumesVsphereVolumeArgs and PoolerSpecTemplateSpecVolumesVsphereVolumeOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesVsphereVolumeInput` via:
//
//	PoolerSpecTemplateSpecVolumesVsphereVolumeArgs{...}
type PoolerSpecTemplateSpecVolumesVsphereVolumeInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesVsphereVolumeOutput() PoolerSpecTemplateSpecVolumesVsphereVolumeOutput
	ToPoolerSpecTemplateSpecVolumesVsphereVolumeOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesVsphereVolumeOutput
}

// vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
type PoolerSpecTemplateSpecVolumesVsphereVolumeArgs struct {
	// fsType is filesystem type to mount.
	// Must be a filesystem type supported by the host operating system.
	// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
	FsType pulumi.StringPtrInput `pulumi:"fsType"`
	// storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
	StoragePolicyID pulumi.StringPtrInput `pulumi:"storagePolicyID"`
	// storagePolicyName is the storage Policy Based Management (SPBM) profile name.
	StoragePolicyName pulumi.StringPtrInput `pulumi:"storagePolicyName"`
	// volumePath is the path that identifies vSphere volume vmdk
	VolumePath pulumi.StringInput `pulumi:"volumePath"`
}

func (PoolerSpecTemplateSpecVolumesVsphereVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesVsphereVolume)(nil)).Elem()
}

func (i PoolerSpecTemplateSpecVolumesVsphereVolumeArgs) ToPoolerSpecTemplateSpecVolumesVsphereVolumeOutput() PoolerSpecTemplateSpecVolumesVsphereVolumeOutput {
	return i.ToPoolerSpecTemplateSpecVolumesVsphereVolumeOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesVsphereVolumeArgs) ToPoolerSpecTemplateSpecVolumesVsphereVolumeOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesVsphereVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesVsphereVolumeOutput)
}

func (i PoolerSpecTemplateSpecVolumesVsphereVolumeArgs) ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput() PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutputWithContext(context.Background())
}

func (i PoolerSpecTemplateSpecVolumesVsphereVolumeArgs) ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesVsphereVolumeOutput).ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutputWithContext(ctx)
}

// PoolerSpecTemplateSpecVolumesVsphereVolumePtrInput is an input type that accepts PoolerSpecTemplateSpecVolumesVsphereVolumeArgs, PoolerSpecTemplateSpecVolumesVsphereVolumePtr and PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput values.
// You can construct a concrete instance of `PoolerSpecTemplateSpecVolumesVsphereVolumePtrInput` via:
//
//	        PoolerSpecTemplateSpecVolumesVsphereVolumeArgs{...}
//
//	or:
//
//	        nil
type PoolerSpecTemplateSpecVolumesVsphereVolumePtrInput interface {
	pulumi.Input

	ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput() PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput
	ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutputWithContext(context.Context) PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput
}

type poolerSpecTemplateSpecVolumesVsphereVolumePtrType PoolerSpecTemplateSpecVolumesVsphereVolumeArgs

func PoolerSpecTemplateSpecVolumesVsphereVolumePtr(v *PoolerSpecTemplateSpecVolumesVsphereVolumeArgs) PoolerSpecTemplateSpecVolumesVsphereVolumePtrInput {
	return (*poolerSpecTemplateSpecVolumesVsphereVolumePtrType)(v)
}

func (*poolerSpecTemplateSpecVolumesVsphereVolumePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesVsphereVolume)(nil)).Elem()
}

func (i *poolerSpecTemplateSpecVolumesVsphereVolumePtrType) ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput() PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput {
	return i.ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutputWithContext(context.Background())
}

func (i *poolerSpecTemplateSpecVolumesVsphereVolumePtrType) ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput)
}

// vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
type PoolerSpecTemplateSpecVolumesVsphereVolumeOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesVsphereVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerSpecTemplateSpecVolumesVsphereVolume)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesVsphereVolumeOutput) ToPoolerSpecTemplateSpecVolumesVsphereVolumeOutput() PoolerSpecTemplateSpecVolumesVsphereVolumeOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesVsphereVolumeOutput) ToPoolerSpecTemplateSpecVolumesVsphereVolumeOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesVsphereVolumeOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesVsphereVolumeOutput) ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput() PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput {
	return o.ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutputWithContext(context.Background())
}

func (o PoolerSpecTemplateSpecVolumesVsphereVolumeOutput) ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerSpecTemplateSpecVolumesVsphereVolume) *PoolerSpecTemplateSpecVolumesVsphereVolume {
		return &v
	}).(PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput)
}

// fsType is filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesVsphereVolumeOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesVsphereVolume) *string { return v.FsType }).(pulumi.StringPtrOutput)
}

// storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
func (o PoolerSpecTemplateSpecVolumesVsphereVolumeOutput) StoragePolicyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesVsphereVolume) *string { return v.StoragePolicyID }).(pulumi.StringPtrOutput)
}

// storagePolicyName is the storage Policy Based Management (SPBM) profile name.
func (o PoolerSpecTemplateSpecVolumesVsphereVolumeOutput) StoragePolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesVsphereVolume) *string { return v.StoragePolicyName }).(pulumi.StringPtrOutput)
}

// volumePath is the path that identifies vSphere volume vmdk
func (o PoolerSpecTemplateSpecVolumesVsphereVolumeOutput) VolumePath() pulumi.StringOutput {
	return o.ApplyT(func(v PoolerSpecTemplateSpecVolumesVsphereVolume) string { return v.VolumePath }).(pulumi.StringOutput)
}

type PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput struct{ *pulumi.OutputState }

func (PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerSpecTemplateSpecVolumesVsphereVolume)(nil)).Elem()
}

func (o PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput) ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput() PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput) ToPoolerSpecTemplateSpecVolumesVsphereVolumePtrOutputWithContext(ctx context.Context) PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput {
	return o
}

func (o PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput) Elem() PoolerSpecTemplateSpecVolumesVsphereVolumeOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesVsphereVolume) PoolerSpecTemplateSpecVolumesVsphereVolume {
		if v != nil {
			return *v
		}
		var ret PoolerSpecTemplateSpecVolumesVsphereVolume
		return ret
	}).(PoolerSpecTemplateSpecVolumesVsphereVolumeOutput)
}

// fsType is filesystem type to mount.
// Must be a filesystem type supported by the host operating system.
// Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
func (o PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput) FsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesVsphereVolume) *string {
		if v == nil {
			return nil
		}
		return v.FsType
	}).(pulumi.StringPtrOutput)
}

// storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
func (o PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput) StoragePolicyID() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesVsphereVolume) *string {
		if v == nil {
			return nil
		}
		return v.StoragePolicyID
	}).(pulumi.StringPtrOutput)
}

// storagePolicyName is the storage Policy Based Management (SPBM) profile name.
func (o PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput) StoragePolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesVsphereVolume) *string {
		if v == nil {
			return nil
		}
		return v.StoragePolicyName
	}).(pulumi.StringPtrOutput)
}

// volumePath is the path that identifies vSphere volume vmdk
func (o PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput) VolumePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerSpecTemplateSpecVolumesVsphereVolume) *string {
		if v == nil {
			return nil
		}
		return &v.VolumePath
	}).(pulumi.StringPtrOutput)
}

// Most recently observed status of the Pooler. This data may not be up to
// date. Populated by the system. Read-only.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type PoolerStatus struct {
	// The number of pods trying to be scheduled
	Instances *int `pulumi:"instances"`
	// The resource version of the config object
	Secrets *PoolerStatusSecrets `pulumi:"secrets"`
}

// PoolerStatusInput is an input type that accepts PoolerStatusArgs and PoolerStatusOutput values.
// You can construct a concrete instance of `PoolerStatusInput` via:
//
//	PoolerStatusArgs{...}
type PoolerStatusInput interface {
	pulumi.Input

	ToPoolerStatusOutput() PoolerStatusOutput
	ToPoolerStatusOutputWithContext(context.Context) PoolerStatusOutput
}

// Most recently observed status of the Pooler. This data may not be up to
// date. Populated by the system. Read-only.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type PoolerStatusArgs struct {
	// The number of pods trying to be scheduled
	Instances pulumi.IntPtrInput `pulumi:"instances"`
	// The resource version of the config object
	Secrets PoolerStatusSecretsPtrInput `pulumi:"secrets"`
}

func (PoolerStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatus)(nil)).Elem()
}

func (i PoolerStatusArgs) ToPoolerStatusOutput() PoolerStatusOutput {
	return i.ToPoolerStatusOutputWithContext(context.Background())
}

func (i PoolerStatusArgs) ToPoolerStatusOutputWithContext(ctx context.Context) PoolerStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusOutput)
}

func (i PoolerStatusArgs) ToPoolerStatusPtrOutput() PoolerStatusPtrOutput {
	return i.ToPoolerStatusPtrOutputWithContext(context.Background())
}

func (i PoolerStatusArgs) ToPoolerStatusPtrOutputWithContext(ctx context.Context) PoolerStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusOutput).ToPoolerStatusPtrOutputWithContext(ctx)
}

// PoolerStatusPtrInput is an input type that accepts PoolerStatusArgs, PoolerStatusPtr and PoolerStatusPtrOutput values.
// You can construct a concrete instance of `PoolerStatusPtrInput` via:
//
//	        PoolerStatusArgs{...}
//
//	or:
//
//	        nil
type PoolerStatusPtrInput interface {
	pulumi.Input

	ToPoolerStatusPtrOutput() PoolerStatusPtrOutput
	ToPoolerStatusPtrOutputWithContext(context.Context) PoolerStatusPtrOutput
}

type poolerStatusPtrType PoolerStatusArgs

func PoolerStatusPtr(v *PoolerStatusArgs) PoolerStatusPtrInput {
	return (*poolerStatusPtrType)(v)
}

func (*poolerStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatus)(nil)).Elem()
}

func (i *poolerStatusPtrType) ToPoolerStatusPtrOutput() PoolerStatusPtrOutput {
	return i.ToPoolerStatusPtrOutputWithContext(context.Background())
}

func (i *poolerStatusPtrType) ToPoolerStatusPtrOutputWithContext(ctx context.Context) PoolerStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusPtrOutput)
}

// Most recently observed status of the Pooler. This data may not be up to
// date. Populated by the system. Read-only.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type PoolerStatusOutput struct{ *pulumi.OutputState }

func (PoolerStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatus)(nil)).Elem()
}

func (o PoolerStatusOutput) ToPoolerStatusOutput() PoolerStatusOutput {
	return o
}

func (o PoolerStatusOutput) ToPoolerStatusOutputWithContext(ctx context.Context) PoolerStatusOutput {
	return o
}

func (o PoolerStatusOutput) ToPoolerStatusPtrOutput() PoolerStatusPtrOutput {
	return o.ToPoolerStatusPtrOutputWithContext(context.Background())
}

func (o PoolerStatusOutput) ToPoolerStatusPtrOutputWithContext(ctx context.Context) PoolerStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerStatus) *PoolerStatus {
		return &v
	}).(PoolerStatusPtrOutput)
}

// The number of pods trying to be scheduled
func (o PoolerStatusOutput) Instances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PoolerStatus) *int { return v.Instances }).(pulumi.IntPtrOutput)
}

// The resource version of the config object
func (o PoolerStatusOutput) Secrets() PoolerStatusSecretsPtrOutput {
	return o.ApplyT(func(v PoolerStatus) *PoolerStatusSecrets { return v.Secrets }).(PoolerStatusSecretsPtrOutput)
}

type PoolerStatusPtrOutput struct{ *pulumi.OutputState }

func (PoolerStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatus)(nil)).Elem()
}

func (o PoolerStatusPtrOutput) ToPoolerStatusPtrOutput() PoolerStatusPtrOutput {
	return o
}

func (o PoolerStatusPtrOutput) ToPoolerStatusPtrOutputWithContext(ctx context.Context) PoolerStatusPtrOutput {
	return o
}

func (o PoolerStatusPtrOutput) Elem() PoolerStatusOutput {
	return o.ApplyT(func(v *PoolerStatus) PoolerStatus {
		if v != nil {
			return *v
		}
		var ret PoolerStatus
		return ret
	}).(PoolerStatusOutput)
}

// The number of pods trying to be scheduled
func (o PoolerStatusPtrOutput) Instances() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *PoolerStatus) *int {
		if v == nil {
			return nil
		}
		return v.Instances
	}).(pulumi.IntPtrOutput)
}

// The resource version of the config object
func (o PoolerStatusPtrOutput) Secrets() PoolerStatusSecretsPtrOutput {
	return o.ApplyT(func(v *PoolerStatus) *PoolerStatusSecrets {
		if v == nil {
			return nil
		}
		return v.Secrets
	}).(PoolerStatusSecretsPtrOutput)
}

// The resource version of the config object
type PoolerStatusSecrets struct {
	// The client CA secret version
	ClientCA *PoolerStatusSecretsClientCa `pulumi:"clientCA"`
	// The version of the secrets used by PgBouncer
	PgBouncerSecrets *PoolerStatusSecretsPgBouncerSecrets `pulumi:"pgBouncerSecrets"`
	// The server CA secret version
	ServerCA *PoolerStatusSecretsServerCa `pulumi:"serverCA"`
	// The server TLS secret version
	ServerTLS *PoolerStatusSecretsServerTls `pulumi:"serverTLS"`
}

// PoolerStatusSecretsInput is an input type that accepts PoolerStatusSecretsArgs and PoolerStatusSecretsOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsInput` via:
//
//	PoolerStatusSecretsArgs{...}
type PoolerStatusSecretsInput interface {
	pulumi.Input

	ToPoolerStatusSecretsOutput() PoolerStatusSecretsOutput
	ToPoolerStatusSecretsOutputWithContext(context.Context) PoolerStatusSecretsOutput
}

// The resource version of the config object
type PoolerStatusSecretsArgs struct {
	// The client CA secret version
	ClientCA PoolerStatusSecretsClientCaPtrInput `pulumi:"clientCA"`
	// The version of the secrets used by PgBouncer
	PgBouncerSecrets PoolerStatusSecretsPgBouncerSecretsPtrInput `pulumi:"pgBouncerSecrets"`
	// The server CA secret version
	ServerCA PoolerStatusSecretsServerCaPtrInput `pulumi:"serverCA"`
	// The server TLS secret version
	ServerTLS PoolerStatusSecretsServerTlsPtrInput `pulumi:"serverTLS"`
}

func (PoolerStatusSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecrets)(nil)).Elem()
}

func (i PoolerStatusSecretsArgs) ToPoolerStatusSecretsOutput() PoolerStatusSecretsOutput {
	return i.ToPoolerStatusSecretsOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsArgs) ToPoolerStatusSecretsOutputWithContext(ctx context.Context) PoolerStatusSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsOutput)
}

func (i PoolerStatusSecretsArgs) ToPoolerStatusSecretsPtrOutput() PoolerStatusSecretsPtrOutput {
	return i.ToPoolerStatusSecretsPtrOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsArgs) ToPoolerStatusSecretsPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsOutput).ToPoolerStatusSecretsPtrOutputWithContext(ctx)
}

// PoolerStatusSecretsPtrInput is an input type that accepts PoolerStatusSecretsArgs, PoolerStatusSecretsPtr and PoolerStatusSecretsPtrOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsPtrInput` via:
//
//	        PoolerStatusSecretsArgs{...}
//
//	or:
//
//	        nil
type PoolerStatusSecretsPtrInput interface {
	pulumi.Input

	ToPoolerStatusSecretsPtrOutput() PoolerStatusSecretsPtrOutput
	ToPoolerStatusSecretsPtrOutputWithContext(context.Context) PoolerStatusSecretsPtrOutput
}

type poolerStatusSecretsPtrType PoolerStatusSecretsArgs

func PoolerStatusSecretsPtr(v *PoolerStatusSecretsArgs) PoolerStatusSecretsPtrInput {
	return (*poolerStatusSecretsPtrType)(v)
}

func (*poolerStatusSecretsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecrets)(nil)).Elem()
}

func (i *poolerStatusSecretsPtrType) ToPoolerStatusSecretsPtrOutput() PoolerStatusSecretsPtrOutput {
	return i.ToPoolerStatusSecretsPtrOutputWithContext(context.Background())
}

func (i *poolerStatusSecretsPtrType) ToPoolerStatusSecretsPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsPtrOutput)
}

// The resource version of the config object
type PoolerStatusSecretsOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecrets)(nil)).Elem()
}

func (o PoolerStatusSecretsOutput) ToPoolerStatusSecretsOutput() PoolerStatusSecretsOutput {
	return o
}

func (o PoolerStatusSecretsOutput) ToPoolerStatusSecretsOutputWithContext(ctx context.Context) PoolerStatusSecretsOutput {
	return o
}

func (o PoolerStatusSecretsOutput) ToPoolerStatusSecretsPtrOutput() PoolerStatusSecretsPtrOutput {
	return o.ToPoolerStatusSecretsPtrOutputWithContext(context.Background())
}

func (o PoolerStatusSecretsOutput) ToPoolerStatusSecretsPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerStatusSecrets) *PoolerStatusSecrets {
		return &v
	}).(PoolerStatusSecretsPtrOutput)
}

// The client CA secret version
func (o PoolerStatusSecretsOutput) ClientCA() PoolerStatusSecretsClientCaPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecrets) *PoolerStatusSecretsClientCa { return v.ClientCA }).(PoolerStatusSecretsClientCaPtrOutput)
}

// The version of the secrets used by PgBouncer
func (o PoolerStatusSecretsOutput) PgBouncerSecrets() PoolerStatusSecretsPgBouncerSecretsPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecrets) *PoolerStatusSecretsPgBouncerSecrets { return v.PgBouncerSecrets }).(PoolerStatusSecretsPgBouncerSecretsPtrOutput)
}

// The server CA secret version
func (o PoolerStatusSecretsOutput) ServerCA() PoolerStatusSecretsServerCaPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecrets) *PoolerStatusSecretsServerCa { return v.ServerCA }).(PoolerStatusSecretsServerCaPtrOutput)
}

// The server TLS secret version
func (o PoolerStatusSecretsOutput) ServerTLS() PoolerStatusSecretsServerTlsPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecrets) *PoolerStatusSecretsServerTls { return v.ServerTLS }).(PoolerStatusSecretsServerTlsPtrOutput)
}

type PoolerStatusSecretsPtrOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecrets)(nil)).Elem()
}

func (o PoolerStatusSecretsPtrOutput) ToPoolerStatusSecretsPtrOutput() PoolerStatusSecretsPtrOutput {
	return o
}

func (o PoolerStatusSecretsPtrOutput) ToPoolerStatusSecretsPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPtrOutput {
	return o
}

func (o PoolerStatusSecretsPtrOutput) Elem() PoolerStatusSecretsOutput {
	return o.ApplyT(func(v *PoolerStatusSecrets) PoolerStatusSecrets {
		if v != nil {
			return *v
		}
		var ret PoolerStatusSecrets
		return ret
	}).(PoolerStatusSecretsOutput)
}

// The client CA secret version
func (o PoolerStatusSecretsPtrOutput) ClientCA() PoolerStatusSecretsClientCaPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecrets) *PoolerStatusSecretsClientCa {
		if v == nil {
			return nil
		}
		return v.ClientCA
	}).(PoolerStatusSecretsClientCaPtrOutput)
}

// The version of the secrets used by PgBouncer
func (o PoolerStatusSecretsPtrOutput) PgBouncerSecrets() PoolerStatusSecretsPgBouncerSecretsPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecrets) *PoolerStatusSecretsPgBouncerSecrets {
		if v == nil {
			return nil
		}
		return v.PgBouncerSecrets
	}).(PoolerStatusSecretsPgBouncerSecretsPtrOutput)
}

// The server CA secret version
func (o PoolerStatusSecretsPtrOutput) ServerCA() PoolerStatusSecretsServerCaPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecrets) *PoolerStatusSecretsServerCa {
		if v == nil {
			return nil
		}
		return v.ServerCA
	}).(PoolerStatusSecretsServerCaPtrOutput)
}

// The server TLS secret version
func (o PoolerStatusSecretsPtrOutput) ServerTLS() PoolerStatusSecretsServerTlsPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecrets) *PoolerStatusSecretsServerTls {
		if v == nil {
			return nil
		}
		return v.ServerTLS
	}).(PoolerStatusSecretsServerTlsPtrOutput)
}

// The client CA secret version
type PoolerStatusSecretsClientCa struct {
	// The name of the secret
	Name *string `pulumi:"name"`
	// The ResourceVersion of the secret
	Version *string `pulumi:"version"`
}

// PoolerStatusSecretsClientCaInput is an input type that accepts PoolerStatusSecretsClientCaArgs and PoolerStatusSecretsClientCaOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsClientCaInput` via:
//
//	PoolerStatusSecretsClientCaArgs{...}
type PoolerStatusSecretsClientCaInput interface {
	pulumi.Input

	ToPoolerStatusSecretsClientCaOutput() PoolerStatusSecretsClientCaOutput
	ToPoolerStatusSecretsClientCaOutputWithContext(context.Context) PoolerStatusSecretsClientCaOutput
}

// The client CA secret version
type PoolerStatusSecretsClientCaArgs struct {
	// The name of the secret
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ResourceVersion of the secret
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (PoolerStatusSecretsClientCaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsClientCa)(nil)).Elem()
}

func (i PoolerStatusSecretsClientCaArgs) ToPoolerStatusSecretsClientCaOutput() PoolerStatusSecretsClientCaOutput {
	return i.ToPoolerStatusSecretsClientCaOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsClientCaArgs) ToPoolerStatusSecretsClientCaOutputWithContext(ctx context.Context) PoolerStatusSecretsClientCaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsClientCaOutput)
}

func (i PoolerStatusSecretsClientCaArgs) ToPoolerStatusSecretsClientCaPtrOutput() PoolerStatusSecretsClientCaPtrOutput {
	return i.ToPoolerStatusSecretsClientCaPtrOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsClientCaArgs) ToPoolerStatusSecretsClientCaPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsClientCaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsClientCaOutput).ToPoolerStatusSecretsClientCaPtrOutputWithContext(ctx)
}

// PoolerStatusSecretsClientCaPtrInput is an input type that accepts PoolerStatusSecretsClientCaArgs, PoolerStatusSecretsClientCaPtr and PoolerStatusSecretsClientCaPtrOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsClientCaPtrInput` via:
//
//	        PoolerStatusSecretsClientCaArgs{...}
//
//	or:
//
//	        nil
type PoolerStatusSecretsClientCaPtrInput interface {
	pulumi.Input

	ToPoolerStatusSecretsClientCaPtrOutput() PoolerStatusSecretsClientCaPtrOutput
	ToPoolerStatusSecretsClientCaPtrOutputWithContext(context.Context) PoolerStatusSecretsClientCaPtrOutput
}

type poolerStatusSecretsClientCaPtrType PoolerStatusSecretsClientCaArgs

func PoolerStatusSecretsClientCaPtr(v *PoolerStatusSecretsClientCaArgs) PoolerStatusSecretsClientCaPtrInput {
	return (*poolerStatusSecretsClientCaPtrType)(v)
}

func (*poolerStatusSecretsClientCaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsClientCa)(nil)).Elem()
}

func (i *poolerStatusSecretsClientCaPtrType) ToPoolerStatusSecretsClientCaPtrOutput() PoolerStatusSecretsClientCaPtrOutput {
	return i.ToPoolerStatusSecretsClientCaPtrOutputWithContext(context.Background())
}

func (i *poolerStatusSecretsClientCaPtrType) ToPoolerStatusSecretsClientCaPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsClientCaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsClientCaPtrOutput)
}

// The client CA secret version
type PoolerStatusSecretsClientCaOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsClientCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsClientCa)(nil)).Elem()
}

func (o PoolerStatusSecretsClientCaOutput) ToPoolerStatusSecretsClientCaOutput() PoolerStatusSecretsClientCaOutput {
	return o
}

func (o PoolerStatusSecretsClientCaOutput) ToPoolerStatusSecretsClientCaOutputWithContext(ctx context.Context) PoolerStatusSecretsClientCaOutput {
	return o
}

func (o PoolerStatusSecretsClientCaOutput) ToPoolerStatusSecretsClientCaPtrOutput() PoolerStatusSecretsClientCaPtrOutput {
	return o.ToPoolerStatusSecretsClientCaPtrOutputWithContext(context.Background())
}

func (o PoolerStatusSecretsClientCaOutput) ToPoolerStatusSecretsClientCaPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsClientCaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerStatusSecretsClientCa) *PoolerStatusSecretsClientCa {
		return &v
	}).(PoolerStatusSecretsClientCaPtrOutput)
}

// The name of the secret
func (o PoolerStatusSecretsClientCaOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsClientCa) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ResourceVersion of the secret
func (o PoolerStatusSecretsClientCaOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsClientCa) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type PoolerStatusSecretsClientCaPtrOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsClientCaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsClientCa)(nil)).Elem()
}

func (o PoolerStatusSecretsClientCaPtrOutput) ToPoolerStatusSecretsClientCaPtrOutput() PoolerStatusSecretsClientCaPtrOutput {
	return o
}

func (o PoolerStatusSecretsClientCaPtrOutput) ToPoolerStatusSecretsClientCaPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsClientCaPtrOutput {
	return o
}

func (o PoolerStatusSecretsClientCaPtrOutput) Elem() PoolerStatusSecretsClientCaOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsClientCa) PoolerStatusSecretsClientCa {
		if v != nil {
			return *v
		}
		var ret PoolerStatusSecretsClientCa
		return ret
	}).(PoolerStatusSecretsClientCaOutput)
}

// The name of the secret
func (o PoolerStatusSecretsClientCaPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsClientCa) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The ResourceVersion of the secret
func (o PoolerStatusSecretsClientCaPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsClientCa) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The version of the secrets used by PgBouncer
type PoolerStatusSecretsPgBouncerSecrets struct {
	// The auth query secret version
	AuthQuery *PoolerStatusSecretsPgBouncerSecretsAuthQuery `pulumi:"authQuery"`
}

// PoolerStatusSecretsPgBouncerSecretsInput is an input type that accepts PoolerStatusSecretsPgBouncerSecretsArgs and PoolerStatusSecretsPgBouncerSecretsOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsPgBouncerSecretsInput` via:
//
//	PoolerStatusSecretsPgBouncerSecretsArgs{...}
type PoolerStatusSecretsPgBouncerSecretsInput interface {
	pulumi.Input

	ToPoolerStatusSecretsPgBouncerSecretsOutput() PoolerStatusSecretsPgBouncerSecretsOutput
	ToPoolerStatusSecretsPgBouncerSecretsOutputWithContext(context.Context) PoolerStatusSecretsPgBouncerSecretsOutput
}

// The version of the secrets used by PgBouncer
type PoolerStatusSecretsPgBouncerSecretsArgs struct {
	// The auth query secret version
	AuthQuery PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrInput `pulumi:"authQuery"`
}

func (PoolerStatusSecretsPgBouncerSecretsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsPgBouncerSecrets)(nil)).Elem()
}

func (i PoolerStatusSecretsPgBouncerSecretsArgs) ToPoolerStatusSecretsPgBouncerSecretsOutput() PoolerStatusSecretsPgBouncerSecretsOutput {
	return i.ToPoolerStatusSecretsPgBouncerSecretsOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsPgBouncerSecretsArgs) ToPoolerStatusSecretsPgBouncerSecretsOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsPgBouncerSecretsOutput)
}

func (i PoolerStatusSecretsPgBouncerSecretsArgs) ToPoolerStatusSecretsPgBouncerSecretsPtrOutput() PoolerStatusSecretsPgBouncerSecretsPtrOutput {
	return i.ToPoolerStatusSecretsPgBouncerSecretsPtrOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsPgBouncerSecretsArgs) ToPoolerStatusSecretsPgBouncerSecretsPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsPgBouncerSecretsOutput).ToPoolerStatusSecretsPgBouncerSecretsPtrOutputWithContext(ctx)
}

// PoolerStatusSecretsPgBouncerSecretsPtrInput is an input type that accepts PoolerStatusSecretsPgBouncerSecretsArgs, PoolerStatusSecretsPgBouncerSecretsPtr and PoolerStatusSecretsPgBouncerSecretsPtrOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsPgBouncerSecretsPtrInput` via:
//
//	        PoolerStatusSecretsPgBouncerSecretsArgs{...}
//
//	or:
//
//	        nil
type PoolerStatusSecretsPgBouncerSecretsPtrInput interface {
	pulumi.Input

	ToPoolerStatusSecretsPgBouncerSecretsPtrOutput() PoolerStatusSecretsPgBouncerSecretsPtrOutput
	ToPoolerStatusSecretsPgBouncerSecretsPtrOutputWithContext(context.Context) PoolerStatusSecretsPgBouncerSecretsPtrOutput
}

type poolerStatusSecretsPgBouncerSecretsPtrType PoolerStatusSecretsPgBouncerSecretsArgs

func PoolerStatusSecretsPgBouncerSecretsPtr(v *PoolerStatusSecretsPgBouncerSecretsArgs) PoolerStatusSecretsPgBouncerSecretsPtrInput {
	return (*poolerStatusSecretsPgBouncerSecretsPtrType)(v)
}

func (*poolerStatusSecretsPgBouncerSecretsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsPgBouncerSecrets)(nil)).Elem()
}

func (i *poolerStatusSecretsPgBouncerSecretsPtrType) ToPoolerStatusSecretsPgBouncerSecretsPtrOutput() PoolerStatusSecretsPgBouncerSecretsPtrOutput {
	return i.ToPoolerStatusSecretsPgBouncerSecretsPtrOutputWithContext(context.Background())
}

func (i *poolerStatusSecretsPgBouncerSecretsPtrType) ToPoolerStatusSecretsPgBouncerSecretsPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsPgBouncerSecretsPtrOutput)
}

// The version of the secrets used by PgBouncer
type PoolerStatusSecretsPgBouncerSecretsOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsPgBouncerSecretsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsPgBouncerSecrets)(nil)).Elem()
}

func (o PoolerStatusSecretsPgBouncerSecretsOutput) ToPoolerStatusSecretsPgBouncerSecretsOutput() PoolerStatusSecretsPgBouncerSecretsOutput {
	return o
}

func (o PoolerStatusSecretsPgBouncerSecretsOutput) ToPoolerStatusSecretsPgBouncerSecretsOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsOutput {
	return o
}

func (o PoolerStatusSecretsPgBouncerSecretsOutput) ToPoolerStatusSecretsPgBouncerSecretsPtrOutput() PoolerStatusSecretsPgBouncerSecretsPtrOutput {
	return o.ToPoolerStatusSecretsPgBouncerSecretsPtrOutputWithContext(context.Background())
}

func (o PoolerStatusSecretsPgBouncerSecretsOutput) ToPoolerStatusSecretsPgBouncerSecretsPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerStatusSecretsPgBouncerSecrets) *PoolerStatusSecretsPgBouncerSecrets {
		return &v
	}).(PoolerStatusSecretsPgBouncerSecretsPtrOutput)
}

// The auth query secret version
func (o PoolerStatusSecretsPgBouncerSecretsOutput) AuthQuery() PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsPgBouncerSecrets) *PoolerStatusSecretsPgBouncerSecretsAuthQuery {
		return v.AuthQuery
	}).(PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput)
}

type PoolerStatusSecretsPgBouncerSecretsPtrOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsPgBouncerSecretsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsPgBouncerSecrets)(nil)).Elem()
}

func (o PoolerStatusSecretsPgBouncerSecretsPtrOutput) ToPoolerStatusSecretsPgBouncerSecretsPtrOutput() PoolerStatusSecretsPgBouncerSecretsPtrOutput {
	return o
}

func (o PoolerStatusSecretsPgBouncerSecretsPtrOutput) ToPoolerStatusSecretsPgBouncerSecretsPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsPtrOutput {
	return o
}

func (o PoolerStatusSecretsPgBouncerSecretsPtrOutput) Elem() PoolerStatusSecretsPgBouncerSecretsOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsPgBouncerSecrets) PoolerStatusSecretsPgBouncerSecrets {
		if v != nil {
			return *v
		}
		var ret PoolerStatusSecretsPgBouncerSecrets
		return ret
	}).(PoolerStatusSecretsPgBouncerSecretsOutput)
}

// The auth query secret version
func (o PoolerStatusSecretsPgBouncerSecretsPtrOutput) AuthQuery() PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsPgBouncerSecrets) *PoolerStatusSecretsPgBouncerSecretsAuthQuery {
		if v == nil {
			return nil
		}
		return v.AuthQuery
	}).(PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput)
}

// The auth query secret version
type PoolerStatusSecretsPgBouncerSecretsAuthQuery struct {
	// The name of the secret
	Name *string `pulumi:"name"`
	// The ResourceVersion of the secret
	Version *string `pulumi:"version"`
}

// PoolerStatusSecretsPgBouncerSecretsAuthQueryInput is an input type that accepts PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs and PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsPgBouncerSecretsAuthQueryInput` via:
//
//	PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs{...}
type PoolerStatusSecretsPgBouncerSecretsAuthQueryInput interface {
	pulumi.Input

	ToPoolerStatusSecretsPgBouncerSecretsAuthQueryOutput() PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput
	ToPoolerStatusSecretsPgBouncerSecretsAuthQueryOutputWithContext(context.Context) PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput
}

// The auth query secret version
type PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs struct {
	// The name of the secret
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ResourceVersion of the secret
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsPgBouncerSecretsAuthQuery)(nil)).Elem()
}

func (i PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryOutput() PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput {
	return i.ToPoolerStatusSecretsPgBouncerSecretsAuthQueryOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput)
}

func (i PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput() PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput {
	return i.ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput).ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutputWithContext(ctx)
}

// PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrInput is an input type that accepts PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs, PoolerStatusSecretsPgBouncerSecretsAuthQueryPtr and PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrInput` via:
//
//	        PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs{...}
//
//	or:
//
//	        nil
type PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrInput interface {
	pulumi.Input

	ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput() PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput
	ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutputWithContext(context.Context) PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput
}

type poolerStatusSecretsPgBouncerSecretsAuthQueryPtrType PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs

func PoolerStatusSecretsPgBouncerSecretsAuthQueryPtr(v *PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs) PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrInput {
	return (*poolerStatusSecretsPgBouncerSecretsAuthQueryPtrType)(v)
}

func (*poolerStatusSecretsPgBouncerSecretsAuthQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsPgBouncerSecretsAuthQuery)(nil)).Elem()
}

func (i *poolerStatusSecretsPgBouncerSecretsAuthQueryPtrType) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput() PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput {
	return i.ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutputWithContext(context.Background())
}

func (i *poolerStatusSecretsPgBouncerSecretsAuthQueryPtrType) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput)
}

// The auth query secret version
type PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsPgBouncerSecretsAuthQuery)(nil)).Elem()
}

func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryOutput() PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput {
	return o
}

func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput {
	return o
}

func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput() PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput {
	return o.ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutputWithContext(context.Background())
}

func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerStatusSecretsPgBouncerSecretsAuthQuery) *PoolerStatusSecretsPgBouncerSecretsAuthQuery {
		return &v
	}).(PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput)
}

// The name of the secret
func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsPgBouncerSecretsAuthQuery) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ResourceVersion of the secret
func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsPgBouncerSecretsAuthQuery) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsPgBouncerSecretsAuthQuery)(nil)).Elem()
}

func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput() PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput {
	return o
}

func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput) ToPoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput {
	return o
}

func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput) Elem() PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsPgBouncerSecretsAuthQuery) PoolerStatusSecretsPgBouncerSecretsAuthQuery {
		if v != nil {
			return *v
		}
		var ret PoolerStatusSecretsPgBouncerSecretsAuthQuery
		return ret
	}).(PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput)
}

// The name of the secret
func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsPgBouncerSecretsAuthQuery) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The ResourceVersion of the secret
func (o PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsPgBouncerSecretsAuthQuery) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The server CA secret version
type PoolerStatusSecretsServerCa struct {
	// The name of the secret
	Name *string `pulumi:"name"`
	// The ResourceVersion of the secret
	Version *string `pulumi:"version"`
}

// PoolerStatusSecretsServerCaInput is an input type that accepts PoolerStatusSecretsServerCaArgs and PoolerStatusSecretsServerCaOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsServerCaInput` via:
//
//	PoolerStatusSecretsServerCaArgs{...}
type PoolerStatusSecretsServerCaInput interface {
	pulumi.Input

	ToPoolerStatusSecretsServerCaOutput() PoolerStatusSecretsServerCaOutput
	ToPoolerStatusSecretsServerCaOutputWithContext(context.Context) PoolerStatusSecretsServerCaOutput
}

// The server CA secret version
type PoolerStatusSecretsServerCaArgs struct {
	// The name of the secret
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ResourceVersion of the secret
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (PoolerStatusSecretsServerCaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsServerCa)(nil)).Elem()
}

func (i PoolerStatusSecretsServerCaArgs) ToPoolerStatusSecretsServerCaOutput() PoolerStatusSecretsServerCaOutput {
	return i.ToPoolerStatusSecretsServerCaOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsServerCaArgs) ToPoolerStatusSecretsServerCaOutputWithContext(ctx context.Context) PoolerStatusSecretsServerCaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsServerCaOutput)
}

func (i PoolerStatusSecretsServerCaArgs) ToPoolerStatusSecretsServerCaPtrOutput() PoolerStatusSecretsServerCaPtrOutput {
	return i.ToPoolerStatusSecretsServerCaPtrOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsServerCaArgs) ToPoolerStatusSecretsServerCaPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsServerCaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsServerCaOutput).ToPoolerStatusSecretsServerCaPtrOutputWithContext(ctx)
}

// PoolerStatusSecretsServerCaPtrInput is an input type that accepts PoolerStatusSecretsServerCaArgs, PoolerStatusSecretsServerCaPtr and PoolerStatusSecretsServerCaPtrOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsServerCaPtrInput` via:
//
//	        PoolerStatusSecretsServerCaArgs{...}
//
//	or:
//
//	        nil
type PoolerStatusSecretsServerCaPtrInput interface {
	pulumi.Input

	ToPoolerStatusSecretsServerCaPtrOutput() PoolerStatusSecretsServerCaPtrOutput
	ToPoolerStatusSecretsServerCaPtrOutputWithContext(context.Context) PoolerStatusSecretsServerCaPtrOutput
}

type poolerStatusSecretsServerCaPtrType PoolerStatusSecretsServerCaArgs

func PoolerStatusSecretsServerCaPtr(v *PoolerStatusSecretsServerCaArgs) PoolerStatusSecretsServerCaPtrInput {
	return (*poolerStatusSecretsServerCaPtrType)(v)
}

func (*poolerStatusSecretsServerCaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsServerCa)(nil)).Elem()
}

func (i *poolerStatusSecretsServerCaPtrType) ToPoolerStatusSecretsServerCaPtrOutput() PoolerStatusSecretsServerCaPtrOutput {
	return i.ToPoolerStatusSecretsServerCaPtrOutputWithContext(context.Background())
}

func (i *poolerStatusSecretsServerCaPtrType) ToPoolerStatusSecretsServerCaPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsServerCaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsServerCaPtrOutput)
}

// The server CA secret version
type PoolerStatusSecretsServerCaOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsServerCaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsServerCa)(nil)).Elem()
}

func (o PoolerStatusSecretsServerCaOutput) ToPoolerStatusSecretsServerCaOutput() PoolerStatusSecretsServerCaOutput {
	return o
}

func (o PoolerStatusSecretsServerCaOutput) ToPoolerStatusSecretsServerCaOutputWithContext(ctx context.Context) PoolerStatusSecretsServerCaOutput {
	return o
}

func (o PoolerStatusSecretsServerCaOutput) ToPoolerStatusSecretsServerCaPtrOutput() PoolerStatusSecretsServerCaPtrOutput {
	return o.ToPoolerStatusSecretsServerCaPtrOutputWithContext(context.Background())
}

func (o PoolerStatusSecretsServerCaOutput) ToPoolerStatusSecretsServerCaPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsServerCaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerStatusSecretsServerCa) *PoolerStatusSecretsServerCa {
		return &v
	}).(PoolerStatusSecretsServerCaPtrOutput)
}

// The name of the secret
func (o PoolerStatusSecretsServerCaOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsServerCa) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ResourceVersion of the secret
func (o PoolerStatusSecretsServerCaOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsServerCa) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type PoolerStatusSecretsServerCaPtrOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsServerCaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsServerCa)(nil)).Elem()
}

func (o PoolerStatusSecretsServerCaPtrOutput) ToPoolerStatusSecretsServerCaPtrOutput() PoolerStatusSecretsServerCaPtrOutput {
	return o
}

func (o PoolerStatusSecretsServerCaPtrOutput) ToPoolerStatusSecretsServerCaPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsServerCaPtrOutput {
	return o
}

func (o PoolerStatusSecretsServerCaPtrOutput) Elem() PoolerStatusSecretsServerCaOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsServerCa) PoolerStatusSecretsServerCa {
		if v != nil {
			return *v
		}
		var ret PoolerStatusSecretsServerCa
		return ret
	}).(PoolerStatusSecretsServerCaOutput)
}

// The name of the secret
func (o PoolerStatusSecretsServerCaPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsServerCa) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The ResourceVersion of the secret
func (o PoolerStatusSecretsServerCaPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsServerCa) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// The server TLS secret version
type PoolerStatusSecretsServerTls struct {
	// The name of the secret
	Name *string `pulumi:"name"`
	// The ResourceVersion of the secret
	Version *string `pulumi:"version"`
}

// PoolerStatusSecretsServerTlsInput is an input type that accepts PoolerStatusSecretsServerTlsArgs and PoolerStatusSecretsServerTlsOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsServerTlsInput` via:
//
//	PoolerStatusSecretsServerTlsArgs{...}
type PoolerStatusSecretsServerTlsInput interface {
	pulumi.Input

	ToPoolerStatusSecretsServerTlsOutput() PoolerStatusSecretsServerTlsOutput
	ToPoolerStatusSecretsServerTlsOutputWithContext(context.Context) PoolerStatusSecretsServerTlsOutput
}

// The server TLS secret version
type PoolerStatusSecretsServerTlsArgs struct {
	// The name of the secret
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The ResourceVersion of the secret
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (PoolerStatusSecretsServerTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsServerTls)(nil)).Elem()
}

func (i PoolerStatusSecretsServerTlsArgs) ToPoolerStatusSecretsServerTlsOutput() PoolerStatusSecretsServerTlsOutput {
	return i.ToPoolerStatusSecretsServerTlsOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsServerTlsArgs) ToPoolerStatusSecretsServerTlsOutputWithContext(ctx context.Context) PoolerStatusSecretsServerTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsServerTlsOutput)
}

func (i PoolerStatusSecretsServerTlsArgs) ToPoolerStatusSecretsServerTlsPtrOutput() PoolerStatusSecretsServerTlsPtrOutput {
	return i.ToPoolerStatusSecretsServerTlsPtrOutputWithContext(context.Background())
}

func (i PoolerStatusSecretsServerTlsArgs) ToPoolerStatusSecretsServerTlsPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsServerTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsServerTlsOutput).ToPoolerStatusSecretsServerTlsPtrOutputWithContext(ctx)
}

// PoolerStatusSecretsServerTlsPtrInput is an input type that accepts PoolerStatusSecretsServerTlsArgs, PoolerStatusSecretsServerTlsPtr and PoolerStatusSecretsServerTlsPtrOutput values.
// You can construct a concrete instance of `PoolerStatusSecretsServerTlsPtrInput` via:
//
//	        PoolerStatusSecretsServerTlsArgs{...}
//
//	or:
//
//	        nil
type PoolerStatusSecretsServerTlsPtrInput interface {
	pulumi.Input

	ToPoolerStatusSecretsServerTlsPtrOutput() PoolerStatusSecretsServerTlsPtrOutput
	ToPoolerStatusSecretsServerTlsPtrOutputWithContext(context.Context) PoolerStatusSecretsServerTlsPtrOutput
}

type poolerStatusSecretsServerTlsPtrType PoolerStatusSecretsServerTlsArgs

func PoolerStatusSecretsServerTlsPtr(v *PoolerStatusSecretsServerTlsArgs) PoolerStatusSecretsServerTlsPtrInput {
	return (*poolerStatusSecretsServerTlsPtrType)(v)
}

func (*poolerStatusSecretsServerTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsServerTls)(nil)).Elem()
}

func (i *poolerStatusSecretsServerTlsPtrType) ToPoolerStatusSecretsServerTlsPtrOutput() PoolerStatusSecretsServerTlsPtrOutput {
	return i.ToPoolerStatusSecretsServerTlsPtrOutputWithContext(context.Background())
}

func (i *poolerStatusSecretsServerTlsPtrType) ToPoolerStatusSecretsServerTlsPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsServerTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolerStatusSecretsServerTlsPtrOutput)
}

// The server TLS secret version
type PoolerStatusSecretsServerTlsOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsServerTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolerStatusSecretsServerTls)(nil)).Elem()
}

func (o PoolerStatusSecretsServerTlsOutput) ToPoolerStatusSecretsServerTlsOutput() PoolerStatusSecretsServerTlsOutput {
	return o
}

func (o PoolerStatusSecretsServerTlsOutput) ToPoolerStatusSecretsServerTlsOutputWithContext(ctx context.Context) PoolerStatusSecretsServerTlsOutput {
	return o
}

func (o PoolerStatusSecretsServerTlsOutput) ToPoolerStatusSecretsServerTlsPtrOutput() PoolerStatusSecretsServerTlsPtrOutput {
	return o.ToPoolerStatusSecretsServerTlsPtrOutputWithContext(context.Background())
}

func (o PoolerStatusSecretsServerTlsOutput) ToPoolerStatusSecretsServerTlsPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsServerTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PoolerStatusSecretsServerTls) *PoolerStatusSecretsServerTls {
		return &v
	}).(PoolerStatusSecretsServerTlsPtrOutput)
}

// The name of the secret
func (o PoolerStatusSecretsServerTlsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsServerTls) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The ResourceVersion of the secret
func (o PoolerStatusSecretsServerTlsOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PoolerStatusSecretsServerTls) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type PoolerStatusSecretsServerTlsPtrOutput struct{ *pulumi.OutputState }

func (PoolerStatusSecretsServerTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PoolerStatusSecretsServerTls)(nil)).Elem()
}

func (o PoolerStatusSecretsServerTlsPtrOutput) ToPoolerStatusSecretsServerTlsPtrOutput() PoolerStatusSecretsServerTlsPtrOutput {
	return o
}

func (o PoolerStatusSecretsServerTlsPtrOutput) ToPoolerStatusSecretsServerTlsPtrOutputWithContext(ctx context.Context) PoolerStatusSecretsServerTlsPtrOutput {
	return o
}

func (o PoolerStatusSecretsServerTlsPtrOutput) Elem() PoolerStatusSecretsServerTlsOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsServerTls) PoolerStatusSecretsServerTls {
		if v != nil {
			return *v
		}
		var ret PoolerStatusSecretsServerTls
		return ret
	}).(PoolerStatusSecretsServerTlsOutput)
}

// The name of the secret
func (o PoolerStatusSecretsServerTlsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsServerTls) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The ResourceVersion of the secret
func (o PoolerStatusSecretsServerTlsPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PoolerStatusSecretsServerTls) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// ScheduledBackup is the Schema for the scheduledbackups API
type ScheduledBackupType struct {
	ApiVersion *string           `pulumi:"apiVersion"`
	Kind       *string           `pulumi:"kind"`
	Metadata   metav1.ObjectMeta `pulumi:"metadata"`
	// Specification of the desired behavior of the ScheduledBackup.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Spec ScheduledBackupSpec `pulumi:"spec"`
	// Most recently observed status of the ScheduledBackup. This data may not be up
	// to date. Populated by the system. Read-only.
	// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Status *ScheduledBackupStatus `pulumi:"status"`
}

// Defaults sets the appropriate defaults for ScheduledBackupType
func (val *ScheduledBackupType) Defaults() *ScheduledBackupType {
	if val == nil {
		return nil
	}
	tmp := *val
	tmp.Spec = *tmp.Spec.Defaults()

	return &tmp
}

type ScheduledBackupMetadata struct {
}

// Specification of the desired behavior of the ScheduledBackup.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type ScheduledBackupSpec struct {
	// Indicates which ownerReference should be put inside the created backup resources.<br />
	// - none: no owner reference for created backup objects (same behavior as before the field was introduced)<br />
	// - self: sets the Scheduled backup object as owner of the backup<br />
	// - cluster: set the cluster as owner of the backup<br />
	BackupOwnerReference *string `pulumi:"backupOwnerReference"`
	// The cluster to backup
	Cluster ScheduledBackupSpecCluster `pulumi:"cluster"`
	// If the first backup has to be immediately start after creation or not
	Immediate *bool `pulumi:"immediate"`
	// The backup method to be used, possible options are `barmanObjectStore`,
	// `volumeSnapshot` or `plugin`. Defaults to: `barmanObjectStore`.
	Method *string `pulumi:"method"`
	// Whether the default type of backup with volume snapshots is
	// online/hot (`true`, default) or offline/cold (`false`)
	// Overrides the default setting specified in the cluster field '.spec.backup.volumeSnapshot.online'
	Online *bool `pulumi:"online"`
	// Configuration parameters to control the online/hot backup with volume snapshots
	// Overrides the default settings specified in the cluster '.backup.volumeSnapshot.onlineConfiguration' stanza
	OnlineConfiguration *ScheduledBackupSpecOnlineConfiguration `pulumi:"onlineConfiguration"`
	// Configuration parameters passed to the plugin managing this backup
	PluginConfiguration *ScheduledBackupSpecPluginConfiguration `pulumi:"pluginConfiguration"`
	// The schedule does not follow the same format used in Kubernetes CronJobs
	// as it includes an additional seconds specifier,
	// see https://pkg.go.dev/github.com/robfig/cron#hdr-CRON_Expression_Format
	Schedule string `pulumi:"schedule"`
	// If this backup is suspended or not
	Suspend *bool `pulumi:"suspend"`
	// The policy to decide which instance should perform this backup. If empty,
	// it defaults to `cluster.spec.backup.target`.
	// Available options are empty string, `primary` and `prefer-standby`.
	// `primary` to have backups run always on primary instances,
	// `prefer-standby` to have backups run preferably on the most updated
	// standby, if available.
	Target *string `pulumi:"target"`
}

// Defaults sets the appropriate defaults for ScheduledBackupSpec
func (val *ScheduledBackupSpec) Defaults() *ScheduledBackupSpec {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.BackupOwnerReference == nil {
		backupOwnerReference_ := "none"
		tmp.BackupOwnerReference = &backupOwnerReference_
	}
	if tmp.Method == nil {
		method_ := "barmanObjectStore"
		tmp.Method = &method_
	}
	tmp.OnlineConfiguration = tmp.OnlineConfiguration.Defaults()

	return &tmp
}

// ScheduledBackupSpecInput is an input type that accepts ScheduledBackupSpecArgs and ScheduledBackupSpecOutput values.
// You can construct a concrete instance of `ScheduledBackupSpecInput` via:
//
//	ScheduledBackupSpecArgs{...}
type ScheduledBackupSpecInput interface {
	pulumi.Input

	ToScheduledBackupSpecOutput() ScheduledBackupSpecOutput
	ToScheduledBackupSpecOutputWithContext(context.Context) ScheduledBackupSpecOutput
}

// Specification of the desired behavior of the ScheduledBackup.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type ScheduledBackupSpecArgs struct {
	// Indicates which ownerReference should be put inside the created backup resources.<br />
	// - none: no owner reference for created backup objects (same behavior as before the field was introduced)<br />
	// - self: sets the Scheduled backup object as owner of the backup<br />
	// - cluster: set the cluster as owner of the backup<br />
	BackupOwnerReference pulumi.StringPtrInput `pulumi:"backupOwnerReference"`
	// The cluster to backup
	Cluster ScheduledBackupSpecClusterInput `pulumi:"cluster"`
	// If the first backup has to be immediately start after creation or not
	Immediate pulumi.BoolPtrInput `pulumi:"immediate"`
	// The backup method to be used, possible options are `barmanObjectStore`,
	// `volumeSnapshot` or `plugin`. Defaults to: `barmanObjectStore`.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// Whether the default type of backup with volume snapshots is
	// online/hot (`true`, default) or offline/cold (`false`)
	// Overrides the default setting specified in the cluster field '.spec.backup.volumeSnapshot.online'
	Online pulumi.BoolPtrInput `pulumi:"online"`
	// Configuration parameters to control the online/hot backup with volume snapshots
	// Overrides the default settings specified in the cluster '.backup.volumeSnapshot.onlineConfiguration' stanza
	OnlineConfiguration ScheduledBackupSpecOnlineConfigurationPtrInput `pulumi:"onlineConfiguration"`
	// Configuration parameters passed to the plugin managing this backup
	PluginConfiguration ScheduledBackupSpecPluginConfigurationPtrInput `pulumi:"pluginConfiguration"`
	// The schedule does not follow the same format used in Kubernetes CronJobs
	// as it includes an additional seconds specifier,
	// see https://pkg.go.dev/github.com/robfig/cron#hdr-CRON_Expression_Format
	Schedule pulumi.StringInput `pulumi:"schedule"`
	// If this backup is suspended or not
	Suspend pulumi.BoolPtrInput `pulumi:"suspend"`
	// The policy to decide which instance should perform this backup. If empty,
	// it defaults to `cluster.spec.backup.target`.
	// Available options are empty string, `primary` and `prefer-standby`.
	// `primary` to have backups run always on primary instances,
	// `prefer-standby` to have backups run preferably on the most updated
	// standby, if available.
	Target pulumi.StringPtrInput `pulumi:"target"`
}

// Defaults sets the appropriate defaults for ScheduledBackupSpecArgs
func (val *ScheduledBackupSpecArgs) Defaults() *ScheduledBackupSpecArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.BackupOwnerReference == nil {
		tmp.BackupOwnerReference = pulumi.StringPtr("none")
	}
	if tmp.Method == nil {
		tmp.Method = pulumi.StringPtr("barmanObjectStore")
	}

	return &tmp
}
func (ScheduledBackupSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupSpec)(nil)).Elem()
}

func (i ScheduledBackupSpecArgs) ToScheduledBackupSpecOutput() ScheduledBackupSpecOutput {
	return i.ToScheduledBackupSpecOutputWithContext(context.Background())
}

func (i ScheduledBackupSpecArgs) ToScheduledBackupSpecOutputWithContext(ctx context.Context) ScheduledBackupSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecOutput)
}

func (i ScheduledBackupSpecArgs) ToScheduledBackupSpecPtrOutput() ScheduledBackupSpecPtrOutput {
	return i.ToScheduledBackupSpecPtrOutputWithContext(context.Background())
}

func (i ScheduledBackupSpecArgs) ToScheduledBackupSpecPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecOutput).ToScheduledBackupSpecPtrOutputWithContext(ctx)
}

// ScheduledBackupSpecPtrInput is an input type that accepts ScheduledBackupSpecArgs, ScheduledBackupSpecPtr and ScheduledBackupSpecPtrOutput values.
// You can construct a concrete instance of `ScheduledBackupSpecPtrInput` via:
//
//	        ScheduledBackupSpecArgs{...}
//
//	or:
//
//	        nil
type ScheduledBackupSpecPtrInput interface {
	pulumi.Input

	ToScheduledBackupSpecPtrOutput() ScheduledBackupSpecPtrOutput
	ToScheduledBackupSpecPtrOutputWithContext(context.Context) ScheduledBackupSpecPtrOutput
}

type scheduledBackupSpecPtrType ScheduledBackupSpecArgs

func ScheduledBackupSpecPtr(v *ScheduledBackupSpecArgs) ScheduledBackupSpecPtrInput {
	return (*scheduledBackupSpecPtrType)(v)
}

func (*scheduledBackupSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupSpec)(nil)).Elem()
}

func (i *scheduledBackupSpecPtrType) ToScheduledBackupSpecPtrOutput() ScheduledBackupSpecPtrOutput {
	return i.ToScheduledBackupSpecPtrOutputWithContext(context.Background())
}

func (i *scheduledBackupSpecPtrType) ToScheduledBackupSpecPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecPtrOutput)
}

// Specification of the desired behavior of the ScheduledBackup.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type ScheduledBackupSpecOutput struct{ *pulumi.OutputState }

func (ScheduledBackupSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupSpec)(nil)).Elem()
}

func (o ScheduledBackupSpecOutput) ToScheduledBackupSpecOutput() ScheduledBackupSpecOutput {
	return o
}

func (o ScheduledBackupSpecOutput) ToScheduledBackupSpecOutputWithContext(ctx context.Context) ScheduledBackupSpecOutput {
	return o
}

func (o ScheduledBackupSpecOutput) ToScheduledBackupSpecPtrOutput() ScheduledBackupSpecPtrOutput {
	return o.ToScheduledBackupSpecPtrOutputWithContext(context.Background())
}

func (o ScheduledBackupSpecOutput) ToScheduledBackupSpecPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledBackupSpec) *ScheduledBackupSpec {
		return &v
	}).(ScheduledBackupSpecPtrOutput)
}

// Indicates which ownerReference should be put inside the created backup resources.<br />
// - none: no owner reference for created backup objects (same behavior as before the field was introduced)<br />
// - self: sets the Scheduled backup object as owner of the backup<br />
// - cluster: set the cluster as owner of the backup<br />
func (o ScheduledBackupSpecOutput) BackupOwnerReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpec) *string { return v.BackupOwnerReference }).(pulumi.StringPtrOutput)
}

// The cluster to backup
func (o ScheduledBackupSpecOutput) Cluster() ScheduledBackupSpecClusterOutput {
	return o.ApplyT(func(v ScheduledBackupSpec) ScheduledBackupSpecCluster { return v.Cluster }).(ScheduledBackupSpecClusterOutput)
}

// If the first backup has to be immediately start after creation or not
func (o ScheduledBackupSpecOutput) Immediate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpec) *bool { return v.Immediate }).(pulumi.BoolPtrOutput)
}

// The backup method to be used, possible options are `barmanObjectStore`,
// `volumeSnapshot` or `plugin`. Defaults to: `barmanObjectStore`.
func (o ScheduledBackupSpecOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpec) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Whether the default type of backup with volume snapshots is
// online/hot (`true`, default) or offline/cold (`false`)
// Overrides the default setting specified in the cluster field '.spec.backup.volumeSnapshot.online'
func (o ScheduledBackupSpecOutput) Online() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpec) *bool { return v.Online }).(pulumi.BoolPtrOutput)
}

// Configuration parameters to control the online/hot backup with volume snapshots
// Overrides the default settings specified in the cluster '.backup.volumeSnapshot.onlineConfiguration' stanza
func (o ScheduledBackupSpecOutput) OnlineConfiguration() ScheduledBackupSpecOnlineConfigurationPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpec) *ScheduledBackupSpecOnlineConfiguration { return v.OnlineConfiguration }).(ScheduledBackupSpecOnlineConfigurationPtrOutput)
}

// Configuration parameters passed to the plugin managing this backup
func (o ScheduledBackupSpecOutput) PluginConfiguration() ScheduledBackupSpecPluginConfigurationPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpec) *ScheduledBackupSpecPluginConfiguration { return v.PluginConfiguration }).(ScheduledBackupSpecPluginConfigurationPtrOutput)
}

// The schedule does not follow the same format used in Kubernetes CronJobs
// as it includes an additional seconds specifier,
// see https://pkg.go.dev/github.com/robfig/cron#hdr-CRON_Expression_Format
func (o ScheduledBackupSpecOutput) Schedule() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledBackupSpec) string { return v.Schedule }).(pulumi.StringOutput)
}

// If this backup is suspended or not
func (o ScheduledBackupSpecOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpec) *bool { return v.Suspend }).(pulumi.BoolPtrOutput)
}

// The policy to decide which instance should perform this backup. If empty,
// it defaults to `cluster.spec.backup.target`.
// Available options are empty string, `primary` and `prefer-standby`.
// `primary` to have backups run always on primary instances,
// `prefer-standby` to have backups run preferably on the most updated
// standby, if available.
func (o ScheduledBackupSpecOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpec) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type ScheduledBackupSpecPtrOutput struct{ *pulumi.OutputState }

func (ScheduledBackupSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupSpec)(nil)).Elem()
}

func (o ScheduledBackupSpecPtrOutput) ToScheduledBackupSpecPtrOutput() ScheduledBackupSpecPtrOutput {
	return o
}

func (o ScheduledBackupSpecPtrOutput) ToScheduledBackupSpecPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecPtrOutput {
	return o
}

func (o ScheduledBackupSpecPtrOutput) Elem() ScheduledBackupSpecOutput {
	return o.ApplyT(func(v *ScheduledBackupSpec) ScheduledBackupSpec {
		if v != nil {
			return *v
		}
		var ret ScheduledBackupSpec
		return ret
	}).(ScheduledBackupSpecOutput)
}

// Indicates which ownerReference should be put inside the created backup resources.<br />
// - none: no owner reference for created backup objects (same behavior as before the field was introduced)<br />
// - self: sets the Scheduled backup object as owner of the backup<br />
// - cluster: set the cluster as owner of the backup<br />
func (o ScheduledBackupSpecPtrOutput) BackupOwnerReference() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpec) *string {
		if v == nil {
			return nil
		}
		return v.BackupOwnerReference
	}).(pulumi.StringPtrOutput)
}

// The cluster to backup
func (o ScheduledBackupSpecPtrOutput) Cluster() ScheduledBackupSpecClusterPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpec) *ScheduledBackupSpecCluster {
		if v == nil {
			return nil
		}
		return &v.Cluster
	}).(ScheduledBackupSpecClusterPtrOutput)
}

// If the first backup has to be immediately start after creation or not
func (o ScheduledBackupSpecPtrOutput) Immediate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Immediate
	}).(pulumi.BoolPtrOutput)
}

// The backup method to be used, possible options are `barmanObjectStore`,
// `volumeSnapshot` or `plugin`. Defaults to: `barmanObjectStore`.
func (o ScheduledBackupSpecPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpec) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// Whether the default type of backup with volume snapshots is
// online/hot (`true`, default) or offline/cold (`false`)
// Overrides the default setting specified in the cluster field '.spec.backup.volumeSnapshot.online'
func (o ScheduledBackupSpecPtrOutput) Online() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Online
	}).(pulumi.BoolPtrOutput)
}

// Configuration parameters to control the online/hot backup with volume snapshots
// Overrides the default settings specified in the cluster '.backup.volumeSnapshot.onlineConfiguration' stanza
func (o ScheduledBackupSpecPtrOutput) OnlineConfiguration() ScheduledBackupSpecOnlineConfigurationPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpec) *ScheduledBackupSpecOnlineConfiguration {
		if v == nil {
			return nil
		}
		return v.OnlineConfiguration
	}).(ScheduledBackupSpecOnlineConfigurationPtrOutput)
}

// Configuration parameters passed to the plugin managing this backup
func (o ScheduledBackupSpecPtrOutput) PluginConfiguration() ScheduledBackupSpecPluginConfigurationPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpec) *ScheduledBackupSpecPluginConfiguration {
		if v == nil {
			return nil
		}
		return v.PluginConfiguration
	}).(ScheduledBackupSpecPluginConfigurationPtrOutput)
}

// The schedule does not follow the same format used in Kubernetes CronJobs
// as it includes an additional seconds specifier,
// see https://pkg.go.dev/github.com/robfig/cron#hdr-CRON_Expression_Format
func (o ScheduledBackupSpecPtrOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Schedule
	}).(pulumi.StringPtrOutput)
}

// If this backup is suspended or not
func (o ScheduledBackupSpecPtrOutput) Suspend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpec) *bool {
		if v == nil {
			return nil
		}
		return v.Suspend
	}).(pulumi.BoolPtrOutput)
}

// The policy to decide which instance should perform this backup. If empty,
// it defaults to `cluster.spec.backup.target`.
// Available options are empty string, `primary` and `prefer-standby`.
// `primary` to have backups run always on primary instances,
// `prefer-standby` to have backups run preferably on the most updated
// standby, if available.
func (o ScheduledBackupSpecPtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpec) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

// The cluster to backup
type ScheduledBackupSpecCluster struct {
	// Name of the referent.
	Name string `pulumi:"name"`
}

// ScheduledBackupSpecClusterInput is an input type that accepts ScheduledBackupSpecClusterArgs and ScheduledBackupSpecClusterOutput values.
// You can construct a concrete instance of `ScheduledBackupSpecClusterInput` via:
//
//	ScheduledBackupSpecClusterArgs{...}
type ScheduledBackupSpecClusterInput interface {
	pulumi.Input

	ToScheduledBackupSpecClusterOutput() ScheduledBackupSpecClusterOutput
	ToScheduledBackupSpecClusterOutputWithContext(context.Context) ScheduledBackupSpecClusterOutput
}

// The cluster to backup
type ScheduledBackupSpecClusterArgs struct {
	// Name of the referent.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ScheduledBackupSpecClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupSpecCluster)(nil)).Elem()
}

func (i ScheduledBackupSpecClusterArgs) ToScheduledBackupSpecClusterOutput() ScheduledBackupSpecClusterOutput {
	return i.ToScheduledBackupSpecClusterOutputWithContext(context.Background())
}

func (i ScheduledBackupSpecClusterArgs) ToScheduledBackupSpecClusterOutputWithContext(ctx context.Context) ScheduledBackupSpecClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecClusterOutput)
}

func (i ScheduledBackupSpecClusterArgs) ToScheduledBackupSpecClusterPtrOutput() ScheduledBackupSpecClusterPtrOutput {
	return i.ToScheduledBackupSpecClusterPtrOutputWithContext(context.Background())
}

func (i ScheduledBackupSpecClusterArgs) ToScheduledBackupSpecClusterPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecClusterOutput).ToScheduledBackupSpecClusterPtrOutputWithContext(ctx)
}

// ScheduledBackupSpecClusterPtrInput is an input type that accepts ScheduledBackupSpecClusterArgs, ScheduledBackupSpecClusterPtr and ScheduledBackupSpecClusterPtrOutput values.
// You can construct a concrete instance of `ScheduledBackupSpecClusterPtrInput` via:
//
//	        ScheduledBackupSpecClusterArgs{...}
//
//	or:
//
//	        nil
type ScheduledBackupSpecClusterPtrInput interface {
	pulumi.Input

	ToScheduledBackupSpecClusterPtrOutput() ScheduledBackupSpecClusterPtrOutput
	ToScheduledBackupSpecClusterPtrOutputWithContext(context.Context) ScheduledBackupSpecClusterPtrOutput
}

type scheduledBackupSpecClusterPtrType ScheduledBackupSpecClusterArgs

func ScheduledBackupSpecClusterPtr(v *ScheduledBackupSpecClusterArgs) ScheduledBackupSpecClusterPtrInput {
	return (*scheduledBackupSpecClusterPtrType)(v)
}

func (*scheduledBackupSpecClusterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupSpecCluster)(nil)).Elem()
}

func (i *scheduledBackupSpecClusterPtrType) ToScheduledBackupSpecClusterPtrOutput() ScheduledBackupSpecClusterPtrOutput {
	return i.ToScheduledBackupSpecClusterPtrOutputWithContext(context.Background())
}

func (i *scheduledBackupSpecClusterPtrType) ToScheduledBackupSpecClusterPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecClusterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecClusterPtrOutput)
}

// The cluster to backup
type ScheduledBackupSpecClusterOutput struct{ *pulumi.OutputState }

func (ScheduledBackupSpecClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupSpecCluster)(nil)).Elem()
}

func (o ScheduledBackupSpecClusterOutput) ToScheduledBackupSpecClusterOutput() ScheduledBackupSpecClusterOutput {
	return o
}

func (o ScheduledBackupSpecClusterOutput) ToScheduledBackupSpecClusterOutputWithContext(ctx context.Context) ScheduledBackupSpecClusterOutput {
	return o
}

func (o ScheduledBackupSpecClusterOutput) ToScheduledBackupSpecClusterPtrOutput() ScheduledBackupSpecClusterPtrOutput {
	return o.ToScheduledBackupSpecClusterPtrOutputWithContext(context.Background())
}

func (o ScheduledBackupSpecClusterOutput) ToScheduledBackupSpecClusterPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecClusterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledBackupSpecCluster) *ScheduledBackupSpecCluster {
		return &v
	}).(ScheduledBackupSpecClusterPtrOutput)
}

// Name of the referent.
func (o ScheduledBackupSpecClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledBackupSpecCluster) string { return v.Name }).(pulumi.StringOutput)
}

type ScheduledBackupSpecClusterPtrOutput struct{ *pulumi.OutputState }

func (ScheduledBackupSpecClusterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupSpecCluster)(nil)).Elem()
}

func (o ScheduledBackupSpecClusterPtrOutput) ToScheduledBackupSpecClusterPtrOutput() ScheduledBackupSpecClusterPtrOutput {
	return o
}

func (o ScheduledBackupSpecClusterPtrOutput) ToScheduledBackupSpecClusterPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecClusterPtrOutput {
	return o
}

func (o ScheduledBackupSpecClusterPtrOutput) Elem() ScheduledBackupSpecClusterOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecCluster) ScheduledBackupSpecCluster {
		if v != nil {
			return *v
		}
		var ret ScheduledBackupSpecCluster
		return ret
	}).(ScheduledBackupSpecClusterOutput)
}

// Name of the referent.
func (o ScheduledBackupSpecClusterPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecCluster) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Configuration parameters to control the online/hot backup with volume snapshots
// Overrides the default settings specified in the cluster '.backup.volumeSnapshot.onlineConfiguration' stanza
type ScheduledBackupSpecOnlineConfiguration struct {
	// Control whether the I/O workload for the backup initial checkpoint will
	// be limited, according to the `checkpoint_completion_target` setting on
	// the PostgreSQL server. If set to true, an immediate checkpoint will be
	// used, meaning PostgreSQL will complete the checkpoint as soon as
	// possible. `false` by default.
	ImmediateCheckpoint *bool `pulumi:"immediateCheckpoint"`
	// If false, the function will return immediately after the backup is completed,
	// without waiting for WAL to be archived.
	// This behavior is only useful with backup software that independently monitors WAL archiving.
	// Otherwise, WAL required to make the backup consistent might be missing and make the backup useless.
	// By default, or when this parameter is true, pg_backup_stop will wait for WAL to be archived when archiving is
	// enabled.
	// On a standby, this means that it will wait only when archive_mode = always.
	// If write activity on the primary is low, it may be useful to run pg_switch_wal on the primary in order to trigger
	// an immediate segment switch.
	WaitForArchive *bool `pulumi:"waitForArchive"`
}

// Defaults sets the appropriate defaults for ScheduledBackupSpecOnlineConfiguration
func (val *ScheduledBackupSpecOnlineConfiguration) Defaults() *ScheduledBackupSpecOnlineConfiguration {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.WaitForArchive == nil {
		waitForArchive_ := true
		tmp.WaitForArchive = &waitForArchive_
	}
	return &tmp
}

// ScheduledBackupSpecOnlineConfigurationInput is an input type that accepts ScheduledBackupSpecOnlineConfigurationArgs and ScheduledBackupSpecOnlineConfigurationOutput values.
// You can construct a concrete instance of `ScheduledBackupSpecOnlineConfigurationInput` via:
//
//	ScheduledBackupSpecOnlineConfigurationArgs{...}
type ScheduledBackupSpecOnlineConfigurationInput interface {
	pulumi.Input

	ToScheduledBackupSpecOnlineConfigurationOutput() ScheduledBackupSpecOnlineConfigurationOutput
	ToScheduledBackupSpecOnlineConfigurationOutputWithContext(context.Context) ScheduledBackupSpecOnlineConfigurationOutput
}

// Configuration parameters to control the online/hot backup with volume snapshots
// Overrides the default settings specified in the cluster '.backup.volumeSnapshot.onlineConfiguration' stanza
type ScheduledBackupSpecOnlineConfigurationArgs struct {
	// Control whether the I/O workload for the backup initial checkpoint will
	// be limited, according to the `checkpoint_completion_target` setting on
	// the PostgreSQL server. If set to true, an immediate checkpoint will be
	// used, meaning PostgreSQL will complete the checkpoint as soon as
	// possible. `false` by default.
	ImmediateCheckpoint pulumi.BoolPtrInput `pulumi:"immediateCheckpoint"`
	// If false, the function will return immediately after the backup is completed,
	// without waiting for WAL to be archived.
	// This behavior is only useful with backup software that independently monitors WAL archiving.
	// Otherwise, WAL required to make the backup consistent might be missing and make the backup useless.
	// By default, or when this parameter is true, pg_backup_stop will wait for WAL to be archived when archiving is
	// enabled.
	// On a standby, this means that it will wait only when archive_mode = always.
	// If write activity on the primary is low, it may be useful to run pg_switch_wal on the primary in order to trigger
	// an immediate segment switch.
	WaitForArchive pulumi.BoolPtrInput `pulumi:"waitForArchive"`
}

// Defaults sets the appropriate defaults for ScheduledBackupSpecOnlineConfigurationArgs
func (val *ScheduledBackupSpecOnlineConfigurationArgs) Defaults() *ScheduledBackupSpecOnlineConfigurationArgs {
	if val == nil {
		return nil
	}
	tmp := *val
	if tmp.WaitForArchive == nil {
		tmp.WaitForArchive = pulumi.BoolPtr(true)
	}
	return &tmp
}
func (ScheduledBackupSpecOnlineConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupSpecOnlineConfiguration)(nil)).Elem()
}

func (i ScheduledBackupSpecOnlineConfigurationArgs) ToScheduledBackupSpecOnlineConfigurationOutput() ScheduledBackupSpecOnlineConfigurationOutput {
	return i.ToScheduledBackupSpecOnlineConfigurationOutputWithContext(context.Background())
}

func (i ScheduledBackupSpecOnlineConfigurationArgs) ToScheduledBackupSpecOnlineConfigurationOutputWithContext(ctx context.Context) ScheduledBackupSpecOnlineConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecOnlineConfigurationOutput)
}

func (i ScheduledBackupSpecOnlineConfigurationArgs) ToScheduledBackupSpecOnlineConfigurationPtrOutput() ScheduledBackupSpecOnlineConfigurationPtrOutput {
	return i.ToScheduledBackupSpecOnlineConfigurationPtrOutputWithContext(context.Background())
}

func (i ScheduledBackupSpecOnlineConfigurationArgs) ToScheduledBackupSpecOnlineConfigurationPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecOnlineConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecOnlineConfigurationOutput).ToScheduledBackupSpecOnlineConfigurationPtrOutputWithContext(ctx)
}

// ScheduledBackupSpecOnlineConfigurationPtrInput is an input type that accepts ScheduledBackupSpecOnlineConfigurationArgs, ScheduledBackupSpecOnlineConfigurationPtr and ScheduledBackupSpecOnlineConfigurationPtrOutput values.
// You can construct a concrete instance of `ScheduledBackupSpecOnlineConfigurationPtrInput` via:
//
//	        ScheduledBackupSpecOnlineConfigurationArgs{...}
//
//	or:
//
//	        nil
type ScheduledBackupSpecOnlineConfigurationPtrInput interface {
	pulumi.Input

	ToScheduledBackupSpecOnlineConfigurationPtrOutput() ScheduledBackupSpecOnlineConfigurationPtrOutput
	ToScheduledBackupSpecOnlineConfigurationPtrOutputWithContext(context.Context) ScheduledBackupSpecOnlineConfigurationPtrOutput
}

type scheduledBackupSpecOnlineConfigurationPtrType ScheduledBackupSpecOnlineConfigurationArgs

func ScheduledBackupSpecOnlineConfigurationPtr(v *ScheduledBackupSpecOnlineConfigurationArgs) ScheduledBackupSpecOnlineConfigurationPtrInput {
	return (*scheduledBackupSpecOnlineConfigurationPtrType)(v)
}

func (*scheduledBackupSpecOnlineConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupSpecOnlineConfiguration)(nil)).Elem()
}

func (i *scheduledBackupSpecOnlineConfigurationPtrType) ToScheduledBackupSpecOnlineConfigurationPtrOutput() ScheduledBackupSpecOnlineConfigurationPtrOutput {
	return i.ToScheduledBackupSpecOnlineConfigurationPtrOutputWithContext(context.Background())
}

func (i *scheduledBackupSpecOnlineConfigurationPtrType) ToScheduledBackupSpecOnlineConfigurationPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecOnlineConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecOnlineConfigurationPtrOutput)
}

// Configuration parameters to control the online/hot backup with volume snapshots
// Overrides the default settings specified in the cluster '.backup.volumeSnapshot.onlineConfiguration' stanza
type ScheduledBackupSpecOnlineConfigurationOutput struct{ *pulumi.OutputState }

func (ScheduledBackupSpecOnlineConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupSpecOnlineConfiguration)(nil)).Elem()
}

func (o ScheduledBackupSpecOnlineConfigurationOutput) ToScheduledBackupSpecOnlineConfigurationOutput() ScheduledBackupSpecOnlineConfigurationOutput {
	return o
}

func (o ScheduledBackupSpecOnlineConfigurationOutput) ToScheduledBackupSpecOnlineConfigurationOutputWithContext(ctx context.Context) ScheduledBackupSpecOnlineConfigurationOutput {
	return o
}

func (o ScheduledBackupSpecOnlineConfigurationOutput) ToScheduledBackupSpecOnlineConfigurationPtrOutput() ScheduledBackupSpecOnlineConfigurationPtrOutput {
	return o.ToScheduledBackupSpecOnlineConfigurationPtrOutputWithContext(context.Background())
}

func (o ScheduledBackupSpecOnlineConfigurationOutput) ToScheduledBackupSpecOnlineConfigurationPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecOnlineConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledBackupSpecOnlineConfiguration) *ScheduledBackupSpecOnlineConfiguration {
		return &v
	}).(ScheduledBackupSpecOnlineConfigurationPtrOutput)
}

// Control whether the I/O workload for the backup initial checkpoint will
// be limited, according to the `checkpoint_completion_target` setting on
// the PostgreSQL server. If set to true, an immediate checkpoint will be
// used, meaning PostgreSQL will complete the checkpoint as soon as
// possible. `false` by default.
func (o ScheduledBackupSpecOnlineConfigurationOutput) ImmediateCheckpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpecOnlineConfiguration) *bool { return v.ImmediateCheckpoint }).(pulumi.BoolPtrOutput)
}

// If false, the function will return immediately after the backup is completed,
// without waiting for WAL to be archived.
// This behavior is only useful with backup software that independently monitors WAL archiving.
// Otherwise, WAL required to make the backup consistent might be missing and make the backup useless.
// By default, or when this parameter is true, pg_backup_stop will wait for WAL to be archived when archiving is
// enabled.
// On a standby, this means that it will wait only when archive_mode = always.
// If write activity on the primary is low, it may be useful to run pg_switch_wal on the primary in order to trigger
// an immediate segment switch.
func (o ScheduledBackupSpecOnlineConfigurationOutput) WaitForArchive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScheduledBackupSpecOnlineConfiguration) *bool { return v.WaitForArchive }).(pulumi.BoolPtrOutput)
}

type ScheduledBackupSpecOnlineConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ScheduledBackupSpecOnlineConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupSpecOnlineConfiguration)(nil)).Elem()
}

func (o ScheduledBackupSpecOnlineConfigurationPtrOutput) ToScheduledBackupSpecOnlineConfigurationPtrOutput() ScheduledBackupSpecOnlineConfigurationPtrOutput {
	return o
}

func (o ScheduledBackupSpecOnlineConfigurationPtrOutput) ToScheduledBackupSpecOnlineConfigurationPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecOnlineConfigurationPtrOutput {
	return o
}

func (o ScheduledBackupSpecOnlineConfigurationPtrOutput) Elem() ScheduledBackupSpecOnlineConfigurationOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecOnlineConfiguration) ScheduledBackupSpecOnlineConfiguration {
		if v != nil {
			return *v
		}
		var ret ScheduledBackupSpecOnlineConfiguration
		return ret
	}).(ScheduledBackupSpecOnlineConfigurationOutput)
}

// Control whether the I/O workload for the backup initial checkpoint will
// be limited, according to the `checkpoint_completion_target` setting on
// the PostgreSQL server. If set to true, an immediate checkpoint will be
// used, meaning PostgreSQL will complete the checkpoint as soon as
// possible. `false` by default.
func (o ScheduledBackupSpecOnlineConfigurationPtrOutput) ImmediateCheckpoint() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecOnlineConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.ImmediateCheckpoint
	}).(pulumi.BoolPtrOutput)
}

// If false, the function will return immediately after the backup is completed,
// without waiting for WAL to be archived.
// This behavior is only useful with backup software that independently monitors WAL archiving.
// Otherwise, WAL required to make the backup consistent might be missing and make the backup useless.
// By default, or when this parameter is true, pg_backup_stop will wait for WAL to be archived when archiving is
// enabled.
// On a standby, this means that it will wait only when archive_mode = always.
// If write activity on the primary is low, it may be useful to run pg_switch_wal on the primary in order to trigger
// an immediate segment switch.
func (o ScheduledBackupSpecOnlineConfigurationPtrOutput) WaitForArchive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecOnlineConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.WaitForArchive
	}).(pulumi.BoolPtrOutput)
}

// Configuration parameters passed to the plugin managing this backup
type ScheduledBackupSpecPluginConfiguration struct {
	// Name is the name of the plugin managing this backup
	Name string `pulumi:"name"`
	// Parameters are the configuration parameters passed to the backup
	// plugin for this backup
	Parameters map[string]string `pulumi:"parameters"`
}

// ScheduledBackupSpecPluginConfigurationInput is an input type that accepts ScheduledBackupSpecPluginConfigurationArgs and ScheduledBackupSpecPluginConfigurationOutput values.
// You can construct a concrete instance of `ScheduledBackupSpecPluginConfigurationInput` via:
//
//	ScheduledBackupSpecPluginConfigurationArgs{...}
type ScheduledBackupSpecPluginConfigurationInput interface {
	pulumi.Input

	ToScheduledBackupSpecPluginConfigurationOutput() ScheduledBackupSpecPluginConfigurationOutput
	ToScheduledBackupSpecPluginConfigurationOutputWithContext(context.Context) ScheduledBackupSpecPluginConfigurationOutput
}

// Configuration parameters passed to the plugin managing this backup
type ScheduledBackupSpecPluginConfigurationArgs struct {
	// Name is the name of the plugin managing this backup
	Name pulumi.StringInput `pulumi:"name"`
	// Parameters are the configuration parameters passed to the backup
	// plugin for this backup
	Parameters pulumi.StringMapInput `pulumi:"parameters"`
}

func (ScheduledBackupSpecPluginConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupSpecPluginConfiguration)(nil)).Elem()
}

func (i ScheduledBackupSpecPluginConfigurationArgs) ToScheduledBackupSpecPluginConfigurationOutput() ScheduledBackupSpecPluginConfigurationOutput {
	return i.ToScheduledBackupSpecPluginConfigurationOutputWithContext(context.Background())
}

func (i ScheduledBackupSpecPluginConfigurationArgs) ToScheduledBackupSpecPluginConfigurationOutputWithContext(ctx context.Context) ScheduledBackupSpecPluginConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecPluginConfigurationOutput)
}

func (i ScheduledBackupSpecPluginConfigurationArgs) ToScheduledBackupSpecPluginConfigurationPtrOutput() ScheduledBackupSpecPluginConfigurationPtrOutput {
	return i.ToScheduledBackupSpecPluginConfigurationPtrOutputWithContext(context.Background())
}

func (i ScheduledBackupSpecPluginConfigurationArgs) ToScheduledBackupSpecPluginConfigurationPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecPluginConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecPluginConfigurationOutput).ToScheduledBackupSpecPluginConfigurationPtrOutputWithContext(ctx)
}

// ScheduledBackupSpecPluginConfigurationPtrInput is an input type that accepts ScheduledBackupSpecPluginConfigurationArgs, ScheduledBackupSpecPluginConfigurationPtr and ScheduledBackupSpecPluginConfigurationPtrOutput values.
// You can construct a concrete instance of `ScheduledBackupSpecPluginConfigurationPtrInput` via:
//
//	        ScheduledBackupSpecPluginConfigurationArgs{...}
//
//	or:
//
//	        nil
type ScheduledBackupSpecPluginConfigurationPtrInput interface {
	pulumi.Input

	ToScheduledBackupSpecPluginConfigurationPtrOutput() ScheduledBackupSpecPluginConfigurationPtrOutput
	ToScheduledBackupSpecPluginConfigurationPtrOutputWithContext(context.Context) ScheduledBackupSpecPluginConfigurationPtrOutput
}

type scheduledBackupSpecPluginConfigurationPtrType ScheduledBackupSpecPluginConfigurationArgs

func ScheduledBackupSpecPluginConfigurationPtr(v *ScheduledBackupSpecPluginConfigurationArgs) ScheduledBackupSpecPluginConfigurationPtrInput {
	return (*scheduledBackupSpecPluginConfigurationPtrType)(v)
}

func (*scheduledBackupSpecPluginConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupSpecPluginConfiguration)(nil)).Elem()
}

func (i *scheduledBackupSpecPluginConfigurationPtrType) ToScheduledBackupSpecPluginConfigurationPtrOutput() ScheduledBackupSpecPluginConfigurationPtrOutput {
	return i.ToScheduledBackupSpecPluginConfigurationPtrOutputWithContext(context.Background())
}

func (i *scheduledBackupSpecPluginConfigurationPtrType) ToScheduledBackupSpecPluginConfigurationPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecPluginConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupSpecPluginConfigurationPtrOutput)
}

// Configuration parameters passed to the plugin managing this backup
type ScheduledBackupSpecPluginConfigurationOutput struct{ *pulumi.OutputState }

func (ScheduledBackupSpecPluginConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupSpecPluginConfiguration)(nil)).Elem()
}

func (o ScheduledBackupSpecPluginConfigurationOutput) ToScheduledBackupSpecPluginConfigurationOutput() ScheduledBackupSpecPluginConfigurationOutput {
	return o
}

func (o ScheduledBackupSpecPluginConfigurationOutput) ToScheduledBackupSpecPluginConfigurationOutputWithContext(ctx context.Context) ScheduledBackupSpecPluginConfigurationOutput {
	return o
}

func (o ScheduledBackupSpecPluginConfigurationOutput) ToScheduledBackupSpecPluginConfigurationPtrOutput() ScheduledBackupSpecPluginConfigurationPtrOutput {
	return o.ToScheduledBackupSpecPluginConfigurationPtrOutputWithContext(context.Background())
}

func (o ScheduledBackupSpecPluginConfigurationOutput) ToScheduledBackupSpecPluginConfigurationPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecPluginConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledBackupSpecPluginConfiguration) *ScheduledBackupSpecPluginConfiguration {
		return &v
	}).(ScheduledBackupSpecPluginConfigurationPtrOutput)
}

// Name is the name of the plugin managing this backup
func (o ScheduledBackupSpecPluginConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledBackupSpecPluginConfiguration) string { return v.Name }).(pulumi.StringOutput)
}

// Parameters are the configuration parameters passed to the backup
// plugin for this backup
func (o ScheduledBackupSpecPluginConfigurationOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v ScheduledBackupSpecPluginConfiguration) map[string]string { return v.Parameters }).(pulumi.StringMapOutput)
}

type ScheduledBackupSpecPluginConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ScheduledBackupSpecPluginConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupSpecPluginConfiguration)(nil)).Elem()
}

func (o ScheduledBackupSpecPluginConfigurationPtrOutput) ToScheduledBackupSpecPluginConfigurationPtrOutput() ScheduledBackupSpecPluginConfigurationPtrOutput {
	return o
}

func (o ScheduledBackupSpecPluginConfigurationPtrOutput) ToScheduledBackupSpecPluginConfigurationPtrOutputWithContext(ctx context.Context) ScheduledBackupSpecPluginConfigurationPtrOutput {
	return o
}

func (o ScheduledBackupSpecPluginConfigurationPtrOutput) Elem() ScheduledBackupSpecPluginConfigurationOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecPluginConfiguration) ScheduledBackupSpecPluginConfiguration {
		if v != nil {
			return *v
		}
		var ret ScheduledBackupSpecPluginConfiguration
		return ret
	}).(ScheduledBackupSpecPluginConfigurationOutput)
}

// Name is the name of the plugin managing this backup
func (o ScheduledBackupSpecPluginConfigurationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecPluginConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Parameters are the configuration parameters passed to the backup
// plugin for this backup
func (o ScheduledBackupSpecPluginConfigurationPtrOutput) Parameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ScheduledBackupSpecPluginConfiguration) map[string]string {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(pulumi.StringMapOutput)
}

// Parameters are the configuration parameters passed to the backup
// plugin for this backup
type ScheduledBackupSpecPluginConfigurationParameters struct {
}

// Most recently observed status of the ScheduledBackup. This data may not be up
// to date. Populated by the system. Read-only.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type ScheduledBackupStatus struct {
	// The latest time the schedule
	LastCheckTime *string `pulumi:"lastCheckTime"`
	// Information when was the last time that backup was successfully scheduled.
	LastScheduleTime *string `pulumi:"lastScheduleTime"`
	// Next time we will run a backup
	NextScheduleTime *string `pulumi:"nextScheduleTime"`
}

// ScheduledBackupStatusInput is an input type that accepts ScheduledBackupStatusArgs and ScheduledBackupStatusOutput values.
// You can construct a concrete instance of `ScheduledBackupStatusInput` via:
//
//	ScheduledBackupStatusArgs{...}
type ScheduledBackupStatusInput interface {
	pulumi.Input

	ToScheduledBackupStatusOutput() ScheduledBackupStatusOutput
	ToScheduledBackupStatusOutputWithContext(context.Context) ScheduledBackupStatusOutput
}

// Most recently observed status of the ScheduledBackup. This data may not be up
// to date. Populated by the system. Read-only.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type ScheduledBackupStatusArgs struct {
	// The latest time the schedule
	LastCheckTime pulumi.StringPtrInput `pulumi:"lastCheckTime"`
	// Information when was the last time that backup was successfully scheduled.
	LastScheduleTime pulumi.StringPtrInput `pulumi:"lastScheduleTime"`
	// Next time we will run a backup
	NextScheduleTime pulumi.StringPtrInput `pulumi:"nextScheduleTime"`
}

func (ScheduledBackupStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupStatus)(nil)).Elem()
}

func (i ScheduledBackupStatusArgs) ToScheduledBackupStatusOutput() ScheduledBackupStatusOutput {
	return i.ToScheduledBackupStatusOutputWithContext(context.Background())
}

func (i ScheduledBackupStatusArgs) ToScheduledBackupStatusOutputWithContext(ctx context.Context) ScheduledBackupStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupStatusOutput)
}

func (i ScheduledBackupStatusArgs) ToScheduledBackupStatusPtrOutput() ScheduledBackupStatusPtrOutput {
	return i.ToScheduledBackupStatusPtrOutputWithContext(context.Background())
}

func (i ScheduledBackupStatusArgs) ToScheduledBackupStatusPtrOutputWithContext(ctx context.Context) ScheduledBackupStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupStatusOutput).ToScheduledBackupStatusPtrOutputWithContext(ctx)
}

// ScheduledBackupStatusPtrInput is an input type that accepts ScheduledBackupStatusArgs, ScheduledBackupStatusPtr and ScheduledBackupStatusPtrOutput values.
// You can construct a concrete instance of `ScheduledBackupStatusPtrInput` via:
//
//	        ScheduledBackupStatusArgs{...}
//
//	or:
//
//	        nil
type ScheduledBackupStatusPtrInput interface {
	pulumi.Input

	ToScheduledBackupStatusPtrOutput() ScheduledBackupStatusPtrOutput
	ToScheduledBackupStatusPtrOutputWithContext(context.Context) ScheduledBackupStatusPtrOutput
}

type scheduledBackupStatusPtrType ScheduledBackupStatusArgs

func ScheduledBackupStatusPtr(v *ScheduledBackupStatusArgs) ScheduledBackupStatusPtrInput {
	return (*scheduledBackupStatusPtrType)(v)
}

func (*scheduledBackupStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupStatus)(nil)).Elem()
}

func (i *scheduledBackupStatusPtrType) ToScheduledBackupStatusPtrOutput() ScheduledBackupStatusPtrOutput {
	return i.ToScheduledBackupStatusPtrOutputWithContext(context.Background())
}

func (i *scheduledBackupStatusPtrType) ToScheduledBackupStatusPtrOutputWithContext(ctx context.Context) ScheduledBackupStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledBackupStatusPtrOutput)
}

// Most recently observed status of the ScheduledBackup. This data may not be up
// to date. Populated by the system. Read-only.
// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
type ScheduledBackupStatusOutput struct{ *pulumi.OutputState }

func (ScheduledBackupStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledBackupStatus)(nil)).Elem()
}

func (o ScheduledBackupStatusOutput) ToScheduledBackupStatusOutput() ScheduledBackupStatusOutput {
	return o
}

func (o ScheduledBackupStatusOutput) ToScheduledBackupStatusOutputWithContext(ctx context.Context) ScheduledBackupStatusOutput {
	return o
}

func (o ScheduledBackupStatusOutput) ToScheduledBackupStatusPtrOutput() ScheduledBackupStatusPtrOutput {
	return o.ToScheduledBackupStatusPtrOutputWithContext(context.Background())
}

func (o ScheduledBackupStatusOutput) ToScheduledBackupStatusPtrOutputWithContext(ctx context.Context) ScheduledBackupStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledBackupStatus) *ScheduledBackupStatus {
		return &v
	}).(ScheduledBackupStatusPtrOutput)
}

// The latest time the schedule
func (o ScheduledBackupStatusOutput) LastCheckTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupStatus) *string { return v.LastCheckTime }).(pulumi.StringPtrOutput)
}

// Information when was the last time that backup was successfully scheduled.
func (o ScheduledBackupStatusOutput) LastScheduleTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupStatus) *string { return v.LastScheduleTime }).(pulumi.StringPtrOutput)
}

// Next time we will run a backup
func (o ScheduledBackupStatusOutput) NextScheduleTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledBackupStatus) *string { return v.NextScheduleTime }).(pulumi.StringPtrOutput)
}

type ScheduledBackupStatusPtrOutput struct{ *pulumi.OutputState }

func (ScheduledBackupStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledBackupStatus)(nil)).Elem()
}

func (o ScheduledBackupStatusPtrOutput) ToScheduledBackupStatusPtrOutput() ScheduledBackupStatusPtrOutput {
	return o
}

func (o ScheduledBackupStatusPtrOutput) ToScheduledBackupStatusPtrOutputWithContext(ctx context.Context) ScheduledBackupStatusPtrOutput {
	return o
}

func (o ScheduledBackupStatusPtrOutput) Elem() ScheduledBackupStatusOutput {
	return o.ApplyT(func(v *ScheduledBackupStatus) ScheduledBackupStatus {
		if v != nil {
			return *v
		}
		var ret ScheduledBackupStatus
		return ret
	}).(ScheduledBackupStatusOutput)
}

// The latest time the schedule
func (o ScheduledBackupStatusPtrOutput) LastCheckTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupStatus) *string {
		if v == nil {
			return nil
		}
		return v.LastCheckTime
	}).(pulumi.StringPtrOutput)
}

// Information when was the last time that backup was successfully scheduled.
func (o ScheduledBackupStatusPtrOutput) LastScheduleTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupStatus) *string {
		if v == nil {
			return nil
		}
		return v.LastScheduleTime
	}).(pulumi.StringPtrOutput)
}

// Next time we will run a backup
func (o ScheduledBackupStatusPtrOutput) NextScheduleTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledBackupStatus) *string {
		if v == nil {
			return nil
		}
		return v.NextScheduleTime
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePreStopInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLifecyclePreStopArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLifecyclePreStopArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLivenessProbeInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLivenessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLivenessProbePtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLivenessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLivenessProbeExecInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLivenessProbeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLivenessProbeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersPortsInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersPortsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersPortsArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersPortsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersReadinessProbeInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersReadinessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersReadinessProbePtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersReadinessProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersReadinessProbeExecInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersReadinessProbeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersReadinessProbeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersResizePolicyInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersResizePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersResizePolicyArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersResizePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersResourcesInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersResourcesPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersResourcesClaimsInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersResourcesClaimsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersResourcesClaimsArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersResourcesClaimsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersSecurityContextInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersSecurityContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersSecurityContextPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersSecurityContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersStartupProbeInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersStartupProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersStartupProbePtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersStartupProbeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersStartupProbeExecInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersStartupProbeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersStartupProbeExecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersStartupProbeGrpcInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersStartupProbeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersStartupProbeGrpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersVolumeDevicesInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersVolumeDevicesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersVolumeDevicesArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersVolumeDevicesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersVolumeMountsInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersVolumeMountsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecInitContainersVolumeMountsArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecInitContainersVolumeMountsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecOsInput)(nil)).Elem(), PoolerSpecTemplateSpecOsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecOsPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecOsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecReadinessGatesInput)(nil)).Elem(), PoolerSpecTemplateSpecReadinessGatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecReadinessGatesArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecReadinessGatesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecResourceClaimsInput)(nil)).Elem(), PoolerSpecTemplateSpecResourceClaimsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecResourceClaimsArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecResourceClaimsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecResourceClaimsSourceInput)(nil)).Elem(), PoolerSpecTemplateSpecResourceClaimsSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecResourceClaimsSourcePtrInput)(nil)).Elem(), PoolerSpecTemplateSpecResourceClaimsSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecSchedulingGatesInput)(nil)).Elem(), PoolerSpecTemplateSpecSchedulingGatesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecSchedulingGatesArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecSchedulingGatesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecSecurityContextInput)(nil)).Elem(), PoolerSpecTemplateSpecSecurityContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecSecurityContextPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecSecurityContextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecSecurityContextAppArmorProfileInput)(nil)).Elem(), PoolerSpecTemplateSpecSecurityContextAppArmorProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrInput)(nil)).Elem(), PoolerSpecTemplateSpecSecurityContextAppArmorProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsInput)(nil)).Elem(), PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecSecurityContextSeccompProfileInput)(nil)).Elem(), PoolerSpecTemplateSpecSecurityContextSeccompProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrInput)(nil)).Elem(), PoolerSpecTemplateSpecSecurityContextSeccompProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecSecurityContextSysctlsInput)(nil)).Elem(), PoolerSpecTemplateSpecSecurityContextSysctlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecSecurityContextSysctlsArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecSecurityContextSysctlsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecSecurityContextWindowsOptionsInput)(nil)).Elem(), PoolerSpecTemplateSpecSecurityContextWindowsOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecSecurityContextWindowsOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecTolerationsInput)(nil)).Elem(), PoolerSpecTemplateSpecTolerationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecTolerationsArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecTolerationsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecTopologySpreadConstraintsInput)(nil)).Elem(), PoolerSpecTemplateSpecTopologySpreadConstraintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecTopologySpreadConstraintsArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecTopologySpreadConstraintsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorInput)(nil)).Elem(), PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsInput)(nil)).Elem(), PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesAzureDiskInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesAzureDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesAzureDiskPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesAzureDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesAzureFileInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesAzureFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesAzureFilePtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesAzureFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCephfsInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesCephfsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCephfsPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesCephfsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCephfsSecretRefInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesCephfsSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesCephfsSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCinderInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesCinderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCinderPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesCinderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCinderSecretRefInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesCinderSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCinderSecretRefPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesCinderSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesConfigMapInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesConfigMapPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesConfigMapItemsInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesConfigMapItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesConfigMapItemsArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesConfigMapItemsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCsiInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesCsiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCsiPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesCsiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardApiInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesDownwardApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardApiPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesDownwardApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardApiItemsInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesDownwardApiItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardApiItemsArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesDownwardApiItemsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEmptyDirInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEmptyDirArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEmptyDirPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEmptyDirArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFcInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesFcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFcPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesFcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlexVolumeInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesFlexVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlexVolumePtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesFlexVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlockerInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesFlockerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesFlockerPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesFlockerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGcePersistentDiskInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesGcePersistentDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGitRepoInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesGitRepoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGitRepoPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesGitRepoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGlusterfsInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesGlusterfsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesGlusterfsPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesGlusterfsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesHostPathInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesHostPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesHostPathPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesHostPathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesIscsiInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesIscsiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesIscsiPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesIscsiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesIscsiSecretRefInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesIscsiSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesNfsInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesNfsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesNfsPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesNfsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPersistentVolumeClaimInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesPersistentVolumeClaimArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPhotonPersistentDiskInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesPhotonPersistentDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPortworxVolumeInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesPortworxVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesPortworxVolumePtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesPortworxVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesSecretInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesQuobyteInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesQuobyteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesQuobytePtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesQuobyteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesRbdInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesRbdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesRbdPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesRbdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesRbdSecretRefInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesRbdSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesRbdSecretRefPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesRbdSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesScaleIoInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesScaleIoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesScaleIoPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesScaleIoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesScaleIoSecretRefInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesScaleIoSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesScaleIoSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesSecretInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesSecretPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesSecretItemsInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesSecretItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesSecretItemsArrayInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesSecretItemsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesStorageosInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesStorageosArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesStorageosPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesStorageosArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesStorageosSecretRefInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesStorageosSecretRefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesVsphereVolumeInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesVsphereVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerSpecTemplateSpecVolumesVsphereVolumePtrInput)(nil)).Elem(), PoolerSpecTemplateSpecVolumesVsphereVolumeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusInput)(nil)).Elem(), PoolerStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusPtrInput)(nil)).Elem(), PoolerStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsInput)(nil)).Elem(), PoolerStatusSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsPtrInput)(nil)).Elem(), PoolerStatusSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsClientCaInput)(nil)).Elem(), PoolerStatusSecretsClientCaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsClientCaPtrInput)(nil)).Elem(), PoolerStatusSecretsClientCaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsPgBouncerSecretsInput)(nil)).Elem(), PoolerStatusSecretsPgBouncerSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsPgBouncerSecretsPtrInput)(nil)).Elem(), PoolerStatusSecretsPgBouncerSecretsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsPgBouncerSecretsAuthQueryInput)(nil)).Elem(), PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrInput)(nil)).Elem(), PoolerStatusSecretsPgBouncerSecretsAuthQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsServerCaInput)(nil)).Elem(), PoolerStatusSecretsServerCaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsServerCaPtrInput)(nil)).Elem(), PoolerStatusSecretsServerCaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsServerTlsInput)(nil)).Elem(), PoolerStatusSecretsServerTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PoolerStatusSecretsServerTlsPtrInput)(nil)).Elem(), PoolerStatusSecretsServerTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupSpecInput)(nil)).Elem(), ScheduledBackupSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupSpecPtrInput)(nil)).Elem(), ScheduledBackupSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupSpecClusterInput)(nil)).Elem(), ScheduledBackupSpecClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupSpecClusterPtrInput)(nil)).Elem(), ScheduledBackupSpecClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupSpecOnlineConfigurationInput)(nil)).Elem(), ScheduledBackupSpecOnlineConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupSpecOnlineConfigurationPtrInput)(nil)).Elem(), ScheduledBackupSpecOnlineConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupSpecPluginConfigurationInput)(nil)).Elem(), ScheduledBackupSpecPluginConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupSpecPluginConfigurationPtrInput)(nil)).Elem(), ScheduledBackupSpecPluginConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupStatusInput)(nil)).Elem(), ScheduledBackupStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledBackupStatusPtrInput)(nil)).Elem(), ScheduledBackupStatusArgs{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLifecyclePostStartSleepPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLifecyclePostStartTcpSocketPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLifecyclePreStopOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLifecyclePreStopPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLifecyclePreStopExecPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLifecyclePreStopHttpGetHttpHeadersArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLifecyclePreStopSleepPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLifecyclePreStopTcpSocketPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLivenessProbeOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLivenessProbePtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLivenessProbeExecOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLivenessProbeExecPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLivenessProbeGrpcPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLivenessProbeHttpGetHttpHeadersArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersLivenessProbeTcpSocketPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersPortsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersPortsArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersReadinessProbeOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersReadinessProbePtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersReadinessProbeExecOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersReadinessProbeExecPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersReadinessProbeGrpcPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersReadinessProbeHttpGetHttpHeadersArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersReadinessProbeTcpSocketPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersResizePolicyOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersResizePolicyArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersResourcesOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersResourcesPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersResourcesClaimsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersResourcesClaimsArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersSecurityContextOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersSecurityContextPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfileOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersSecurityContextAppArmorProfilePtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersSecurityContextCapabilitiesPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersSecurityContextSeLinuxOptionsPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfileOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersSecurityContextSeccompProfilePtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersSecurityContextWindowsOptionsPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersStartupProbeOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersStartupProbePtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersStartupProbeExecOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersStartupProbeExecPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersStartupProbeGrpcOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersStartupProbeGrpcPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersStartupProbeHttpGetHttpHeadersArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersStartupProbeTcpSocketPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersVolumeDevicesOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersVolumeDevicesArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersVolumeMountsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecInitContainersVolumeMountsArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecOsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecOsPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecReadinessGatesOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecReadinessGatesArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecResourceClaimsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecResourceClaimsArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecResourceClaimsSourceOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecResourceClaimsSourcePtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecSchedulingGatesOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecSchedulingGatesArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecSecurityContextOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecSecurityContextPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecSecurityContextAppArmorProfileOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecSecurityContextAppArmorProfilePtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecSecurityContextSeLinuxOptionsPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecSecurityContextSeccompProfileOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecSecurityContextSeccompProfilePtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecSecurityContextSysctlsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecSecurityContextSysctlsArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecSecurityContextWindowsOptionsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecSecurityContextWindowsOptionsPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecTolerationsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecTolerationsArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecTopologySpreadConstraintsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecTopologySpreadConstraintsArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecTopologySpreadConstraintsLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesAwsElasticBlockStoreOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesAwsElasticBlockStorePtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesAzureDiskOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesAzureDiskPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesAzureFileOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesAzureFilePtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesCephfsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesCephfsPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesCephfsSecretRefOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesCephfsSecretRefPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesCinderOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesCinderPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesCinderSecretRefOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesCinderSecretRefPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesConfigMapOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesConfigMapPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesConfigMapItemsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesConfigMapItemsArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesCsiOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesCsiPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesCsiNodePublishSecretRefPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesDownwardApiOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesDownwardApiPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesDownwardApiItemsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesDownwardApiItemsArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesDownwardApiItemsFieldRefPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesDownwardApiItemsResourceFieldRefPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEmptyDirOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEmptyDirPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplatePtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourcePtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecDataSourceRefPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesFcOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesFcPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesFlexVolumeOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesFlexVolumePtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesFlexVolumeSecretRefPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesFlockerOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesFlockerPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesGcePersistentDiskOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesGcePersistentDiskPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesGitRepoOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesGitRepoPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesGlusterfsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesGlusterfsPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesHostPathOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesHostPathPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesIscsiOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesIscsiPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesIscsiSecretRefOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesIscsiSecretRefPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesNfsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesNfsPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesPersistentVolumeClaimOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesPersistentVolumeClaimPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesPhotonPersistentDiskOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesPhotonPersistentDiskPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesPortworxVolumeOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesPortworxVolumePtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundlePtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesClusterTrustBundleLabelSelectorMatchExpressionsArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesConfigMapItemsArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsFieldRefPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesSecretItemsArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesProjectedSourcesServiceAccountTokenPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesQuobyteOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesQuobytePtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesRbdOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesRbdPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesRbdSecretRefOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesRbdSecretRefPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesScaleIoOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesScaleIoPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesScaleIoSecretRefOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesScaleIoSecretRefPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesSecretOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesSecretPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesSecretItemsOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesSecretItemsArrayOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesStorageosOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesStorageosPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesStorageosSecretRefOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesStorageosSecretRefPtrOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesVsphereVolumeOutput{})
	pulumi.RegisterOutputType(PoolerSpecTemplateSpecVolumesVsphereVolumePtrOutput{})
	pulumi.RegisterOutputType(PoolerStatusOutput{})
	pulumi.RegisterOutputType(PoolerStatusPtrOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsPtrOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsClientCaOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsClientCaPtrOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsPgBouncerSecretsOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsPgBouncerSecretsPtrOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsPgBouncerSecretsAuthQueryOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsPgBouncerSecretsAuthQueryPtrOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsServerCaOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsServerCaPtrOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsServerTlsOutput{})
	pulumi.RegisterOutputType(PoolerStatusSecretsServerTlsPtrOutput{})
	pulumi.RegisterOutputType(ScheduledBackupSpecOutput{})
	pulumi.RegisterOutputType(ScheduledBackupSpecPtrOutput{})
	pulumi.RegisterOutputType(ScheduledBackupSpecClusterOutput{})
	pulumi.RegisterOutputType(ScheduledBackupSpecClusterPtrOutput{})
	pulumi.RegisterOutputType(ScheduledBackupSpecOnlineConfigurationOutput{})
	pulumi.RegisterOutputType(ScheduledBackupSpecOnlineConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ScheduledBackupSpecPluginConfigurationOutput{})
	pulumi.RegisterOutputType(ScheduledBackupSpecPluginConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ScheduledBackupStatusOutput{})
	pulumi.RegisterOutputType(ScheduledBackupStatusPtrOutput{})
}
