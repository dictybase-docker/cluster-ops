// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v2alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ArangoDeployment struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
}

// NewArangoDeployment registers a new resource with the given unique name, arguments, and options.
func NewArangoDeployment(ctx *pulumi.Context,
	name string, args *ArangoDeploymentArgs, opts ...pulumi.ResourceOption) (*ArangoDeployment, error) {
	if args == nil {
		args = &ArangoDeploymentArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("analytics.arangodb.com/v1alpha1")
	args.Kind = pulumi.StringPtr("GraphAnalyticsEngine")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ArangoDeployment
	err := ctx.RegisterResource("kubernetes:database.arangodb.com/v2alpha1:ArangoDeployment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetArangoDeployment gets an existing ArangoDeployment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetArangoDeployment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ArangoDeploymentState, opts ...pulumi.ResourceOption) (*ArangoDeployment, error) {
	var resource ArangoDeployment
	err := ctx.ReadResource("kubernetes:database.arangodb.com/v2alpha1:ArangoDeployment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ArangoDeployment resources.
type arangoDeploymentState struct {
}

type ArangoDeploymentState struct {
}

func (ArangoDeploymentState) ElementType() reflect.Type {
	return reflect.TypeOf((*arangoDeploymentState)(nil)).Elem()
}

type arangoDeploymentArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a ArangoDeployment resource.
type ArangoDeploymentArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
}

func (ArangoDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*arangoDeploymentArgs)(nil)).Elem()
}

type ArangoDeploymentInput interface {
	pulumi.Input

	ToArangoDeploymentOutput() ArangoDeploymentOutput
	ToArangoDeploymentOutputWithContext(ctx context.Context) ArangoDeploymentOutput
}

func (*ArangoDeployment) ElementType() reflect.Type {
	return reflect.TypeOf((**ArangoDeployment)(nil)).Elem()
}

func (i *ArangoDeployment) ToArangoDeploymentOutput() ArangoDeploymentOutput {
	return i.ToArangoDeploymentOutputWithContext(context.Background())
}

func (i *ArangoDeployment) ToArangoDeploymentOutputWithContext(ctx context.Context) ArangoDeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArangoDeploymentOutput)
}

type ArangoDeploymentOutput struct{ *pulumi.OutputState }

func (ArangoDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArangoDeployment)(nil)).Elem()
}

func (o ArangoDeploymentOutput) ToArangoDeploymentOutput() ArangoDeploymentOutput {
	return o
}

func (o ArangoDeploymentOutput) ToArangoDeploymentOutputWithContext(ctx context.Context) ArangoDeploymentOutput {
	return o
}

func (o ArangoDeploymentOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArangoDeployment) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ArangoDeploymentOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArangoDeployment) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ArangoDeploymentOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v *ArangoDeployment) metav1.ObjectMetaPtrOutput { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ArangoDeploymentInput)(nil)).Elem(), &ArangoDeployment{})
	pulumi.RegisterOutputType(ArangoDeploymentOutput{})
}
