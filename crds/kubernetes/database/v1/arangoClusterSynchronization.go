// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ArangoClusterSynchronization struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
}

// NewArangoClusterSynchronization registers a new resource with the given unique name, arguments, and options.
func NewArangoClusterSynchronization(ctx *pulumi.Context,
	name string, args *ArangoClusterSynchronizationArgs, opts ...pulumi.ResourceOption) (*ArangoClusterSynchronization, error) {
	if args == nil {
		args = &ArangoClusterSynchronizationArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("analytics.arangodb.com/v1alpha1")
	args.Kind = pulumi.StringPtr("GraphAnalyticsEngine")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ArangoClusterSynchronization
	err := ctx.RegisterResource("kubernetes:database.arangodb.com/v1:ArangoClusterSynchronization", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetArangoClusterSynchronization gets an existing ArangoClusterSynchronization resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetArangoClusterSynchronization(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ArangoClusterSynchronizationState, opts ...pulumi.ResourceOption) (*ArangoClusterSynchronization, error) {
	var resource ArangoClusterSynchronization
	err := ctx.ReadResource("kubernetes:database.arangodb.com/v1:ArangoClusterSynchronization", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ArangoClusterSynchronization resources.
type arangoClusterSynchronizationState struct {
}

type ArangoClusterSynchronizationState struct {
}

func (ArangoClusterSynchronizationState) ElementType() reflect.Type {
	return reflect.TypeOf((*arangoClusterSynchronizationState)(nil)).Elem()
}

type arangoClusterSynchronizationArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a ArangoClusterSynchronization resource.
type ArangoClusterSynchronizationArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
}

func (ArangoClusterSynchronizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*arangoClusterSynchronizationArgs)(nil)).Elem()
}

type ArangoClusterSynchronizationInput interface {
	pulumi.Input

	ToArangoClusterSynchronizationOutput() ArangoClusterSynchronizationOutput
	ToArangoClusterSynchronizationOutputWithContext(ctx context.Context) ArangoClusterSynchronizationOutput
}

func (*ArangoClusterSynchronization) ElementType() reflect.Type {
	return reflect.TypeOf((**ArangoClusterSynchronization)(nil)).Elem()
}

func (i *ArangoClusterSynchronization) ToArangoClusterSynchronizationOutput() ArangoClusterSynchronizationOutput {
	return i.ToArangoClusterSynchronizationOutputWithContext(context.Background())
}

func (i *ArangoClusterSynchronization) ToArangoClusterSynchronizationOutputWithContext(ctx context.Context) ArangoClusterSynchronizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArangoClusterSynchronizationOutput)
}

type ArangoClusterSynchronizationOutput struct{ *pulumi.OutputState }

func (ArangoClusterSynchronizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArangoClusterSynchronization)(nil)).Elem()
}

func (o ArangoClusterSynchronizationOutput) ToArangoClusterSynchronizationOutput() ArangoClusterSynchronizationOutput {
	return o
}

func (o ArangoClusterSynchronizationOutput) ToArangoClusterSynchronizationOutputWithContext(ctx context.Context) ArangoClusterSynchronizationOutput {
	return o
}

func (o ArangoClusterSynchronizationOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArangoClusterSynchronization) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ArangoClusterSynchronizationOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArangoClusterSynchronization) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ArangoClusterSynchronizationOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v *ArangoClusterSynchronization) metav1.ObjectMetaPtrOutput { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ArangoClusterSynchronizationInput)(nil)).Elem(), &ArangoClusterSynchronization{})
	pulumi.RegisterOutputType(ArangoClusterSynchronizationOutput{})
}
