// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ArangoMember struct {
	pulumi.CustomResourceState

	ApiVersion pulumi.StringPtrOutput     `pulumi:"apiVersion"`
	Kind       pulumi.StringPtrOutput     `pulumi:"kind"`
	Metadata   metav1.ObjectMetaPtrOutput `pulumi:"metadata"`
}

// NewArangoMember registers a new resource with the given unique name, arguments, and options.
func NewArangoMember(ctx *pulumi.Context,
	name string, args *ArangoMemberArgs, opts ...pulumi.ResourceOption) (*ArangoMember, error) {
	if args == nil {
		args = &ArangoMemberArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("analytics.arangodb.com/v1alpha1")
	args.Kind = pulumi.StringPtr("GraphAnalyticsEngine")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ArangoMember
	err := ctx.RegisterResource("kubernetes:database.arangodb.com/v1:ArangoMember", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetArangoMember gets an existing ArangoMember resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetArangoMember(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ArangoMemberState, opts ...pulumi.ResourceOption) (*ArangoMember, error) {
	var resource ArangoMember
	err := ctx.ReadResource("kubernetes:database.arangodb.com/v1:ArangoMember", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ArangoMember resources.
type arangoMemberState struct {
}

type ArangoMemberState struct {
}

func (ArangoMemberState) ElementType() reflect.Type {
	return reflect.TypeOf((*arangoMemberState)(nil)).Elem()
}

type arangoMemberArgs struct {
	ApiVersion *string            `pulumi:"apiVersion"`
	Kind       *string            `pulumi:"kind"`
	Metadata   *metav1.ObjectMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a ArangoMember resource.
type ArangoMemberArgs struct {
	ApiVersion pulumi.StringPtrInput
	Kind       pulumi.StringPtrInput
	Metadata   metav1.ObjectMetaPtrInput
}

func (ArangoMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*arangoMemberArgs)(nil)).Elem()
}

type ArangoMemberInput interface {
	pulumi.Input

	ToArangoMemberOutput() ArangoMemberOutput
	ToArangoMemberOutputWithContext(ctx context.Context) ArangoMemberOutput
}

func (*ArangoMember) ElementType() reflect.Type {
	return reflect.TypeOf((**ArangoMember)(nil)).Elem()
}

func (i *ArangoMember) ToArangoMemberOutput() ArangoMemberOutput {
	return i.ToArangoMemberOutputWithContext(context.Background())
}

func (i *ArangoMember) ToArangoMemberOutputWithContext(ctx context.Context) ArangoMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ArangoMemberOutput)
}

type ArangoMemberOutput struct{ *pulumi.OutputState }

func (ArangoMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ArangoMember)(nil)).Elem()
}

func (o ArangoMemberOutput) ToArangoMemberOutput() ArangoMemberOutput {
	return o
}

func (o ArangoMemberOutput) ToArangoMemberOutputWithContext(ctx context.Context) ArangoMemberOutput {
	return o
}

func (o ArangoMemberOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArangoMember) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

func (o ArangoMemberOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ArangoMember) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o ArangoMemberOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v *ArangoMember) metav1.ObjectMetaPtrOutput { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ArangoMemberInput)(nil)).Elem(), &ArangoMember{})
	pulumi.RegisterOutputType(ArangoMemberOutput{})
}
